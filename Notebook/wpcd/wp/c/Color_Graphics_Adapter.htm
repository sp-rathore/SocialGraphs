<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html dir="ltr" lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
  <meta content="IBM Color Graphics Adapter,Alley Cat (game),Castle Master,Arachne (web browser),1982,8514 (display standard),ASCII art,California Games,Cathode ray tube,Color Graphics Adapter,Computer display standard" name="keywords" />
  <link href="../../favicon.ico" rel="shortcut icon" />
  <link href="../../wp/w/Wikipedia_Text_of_the_GNU_Free_Documentation_License.htm" rel="copyright" />
  <title>IBM Colour Graphics Adapter</title>
  <style media="screen,projection" type="text/css">/*<![CDATA[*/ @import "../../css/wp-monobook-main.css"; /*]]>*/</style>
  <link href="../../css/wp-commonPrint.css" media="print" rel="stylesheet" type="text/css" />
  <!--[if lt IE 5.5000]><style type="text/css">@import "../../css/IE50Fixes.css";</style><![endif]-->
  <!--[if IE 5.5000]><style type="text/css">@import "../../css/IE55Fixes.css";</style><![endif]-->
  <!--[if IE 6]><style type="text/css">@import "../../css/IE60Fixes.css";</style><![endif]-->
  <!--[if IE 7]><style type="text/css">@import "../../css/IE70Fixes.css";</style><![endif]-->
  <!--[if lt IE 7]><script type="text/javascript" src="../../js/IEFixes.js"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->
  <script type="text/javascript">
			var skin = "monobook";
			var stylepath = "/skins-1.5";

			var wgArticlePath = "/wiki/$1";
			var wgScriptPath = "/w";
			var wgServer = "http://en.wikipedia.org";
                        
			var wgCanonicalNamespace = "";
			var wgNamespaceNumber = 0;
			var wgPageName = "IBM_Color_Graphics_Adapter";
			var wgTitle = "IBM Colour Graphics Adapter";
			var wgArticleId = 474231;
			var wgIsArticle = true;
                        
			var wgUserName = null;
			var wgUserLanguage = "en";
			var wgContentLanguage = "en";
		</script>
  <script src="../../js/wikibits.js" type="text/javascript"><!-- wikibits js --></script>
  <script src="../../js/wp.js" type="text/javascript"><!-- site js --></script>
  <style type="text/css">/*<![CDATA[*/
@import "../../css/wp-common.css";
@import "../../css/wp-monobook.css";
@import "../../css/wp.css";
/*]]>*/</style>
  <!-- Head Scripts -->
 </head>
 <body class="mediawiki ns-0 ltr page-IBM_Color_Graphics_Adapter">
  <div id="globalWrapper">
   <div id="column-content">
    <div id="content"><a id="top" name="top"></a><h1 class="firstHeading">IBM Colour Graphics Adapter</h1>
     <div id="bodyContent">
      <h3 id="siteSub"><a href="../../index.htm">2007 Schools Wikipedia Selection</a>. Related subjects: <a href="../index/subject.IT.Computing_hardware_and_infrastructure.htm">Computing hardware and infrastructure</a></h3>
      <!-- start content -->
      <div class="metadata topicon" id="featured-star" style="right:10px; display:none;">
       <div style="position: relative; width: 14px; height: 14px; overflow: hidden">
        <div style="position: absolute; top: 0px; left: 0px; font-size: 100px; overflow: hidden; line-height: 100px; z-index: 3"><!--del_lnk--> <span title="This is a featured article. Click here for more information.">&nbsp;&nbsp;&nbsp;</span></div>
        <div style="position: absolute; top: 0px; left: 0px; z-index: 2"><a class="image" href="../../images/0/24.png.htm" title="This is a featured article. Click here for more information."><img alt="This is a featured article. Click here for more information." height="14" longdesc="/wiki/Image:LinkFA-star.png" src="../../images/0/24.png" width="14" /></a></div>
       </div>
      </div>
      <p>The <b>Colour Graphics Adapter</b> (<b>CGA</b>), introduced in 1981, was <!--del_lnk--> IBM&#39;s first color graphics card (originally sold under the name &quot;Color/Graphics Monitor Adapter&quot;), and the first colour <!--del_lnk--> computer display standard for the <!--del_lnk--> IBM PC.<p>The standard IBM CGA graphics card was equipped with 16 <!--del_lnk--> kilobytes of <!--del_lnk--> video memory, and could be connected either to a NTSC-compatible monitor or TV via an RCA jack, or to a dedicated RGBI <!--del_lnk--> CRT monitor. Based around the <!--del_lnk--> Motorola <!--del_lnk--> MC6845 display controller, the CGA card featured several graphics and <!--del_lnk--> text modes. The highest resolution of any mode was 640&times;200, and the highest colour depth supported was 4-bit (16 colors).<p>
       <script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script><a id="The_CGA_color_palette" name="The_CGA_color_palette"></a><h2> <span class="mw-headline">The CGA colour palette</span></h2>
      <table border="1" cellpadding="5" style="border-style: none; float: right; clear: right; margin-left: 1.5em; text-align:center; hspace=10px">
       <tr>
        <th colspan="2">&#39;&#39;&#39;Full CGA 16-colour palette&#39;&#39;&#39;</th>
       </tr>
       <tr>
        <td style="color: white; background-color: #000000">0 &mdash; black<br /> #000000</td>
        <td style="color: white; background-color: #555555">8 &mdash; (dark) gray<br /> #555555</td>
       </tr>
       <tr>
        <td style="color: white; background-color: #0000AA">1 &mdash; blue<br /> #0000AA</td>
        <td style="color: white; background-color: #5555FF">9 &mdash; bright blue<br /> #5555FF</td>
       </tr>
       <tr>
        <td style="color: white; background-color: #00AA00">2 &mdash; green<br /> #00AA00</td>
        <td style="color: black; background-color: #55FF55">10 &mdash; bright green<br /> #55FF55</td>
       </tr>
       <tr>
        <td style="color: white; background-color: #00AAAA">3 &mdash; cyan<br /> #00AAAA</td>
        <td style="color: black; background-color: #55FFFF">11 &mdash; bright cyan<br /> #55FFFF</td>
       </tr>
       <tr>
        <td style="color: white; background-color: #AA0000">4 &mdash; red<br /> #AA0000</td>
        <td style="color: black; background-color: #FF5555">12 &mdash; bright red<br /> #FF5555</td>
       </tr>
       <tr>
        <td style="color: white; background-color: #AA00AA">5 &mdash; magenta<br /> #AA00AA</td>
        <td style="color: black; background-color: #FF55FF">13 &mdash; bright magenta<br /> #FF55FF</td>
       </tr>
       <tr>
        <td style="color: white; background-color: #AA5500">6 &mdash; brown<br /> #AA5500</td>
        <td style="color: black; background-color: #FFFF55">14 &mdash; yellow<br /> #FFFF55</td>
       </tr>
       <tr>
        <td style="color: black; background-color: #AAAAAA">7 &mdash; white (light gray)<br /> #AAAAAA</td>
        <td style="color: black; background-color: #FFFFFF">15 &mdash; bright white<br /> #FFFFFF</td>
       </tr>
      </table>
      <p>The CGA&#39;s maximum colour depths of four bits results in a palette of 16 colors. The lower three bits, representing red, green and blue, corresponded to the three cathode rays, with black meaning all rays were almost off. Cyan was a mix between the blue and green rays, magenta was a mix between blue and red and orange-brown was a mix between green and red. White (or light gray) was a mix between all three rays.<p>The remaining 8 colors were achieved by turning on a fourth &quot;intensifier&quot; bit, giving a brighter version of each color, although the dark gray colour was indistinguishable from black with many monitors. CGA&#39;s &quot;RGB plus intensity bit&quot; design was also called <i>RGBI</i>.<p>There is some confusion regarding color #6 on RGBI monitors: If one strictly follows the RGBI color model, color #6 would appear as dark yellow (#AAAA00) (see below). However, IBM chose to include additional circuitry in the 5153 color monitor to detect colour #6 and lower the green component to yield a more pleasing brown-tone (#AA5500), so most &quot;CGA compatible&quot; monitors do the same. As to <i>why</i> IBM chose to do this, the predominant theory is that IBM wanted to make the colors more closely match the colors of the 3270 mainframe terminal, specifically the 3279. <p><a id="Standard_text_modes" name="Standard_text_modes"></a><h2> <span class="mw-headline">Standard text modes</span></h2>
      <p>CGA offered two text modes:<ul>
       <li><b>40&times;25 characters</b> in up to 16 colors. Each character was a pattern of 8&times;8 dots. The effective screen resolution in this mode was 320&times;200 pixels (a pixel aspect ratio of 1:1.2), though individual pixels could not be addressed independently. The choice of patterns for any location was thus limited to one of the 256 available characters, the patterns for which were stored in a ROM chip on the card itself. The display font in text mode was therefore fixed and could not be changed (although when using the original IBM CGA in an original IBM PC it was possible to select one of two different fonts&mdash;normal or thin&mdash;by changing a <!--del_lnk--> jumper. Many clones didn&#39;t offer this possibility). This mode allowed each character a foreground and a background colour, both of which could be freely chosen from the entire CGA palette (see table)&mdash;e.g. red on yellow text for one character, white on black for the next and cyan on gray for yet another. The card had sufficient video RAM for 8 different text pages in this mode.</ul>
      <ul>
       <li><b>80&times;25 characters</b> in up to 16 colors. Each character was again an 8&times;8 dot pattern (the same character set was used as for 40&times;25), in a pixel aspect ratio of 1:2.4. The effective screen resolution of this mode was 640&times;200 pixels. Again, the pixels could not be individually addressed. Since there were twice as many characters on the screen in this mode, the card had enough video RAM just for 4 different text pages.</ul>
      <p><a id="Standard_RGB_graphics_modes" name="Standard_RGB_graphics_modes"></a><h2> <span class="mw-headline">Standard RGB graphics modes</span></h2>
      <table align="right" border="1" cellpadding="5" style="border-style: none">
       <tr>
        <td rowspan="8" style="border: none" width="5%">
        </td>
        <td align="center" colspan="2" height="10%"><b>Fixed CGA 4-colour palette #1</b></td>
       </tr>
       <tr>
        <td height="10%" style="color: white; background-color: #000000" width="45%">default</td>
        <td height="10%" style="color: white; background-color: #AA00AA" width="45%">5 &mdash; magenta</td>
       </tr>
       <tr>
        <td height="10%" style="color: white; background-color: #00AAAA">3 &mdash; cyan</td>
        <td style="color: black; background-color: #AAAAAA">7 &mdash; white (light gray)</td>
       </tr>
       <tr>
        <td colspan="2" height="5%" style="border-style: none">
        </td>
       </tr>
       <tr>
        <td align="center" colspan="2" height="10%"><b>Fixed CGA 4-colour palette #2</b></td>
       </tr>
       <tr>
        <td height="10%" style="color: white; background-color: #000000">default</td>
        <td height="10%" style="color: white; background-color: #AA0000">4 &mdash; red</td>
       </tr>
       <tr>
        <td height="10%" style="color: white; background-color: #00AA00">2 &mdash; green</td>
        <td height="10%" style="color: white; background-color: #AA5500">6 &mdash; brown (orange)</td>
       </tr>
      </table>
      <p>CGA offered two commonly-used graphics modes:<ul>
       <li><b>320&times;200 pixels</b>, as with the 40&times;25 text mode. In the graphics mode, however, each pixel could be addressed independently. The tradeoff was that only 4 colors could be displayed at a time. These four colors could not be freely chosen from the 16 CGA colors &mdash; there were only two official palettes for this mode: <ol>
         <li>Magenta, cyan, white and background colour (black by default).<li>Red, green, brown/yellow and background colour (black by default).</ol>
      </ul>
      <p>By setting the high-intensity bit, brighter versions of these modes could be accessed.<dl>
       <dd>The 1:1.2 pixel aspect ratio needed to be taken into account when drawing large geometrical shapes on the screen.</dl>
      <ul>
       <li><b>640&times;200</b> pixels, as with the 80&times;25 text mode. All pixels could be addressed independently. This mode was monochrome, offering only black and white as colors (though this could be changed), with a pixel aspect ratio of 1:2.4.</ul>
      <p>In text mode, font bitmap data came from the character ROM on the card, which was only available to the card itself. In graphics modes, text output by the BIOS used two separate tables: The first half of the character set (128 characters) was supplied by a table in the BIOS at F000:FA6E, and the second half was supplied by the location pointed to by interrupt 1F (0000:007C). The second half of the character set would display as blanks (or garbage, depending on implementation) unless they were explicitly defined, usually by a utility such as GRAFTABL or by the calling program.<p><a id="Further_RGB_graphics_modes_and_tweaks" name="Further_RGB_graphics_modes_and_tweaks"></a><h2> <span class="mw-headline">Further RGB graphics modes and tweaks</span></h2>
      <table align="right" border="1" cellpadding="5" style="border-style: none">
       <tr>
        <td rowspan="8" style="border: none" width="5%">
        </td>
        <td align="center" colspan="2" height="10%"><b>&quot;Tweaked&quot; 3rd Fixed CGA 4-colour palette</b></td>
       </tr>
       <tr>
        <td height="10%" style="color: white; background-color: #000000" width="45%">default</td>
        <td height="10%" style="color: white; background-color: #AA0000" width="45%">4 - red</td>
       </tr>
       <tr>
        <td height="10%" style="color: white; background-color: #00AAAA">3 &mdash; cyan</td>
        <td style="color: black; background-color: #AAAAAA">7 &mdash; white (light gray)</td>
       </tr>
       <tr>
        <td colspan="2" height="5%" style="border-style: none">
        </td>
       </tr>
      </table>
      <p>A number of official and unofficial features existed that could be exploited to achieve better graphics on an RGBI monitor.<ul>
       <li>In 320&times;200 graphics mode, the background color, which defaulted to black on mode initialization, could be changed to any of the other 15 colors of the CGA palette. This allowed for some variation, as well as flashing effects, as the background colour could be changed without having to redraw the screen.<li>In 640&times;200 graphics mode, the foreground colour could be changed from its usual white to any of the other 15 colors.<li>In text mode, the border colour (displayed outside the regular display area) could be changed from its usual black to any of the other 15 colors.<li>A third 320&times;200 4-color palette was achieved by enabling the monochrome bit while in color graphics mode. This switched the current graphics palette to red, cyan, white and the background colour.<li>Through precision timing, it was possible to switch to another palette while the screen content was still being drawn, allowing the use of any one of the 6 palettes per scanline. The best example of this in use is the game <!--del_lnk--> California Games <!--del_lnk-->  when run on a stock 4.77 MHz 8088. (Running it on a faster computer did not produce the effect, as the method the programmers used to switch palettes at predetermined locations was extremely sensitive to machine speed.) The same could be done with the background colour, to create the river and road in <!--del_lnk--> frogger.<li>Additional colors were often approximated using <!--del_lnk--> dithering, although the low resolution made it very apparent.</ul>
      <p>Some of these above tweaks could even be combined. Examples could be found in several games <!--del_lnk--> . Most software titles did not use these possibilities, but there were a few impressive exceptions.<p><a id="The_160.C3.97100_16_color_mode" name="The_160.C3.97100_16_color_mode"></a><h3> <span class="mw-headline">The 160&times;100 16 colour mode</span></h3>
      <p>Technically, this mode was not a graphics mode, but a tweak of the 80&times;25 text mode. The character cell height register was changed to display only 2 lines per character cell instead of the normal 8 lines. This quadrupled the number of text rows displayed from 25 to 100. These &quot;tightly squeezed&quot; text characters were not full characters. The system only displayed their top two lines of pixels (8 each) before moving on to the next row.<table border="1" style="border-style: none; float: left; clear: right; margin-right: 1em;">
       <tr>
        <td>&nbsp;<a class="image" href="../../images/243/24336.gif.htm" title="Image:ASCII.221.character.gif"><img alt="Image:ASCII.221.character.gif" height="17" longdesc="/wiki/Image:ASCII.221.character.gif" src="../../images/243/24336.gif" width="10" /></a>&nbsp;</td>
        <td>&nbsp;<sub>Character 221.</sub>&nbsp;</td>
       </tr>
       <tr>
        <td>&nbsp;<a class="image" href="../../images/243/24337.gif.htm" title="Image:Half-block.character.blue.red.gif"><img alt="Image:Half-block.character.blue.red.gif" height="17" longdesc="/wiki/Image:Half-block.character.blue.red.gif" src="../../images/243/24337.gif" width="10" /></a>&nbsp;</td>
        <td>&nbsp;<sub>221 with blue text and red background colour.</sub>&nbsp;</td>
       </tr>
       <tr>
        <td>&nbsp;<a class="image" href="../../images/243/24338.gif.htm" title="Image:Half-block.character.red.blue.gif"><img alt="Image:Half-block.character.red.blue.gif" height="17" longdesc="/wiki/Image:Half-block.character.red.blue.gif" src="../../images/243/24338.gif" width="10" /></a>&nbsp;</td>
        <td>&nbsp;<sub>221 with red text and blue background colour.</sub>&nbsp;</td>
       </tr>
       <tr>
        <td>&nbsp;<a class="image" href="../../images/243/24339.gif.htm" title="Image:ASCII.222.character.gif"><img alt="Image:ASCII.222.character.gif" height="17" longdesc="/wiki/Image:ASCII.222.character.gif" src="../../images/243/24339.gif" width="10" /></a>&nbsp;</td>
        <td>&nbsp;<sub>Character 222.</sub>&nbsp;</td>
       </tr>
      </table>
      <p>Character 221 in the extended ASCII character set consisted of a box occupying the entire left half of the character matrix. (Character 222 consisted of a box occupying the entire right half.)<p>Because each character could be assigned different foreground and background colors, it could be colored (for example) blue on the left (foreground color) and bright red on the right (background colour). This could be reversed by swapping the foreground and background colors.<p>Using either character 221 or 222, each half of each truncated character cell could thus be treated as an individual pixel&mdash; making 160 horizontal pixels available per line. Thus, 160&times;100 pixels at 16 colors, with an aspect ratio of 1:1.2, were possible.<table border="1" style="border-style: none; float: left; clear: right; margin-right: 1em;">
       <tr>
        <td align="center">
         <table style="border-style: none; float: center; margin-right: 1em;">
          <tr>
           <td align="center">
            <div class="center">
             <div class="floatnone"><span><a class="image" href="../../images/4/486.gif.htm" title=""><img alt="" height="78" longdesc="/wiki/Image:Single.pixel.in.CGA.160x100.mode.gif" src="../../images/4/486.gif" width="77" /></a></span></div>
            </div>
           </td>
           <td align="left">
            <p>
             <br /><small>A single big &quot;pixel&quot; in 160&times;100 mode.<br /> This is the two top rows of half of character 221.<br /> Note the 8 constituent pixels and the<br /> overall 1:1.2 aspect ratio.</small></td>
          </tr>
         </table>
        </td>
       </tr>
      </table>
      <p>Although a roundabout way of achieving 16 colour graphics display, this worked quite well <!--del_lnk-->  and the mode was even mentioned (although not explained) in IBM&#39;s official hardware documentation.<p>More detail could be achieved in this mode by using other characters, combining <!--del_lnk--> ASCII art with the aforesaid technique.<p>Because the CGA had 16384 bytes of graphics memory, not 16000, it was just as easy to set the number of lines in this mode to 102 instead of 100 for a resolution of 160x102. This used extra video memory that was normally unused. However most games did not do this, perhaps out of fear it would only work on some monitors but not others.<p>The same text cell height reduction technique could also be used with the 40&times;25 text mode. This only made sense when using ASCII art, because without it the resulting resolution would only have been 80&times;100 <!--del_lnk-->  <!--del_lnk-->  <!--del_lnk--> .<p><a id="Composite_video_display" name="Composite_video_display"></a><h2> <span class="mw-headline">Composite video display</span></h2>
      <p>While connecting a dedicated RGBI color monitor was the more common configuration, it was also possible to connect an NTSC-compatible composite colour monitor, or even a normal TV set, to the CGA&#39;s RCA output jack. As is common with NTSC composite video, the separation between luminance and chrominance was far from perfect, yielding <i>cross-colour artifacts</i>, or colour &quot;smearing&quot;. This was especially a problem with 80-column text (left: RGBI, right: composite):<div class="center">
       <div class="floatnone"><span><!--del_lnk--> <img alt="" height="184" longdesc="/wiki/Image:CGA_CompVsRGB_Text.png" src="../../images/1x1white.gif" title="This image is not present because of licensing restrictions" width="590" /></span></div>
      </div>
      <p>For this reason, using an RGBI colour monitor was the preferred configuration.<p><a id="A_flaw_turned_into_an_advantage" name="A_flaw_turned_into_an_advantage"></a><h3> <span class="mw-headline">A flaw turned into an advantage</span></h3>
      <p>However, programmers soon found out that this flaw could be turned into an asset, as distinct patterns of high-resolution dots would &quot;smear&quot; into consistent areas of solid colors, thus allowing the display of completely new colors. Since these new colors are the result of cross-colour artifacting, they are often called <i>artifact colors</i>. Both the standard 320x200 four-colour and the 640x200 black-and-white graphics modes could be used with this technique:<table cellpadding="0" cellspacing="0" class="gallery">
       <tr>
        <td>
         <div class="gallerybox">
          <div class="thumb" style="padding: 54px 0;"><a href="../../images/243/24342.png.htm" title="Image:CGA CompVsRGB 320p0.png"><img alt="" height="38" src="../../images/243/24342.png" width="120" /></a></div>
          <div class="gallerytext">
           <p>320x200 palette 1</div>
         </div>
        </td>
        <td>
         <div class="gallerybox">
          <div class="thumb" style="padding: 54px 0;"><a href="../../images/243/24343.png.htm" title="Image:CGA CompVsRGB 320p1.png"><img alt="" height="38" src="../../images/243/24343.png" width="120" /></a></div>
          <div class="gallerytext">
           <p>320x200 palette 2</div>
         </div>
        </td>
        <td>
         <div class="gallerybox">
          <div class="thumb" style="padding: 54px 0;"><a href="../../images/243/24344.png.htm" title="Image:CGA CompVsRGB 640.png"><img alt="" height="38" src="../../images/243/24344.png" width="120" /></a></div>
          <div class="gallerytext">
           <p>640x200</div>
         </div>
        </td>
       </tr>
      </table>
      <p>Thus, with the choice of 320x200 vs. 640x200 mode, the choice of palette (1 or 2) and the freely-selectable colour 0 in 320x200 modes (see above), each one of these parameters resulted in a different set of artifact colors, making for a total gamut of well over a hundred colors, of which 16 can be displayed at the same time.<p><a id="Availability" name="Availability"></a><h3> <span class="mw-headline">Availability</span></h3>
      <p>The 320x200 variant of this technique (see above) was just how the standard BIOS-supported graphics mode looked on a composite color monitor. The 640x200 variant however required modifying a bit (color burst disable) directly in the CGA&#39;s hardware registers, as a result, it is usually referred to as a seperate &quot;mode&quot;, often just as &quot;the&quot; composite colour mode, since its more distinctive set of artifact colors led it to being more commonly used than the 320x200 variant.<p>Being completely dependent on the NTSC encoding/decoding process, composite colour artifacting is not available on an RGBI monitor, nor is it emulated by EGA, VGA or contemporary graphics adapters.<p><a id="Resolution_and_usage" name="Resolution_and_usage"></a><h3> <span class="mw-headline">Resolution and usage</span></h3>
      <p>Due to the relationship between the CGA&#39;s pixel clock and the NTSC color subcarrier, the effective horizontal resolution is reduced to 160 pixels of any colour, or 320 pixels when limiting oneself to black and white pixels.<p>This low resolution led to composite color artifacting being used almost exclusively in games, with many of the more high-profile titles optionally, sometimes exclusively, offering graphics optimized for composite colour monitors:<table cellpadding="0" cellspacing="0" class="gallery">
       <tr>
        <td>
         <div class="gallerybox">
          <div class="gallerytext">
           <p>Ultima II</div>
         </div>
        </td>
        <td>
         <div class="gallerybox">
          <div class="gallerytext">
           <p>King&#39;s Quest</div>
         </div>
        </td>
       </tr>
      </table>
      <p><a id="Bugs_and_errata" name="Bugs_and_errata"></a><h2> <span class="mw-headline">Bugs and errata</span></h2>
      <p>CGA&#39;s most noticeable hardware bug was <i>snow</i> in 80&times;25 text mode. The display RAM on the original IBM CGA card was not dual-ported &mdash; read and write access was not possible simultaneously. As such, random pixels were displayed whenever display memory was written to by the CPU at the same time as being read by the display hardware. This bug was fixed in most third-party clones, but still existed in some iterations (such as the AT&amp;T PC 6300 display adapter).<p>For programmers, another annoyance was that CGA display memory in graphics modes was interlaced. Normally, video memory is strictly linear: the next row of display data corresponds to the next row of pixels. But with CGA, the next row of display data corresponded to the row of pixels <i>two</i> rows down. This continued until the end of the screen and only with the second half of display data were the in-between rows addressed. So the first half of display memory was for rows 0, 2, 4, etc., until the end of the screen and the second half of CGA RAM was for rows 1, 3, 5, etc. This added calculation steps to most CGA graphics operations if the programmer wanted to avoid visual artifacts when updating the screen.<table align="right" border="1" cellpadding="5" style="border-style: none">
       <tr>
        <td rowspan="8" style="border: none" width="5%">
        </td>
        <td align="center" colspan="2" height="10%"><b>Dark Yellow</b></td>
       </tr>
       <tr>
        <td height="10%" style="color: white; background-color: #AAAA00" width="45%">#AAAA00</td>
       </tr>
      </table>
      <p>As previously mentioned, IBM designed the 5153 CGA monitor to intentionally darken color index #6 from dark yellow to brown; however, some clone monitors did not have this circuitry. On such monitors, or 5153 monitors where this circuitry had failed, color index #6 would remain dark yellow (see colour example).<p>The total amount of video memory on a CGA card (16384 total bytes) is not fully utilised by all BIOS-initiated video modes (40&times;25 and 80&times;25 text modes, 320&times;200 and 640&times;200 graphics modes). Only by setting up video modes manually using CGA port writes can all 16384 bytes be displayed as pixel elements simultaneously.<p><a id="Specifications" name="Specifications"></a><h2> <span class="mw-headline">Specifications</span></h2>
      <p><a id="Connector" name="Connector"></a><h3> <span class="mw-headline">Connector</span></h3>
      <p>Pin numbers (looking at socket):<p><a class="image" href="../../images/243/24347.png.htm" title=""><img alt="" height="79" longdesc="/wiki/Image:DE9_Diagram.svg" src="../../images/243/24347.png" width="177" /></a><table class="prettytable">
       <caption><b>Pin assignments</b></caption>
       <tr>
        <th><b>Pin</b></th>
        <th><b>Function</b></th>
       </tr>
       <tr>
        <td>1</td>
        <td>Ground</td>
       </tr>
       <tr>
        <td>2</td>
        <td>Ground</td>
       </tr>
       <tr>
        <td>3</td>
        <td>Red</td>
       </tr>
       <tr>
        <td>4</td>
        <td>Green</td>
       </tr>
       <tr>
        <td>5</td>
        <td>Blue</td>
       </tr>
       <tr>
        <td>6</td>
        <td>Intensity</td>
       </tr>
       <tr>
        <td>7</td>
        <td>Reserved</td>
       </tr>
       <tr>
        <td>8</td>
        <td>Horizontal Sync</td>
       </tr>
       <tr>
        <td>9</td>
        <td>Vertical Sync</td>
       </tr>
      </table>
      <p><a id="Signal" name="Signal"></a><h3> <span class="mw-headline">Signal</span></h3>
      <table class="wikitable">
       <tr>
        <th>Type</th>
        <td>Digital, TTL</td>
       </tr>
       <tr>
        <th>Resolution</th>
        <td>640h &times; 200v, 320h &times; 200v</td>
       </tr>
       <tr>
        <th>H-freq</th>
        <td>15.75kHz</td>
       </tr>
       <tr>
        <th>V-freq</th>
        <td>60Hz</td>
       </tr>
       <tr>
        <th>Colors</th>
        <td>16</td>
       </tr>
      </table>
      <p><a id="Screenshots" name="Screenshots"></a><h2> <span class="mw-headline">Screenshots</span></h2>
      <table cellpadding="0" cellspacing="0" class="gallery">
       <tr>
        <td>
         <div class="gallerybox">
          <div class="gallerytext">
           <p><!--del_lnk--> Alley Cat using palette 1 in low-intensity.</div>
         </div>
        </td>
        <td>
         <div class="gallerybox">
          <div class="gallerytext">
           <p><!--del_lnk--> Castle Master using palette 2 in high-intensity.</div>
         </div>
        </td>
        <td>
         <div class="gallerybox">
          <div class="thumb" style="padding: 35px 0;"><a href="../../images/4/492.png.htm" title="Image:ArachneCGA.png"><img alt="" height="75" src="../../images/4/492.png" width="120" /></a></div>
          <div class="gallerytext">
           <p><!--del_lnk--> Arachne running 640&times;200 mode, default foreground colour.</div>
         </div>
        </td>
       </tr>
      </table>
      <p><a id="Competing_adapters" name="Competing_adapters"></a><h2> <span class="mw-headline">Competing adapters</span></h2>
      <p>CGA had two main competitors:<ul>
       <li>For business and word processing use, IBM launched its <!--del_lnk--> Monochrome Display Adapter (MDA) at the same time as CGA. The MDA produced a higher resolution text display in 80&times;25 mode, rendering each character in a box of 9&times;14 pixels, of which 7&times;11 were the character itself. This produced sharper characters than the CGA&#39;s 8&times;8 dots text character matrix allowed. Because of this and CGA&#39;s higher price at the time, MDA was often preferred for business use.</ul>
      <ul>
       <li>In <!--del_lnk--> 1982, the non-IBM <!--del_lnk--> Hercules Graphics Card (HGC) was introduced. In addition to an MDA-compatible text mode, it offered a monochrome graphics mode. With a resolution of 720&times;348 pixels, the graphics mode was better than what CGA could produce. The Hercules adapter&#39;s offer of better monochrome graphics and its ability to work with less expensive monochrome monitors made it a desirable choice for many. As early as 1985, <!--del_lnk--> emulator memory-resident programs such as SIMCGA were available, allowing the display of CGA graphics mode data in Hercules graphics modes (the result looking like crude <!--del_lnk--> dithering).</ul>
      <p>A less widely-used competitor was the <!--del_lnk--> Plantronics <!--del_lnk--> Colorplus, a CGA-compatible card which doubled the video RAM to 32k, thus allowing 16 colors at 320&times;200 resolution and 4 colors at 640&times;200 resolution. The &quot;extended CGA&quot; modes provided by the IBM PCjr and Tandy 1000 were similar to these modes.<p>The CGA card was succeeded in the consumer space by IBM&#39;s <!--del_lnk--> Enhanced Graphics Adapter (EGA) card, which supported most of CGA&#39;s modes, and added an additional resolution (640&times;350) as well as a software-selectable palette of 16 colors out of 64 in both text and graphics modes.<p><a id="Market_penetration" name="Market_penetration"></a><h2> <span class="mw-headline">Market penetration</span></h2>
      <p>When IBM introduced its PC in 1981, the CGA standard, though introduced at the same time, was used relatively little at first. Most people bought PCs for business computing. For gaming, other brands of <!--del_lnk--> home computers were much more popular, and at that time colour graphics were considered to have little more than toy value. Thus, most early PC buyers opted for the cheaper text-only <!--del_lnk--> Monochrome Display Adapter (MDA) instead of CGA.<p>In 1982 came the introduction of the <!--del_lnk--> Hercules Graphics Card, which offered monochrome-only graphics at a much higher resolution than the CGA card and was more compatible with MDA, further eroding CGA&#39;s market share. The HGC was arguably the most commonly-utilized card connected to monochrome monitors throughout the IBM PC&#39;s life.<p>Things changed in 1984 when IBM introduced the <!--del_lnk--> PC AT and the <!--del_lnk--> Enhanced Graphics Adapter (EGA). Along with this move, the price of the older CGA card was lowered considerably; it now became an attractive low-cost solution and was soon adopted by the new PC cloning companies as well. Entry-level non-AT PCs with CGA graphics sold very well during the next few years, and consequently there were many games released for such systems, despite their limitations. CGA&#39;s popularity started to wane after VGA became IBM&#39;s high-level solution and EGA the entry-level solution in 1987.<div class="printfooter"> Retrieved from &quot;<!--del_lnk--> http://en.wikipedia.org/wiki/IBM_Color_Graphics_Adapter&quot;</div>
      <!-- end content -->
      <div class="visualClear">
      </div>
     </div>
    </div>
   </div>
   <!-- end of the left (by default at least) column -->
   <div class="visualClear">
   </div>
   <div id="footer">
    <div class="center"> This reference article is mainly selected from the English Wikipedia with only minor checks and changes (see www.wikipedia.org for details of authors and sources) and is available under the <nobr><a href="../../wp/w/Wikipedia_Text_of_the_GNU_Free_Documentation_License.htm">GNU Free Documentation License</a></nobr>. See also our <b><a href="../../disclaimer.htm">Disclaimer</a></b>. </div>
   </div>
   <script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
  </div>
  
 </body>
</html>
