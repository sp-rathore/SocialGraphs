<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html dir="ltr" lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
  <meta content="TeX,1910,1965,1969,1976,1977,1978,1982,1983,1989,1990" name="keywords" />
  <link href="../../favicon.ico" rel="shortcut icon" />
  <link href="../../wp/w/Wikipedia_Text_of_the_GNU_Free_Documentation_License.htm" rel="copyright" />
  <title>TeX</title>
  <style media="screen,projection" type="text/css">/*<![CDATA[*/ @import "../../css/wp-monobook-main.css"; /*]]>*/</style>
  <link href="../../css/wp-commonPrint.css" media="print" rel="stylesheet" type="text/css" />
  <!--[if lt IE 5.5000]><style type="text/css">@import "../../css/IE50Fixes.css";</style><![endif]-->
  <!--[if IE 5.5000]><style type="text/css">@import "../../css/IE55Fixes.css";</style><![endif]-->
  <!--[if IE 6]><style type="text/css">@import "../../css/IE60Fixes.css";</style><![endif]-->
  <!--[if IE 7]><style type="text/css">@import "../../css/IE70Fixes.css";</style><![endif]-->
  <!--[if lt IE 7]><script type="text/javascript" src="../../js/IEFixes.js"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->
  <script type="text/javascript">
			var skin = "monobook";
			var stylepath = "/skins-1.5";

			var wgArticlePath = "/wiki/$1";
			var wgScriptPath = "/w";
			var wgServer = "http://en.wikipedia.org";

			var wgCanonicalNamespace = "";
			var wgNamespaceNumber = 0;
			var wgPageName = "TeX";
			var wgTitle = "TeX";
			var wgArticleId = 30065;
			var wgCurRevisionId = 91558278;
			var wgIsArticle = true;
		
			var wgUserName = null;
			var wgUserLanguage = "en";
			var wgContentLanguage = "en";
		</script>
  <script src="../../js/wikibits.js" type="text/javascript"><!-- wikibits js --></script>
  <script src="../../js/wp.js" type="text/javascript"><!-- site js --></script>
  <style type="text/css">/*<![CDATA[*/
@import "../../css/wp-common.css";
@import "../../css/wp-monobook.css";
@import "../../css/wp.css";
/*]]>*/</style>
  <!-- Head Scripts -->
 </head>
 <body class="mediawiki ns-0 ltr page-TeX">
  <div id="globalWrapper">
   <div id="column-content">
    <div id="content"><a id="top" name="top"></a><h1 class="firstHeading">TeX</h1>
     <div id="bodyContent">
      <h3 id="siteSub"><a href="../../index.htm">2007 Schools Wikipedia Selection</a>. Related subjects: <a href="../index/subject.IT.Software.htm">Software</a></h3>
      <!-- start content -->
      <table cellspacing="5" class="infobox" style="width: 24em; font-size: 90%; text-align: left;">
       <tr>
        <td colspan="2" style="text-align: center; font-size: 130%; font-weight: bold;">TeX</td>
       </tr>
       <tr>
        <td colspan="2" style="text-align: center"><a class="image" href="../../images/220/22087.png.htm" title=""><img alt="" height="115" longdesc="/wiki/Image:TeX_logo.svg" src="../../images/220/22087.png" width="200" /></a></td>
       </tr>
       <tr>
        <th><!--del_lnk--> Developer:</th>
        <td><a href="../../wp/d/Donald_Knuth.htm" title="Donald Knuth">Donald Knuth</a></td>
       </tr>
       <tr>
        <th><!--del_lnk--> Latest release:</th>
        <td>3.141592 / December, <!--del_lnk--> 2002</td>
       </tr>
       <tr>
        <th><!--del_lnk--> OS:</th>
        <td><!--del_lnk--> Cross-platform</td>
       </tr>
       <tr>
        <th>Use:</th>
        <td><!--del_lnk--> Typesetting</td>
       </tr>
       <tr>
        <th><!--del_lnk--> License:</th>
        <td>freely modifiable, as long as the resulting program is not called TeX</td>
       </tr>
       <tr>
        <th><!--del_lnk--> Website:</th>
        <td><!--del_lnk--> http://www.tug.org/</td>
       </tr>
      </table>
      <p><b>TeX</b> (<!--del_lnk--> IPA: <span class="IPA" title="Pronunciation in IPA">/t&#x25B;x/</span> as in <!--del_lnk--> Greek, often <span class="IPA" title="Pronunciation in IPA">/t&#x25B;k/</span> in <a href="../../wp/e/English_language.htm" title="English language">English</a>; sometimes written <b>T<sub style="margin:0 -.1em 0 -.1em; font-size: 100%;">E</sub>X</b> in imitation of the logo) is a <!--del_lnk--> typesetting system <a href="../../wp/c/Computer_programming.htm" title="Computer programming">created</a> by <a href="../../wp/d/Donald_Knuth.htm" title="Donald Knuth">Donald Knuth</a>. Together with the <!--del_lnk--> METAFONT language for font description and the <!--del_lnk--> Computer Modern <!--del_lnk--> typeface, it was designed with two main goals in mind: first, to allow anybody to produce high-quality books using a reasonable amount of effort, and, second, to provide a system that would give the exact same results on all computers, now and in the future. It is <!--del_lnk--> free and is popular in <!--del_lnk--> academia, especially in the <a href="../../wp/m/Mathematics.htm" title="Mathematics">mathematics</a>, <a href="../../wp/p/Physics.htm" title="Physics">physics</a>, <a href="../../wp/c/Computer_science.htm" title="Computer science">computer science</a>, political science, and <a href="../../wp/e/Engineering.htm" title="Engineering">engineering</a> <a href="../../wp/c/Community.htm" title="Community">communities</a>. It has largely displaced <a href="../../wp/u/Unix.htm" title="Unix">Unix</a> <!--del_lnk--> troff, the other favored formatter, in many Unix installations, which use both for different purposes.<p>TeX is considered by some to be the best way to typeset complex mathematical formulae but especially in the form of <!--del_lnk--> LaTeX and other template packages, is now also being used for many other typesetting tasks.<p>
       <script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script><a id="History" name="History"></a><h2> <span class="mw-headline">History</span></h2>
      <p>When the first volume of Knuth&#39;s <!--del_lnk--> The Art of Computer Programming was published in <!--del_lnk--> 1969, it was typeset using <!--del_lnk--> monotype, a technology from the <a href="../../wp/1/19th_century.htm" title="19th century">19th century</a> which produced a &ldquo;<i>good classic style</i>&rdquo; appreciated by Knuth. When the second edition of the second volume was published, in <!--del_lnk--> 1976, the whole book had to be typeset again because the Monotype technology had been largely replaced by photographic techniques, and the original fonts were not available anymore. However, when Knuth received the <!--del_lnk--> galley proofs of the new book on <!--del_lnk--> 30 March <!--del_lnk--> 1977, he found them awful. Around that time, Knuth saw for the first time the output of a high-quality digital typesetting system, and became interested in digital typography. The disappointing galley proofs gave him the final motivation to solve the problem at hand once and for all by designing his own typesetting system. On <!--del_lnk--> 13 May 1977, he wrote a memo to himself describing the basic features of TeX.<p>He planned to finish it on his sabbatical in <!--del_lnk--> 1978, but as it happened the language was frozen only in <!--del_lnk--> 1989, more than ten years later. <!--del_lnk--> Guy Steele happened to be at <!--del_lnk--> Stanford during the summer of <!--del_lnk--> 1978, when Knuth was developing his first version of TeX. When Steele returned to <!--del_lnk--> MIT that fall, he rewrote TeX&#39;s I/O to run under the <!--del_lnk--> ITS operating system. The first version of TeX was written in the <!--del_lnk--> SAIL programming language to run on a <!--del_lnk--> PDP-10 under Stanford&#39;s <!--del_lnk--> WAITS operating system. For later versions of TeX, Knuth invented the concept of <!--del_lnk--> literate programming, a way of producing compilable <!--del_lnk--> source code and high quality cross-linked documentation (typeset in TeX, of course) from the same original file. The language used is called <!--del_lnk--> WEB and produces programs in <!--del_lnk--> Pascal.<p>A new version of TeX, rewritten from scratch and called TeX82, was published in <!--del_lnk--> 1982. Among other changes, the original <!--del_lnk--> hyphenation algorithm was replaced by a new algorithm written by <!--del_lnk--> Frank Liang. TeX82 also uses <!--del_lnk--> fixed-point arithmetic instead of <!--del_lnk--> floating-point, to ensure reproducibility of the results across different computer hardware, and includes a real, <!--del_lnk--> Turing-complete, programming language, following intense lobbying by Guy Steele.<p>In <!--del_lnk--> 1989, Donald Knuth released new versions of TeX and <!--del_lnk--> METAFONT. Despite his desire to keep the program stable, Knuth realised that 128 different characters for the text input were not enough to accommodate foreign languages; the main change in version 3.0 of TeX is thus the ability to work with 8-bits inputs, allowing 256 different characters in the text input.<p>Since version 3, TeX has used an idiosyncratic <!--del_lnk--> version numbering system, where updates have been indicated by adding an extra digit at the end of the decimal, so that the version number <!--del_lnk--> asymptotically approaches <a href="../../wp/p/Pi.htm" title="Pi">&pi;</a>. This is a reflection of the fact that TeX is now very stable, and only minor updates are anticipated. The current version of TeX is 3.141592; it was last updated in December <!--del_lnk--> 2002. The design has been frozen after version 3.0, and no new feature or fundamental change will be added after that, so that all newer versions shall contain only bug fixes. Even though Donald Knuth himself has suggested a few areas in which TeX could have been improved, he indicated that he firmly believes that having an unchanged system that will produce the same output now and in the future is more important than introducing new features. For this reason, he has stated that the &ldquo;<i>absolutely final change (to be made after my death)</i>&rdquo; will be to change the version number to &pi;, at which point all remaining bugs will become features. Likewise, versions of METAFONT after 2.0 asymptotically approach <!--del_lnk--> e, and a similar change will be applied after Knuth&#39;s death.<p>However, since the source code of TeX is essentially in the <!--del_lnk--> public domain (see below), other programmers are allowed (and explicitly encouraged) to improve the system, but are required to use another name to distribute the modified TeX, meaning that the source code can still evolve. For example, the <!--del_lnk--> Omega project was developed after <!--del_lnk--> 1991, primarily to enhance TeX&#39;s multilingual typesetting abilities. Donald Knuth himself created &ldquo;unofficial&rdquo; modified versions, such as <!--del_lnk--> TeX-XeT, which allows a user to mix texts written in left-to-right and right-to-left <!--del_lnk--> writing systems in the same document.<p><a id="The_typesetting_system" name="The_typesetting_system"></a><h2> <span class="mw-headline">The typesetting system</span></h2>
      <p>TeX commands commonly start with a <!--del_lnk--> backslash and are grouped with <!--del_lnk--> curly braces. However, almost all of TeX&#39;s syntactic properties can be changed on the fly which makes TeX input hard to parse by anything but TeX itself. TeX is a <!--del_lnk--> macro- and <!--del_lnk--> token-based language: many commands, including most user-defined ones, are expanded on the fly until only unexpandable tokens remain which get executed. Expansion itself is practically side-effect free. <!--del_lnk--> Tail recursion of macros takes no memory, and if-then-else constructs are available. This makes TeX a <!--del_lnk--> Turing-complete language even at expansion level.<p>The system can be divided into four levels: in the first, characters are read from the input file and assigned a category code (sometimes called &ldquo;catcode&rdquo;, for short). Combinations of a backslash (really: any character of category zero) followed by letters (characters of category 11) or a single other character are replaced by a control sequence token. In this sense this stage is like lexical analysis, although it does not form numbers from digits. In the next stage, expandable control sequences (such as conditionals or defined macros) are replaced by their replacement text. The input for the third stage is then a stream of characters (including ones with special meaning) and unexpandable control sequences (typically assignments and visual commands). Here characters get assembled into a paragraph. TeX&#39;s paragraph breaking algorithm works by optimizing breakpoints over the whole paragraph. The fourth stage breaks the vertical list of lines and other material into pages.<p>The TeX system has precise knowledge of the sizes of all characters and symbols, and using this information, it computes the optimal arrangement of letters per line and lines per page. It then produces a <!--del_lnk--> DVI file (&ldquo;DeVice Independent&rdquo;) containing the final locations of all characters. This dvi file can be printed directly given an appropriate printer driver, or it can be converted to other formats. Nowadays, <!--del_lnk--> PDFTeX is often used which bypasses DVI generation altogether.<p>The base TeX system understands about 300 commands, called <i>primitives</i>. However, these low-level commands are rarely used directly by users, and most functionality is provided by format files (predumped memory images of TeX after large macro collections have been loaded). Knuth&#39;s original default format, which adds about 600 commands, is <!--del_lnk--> Plain TeX (<!--del_lnk--> available from CTAN). The most widely used format is <!--del_lnk--> LaTeX, originally developed by <!--del_lnk--> Leslie Lamport, which incorporates document styles for books, letters, slides, etc, and adds support for referencing and automatic numbering of sections and equations. Another widely used format, <!--del_lnk--> AMS-TeX, is produced by the <!--del_lnk--> American Mathematical Society, and provides many more user-friendly commands, which can be altered by journals to fit with their house style. Most of the features of AMS-TeX can be used in LaTeX by using the AMS &ldquo;packages&rdquo;. This is then referred to as <!--del_lnk--> AMS-LaTeX. Other formats include <!--del_lnk--> ConTeXt, used primarily for desktop publishing and written mostly by <!--del_lnk--> Hans Hagen at <!--del_lnk--> Pragma.<p><a id="Novel_aspects_of_TeX" name="Novel_aspects_of_TeX"></a><h2> <span class="mw-headline">Novel aspects of TeX</span></h2>
      <p>The TeX software incorporates several aspects that were not available, or were of lower quality, in other typesetting programs at the time when TeX was released. Some of the innovations are based on interesting algorithms, and have led to a number of theses for Knuth&#39;s students. While some of these discoveries have now been incorporated into other typesetting programs, others, such as the rules for mathematical spacing, are still unique.<p><a id="Mathematical_spacing" name="Mathematical_spacing"></a><h3> <span class="mw-headline">Mathematical spacing</span></h3>
      <div class="thumb tright">
       <div style="width:282px;"><a class="internal" href="../../images/220/22088.png.htm" title="Mathematical text typeset using TeX and the AMS Euler font."><img alt="Mathematical text typeset using TeX and the AMS Euler font." height="153" longdesc="/wiki/Image:AMS_Euler_sample.png" src="../../images/220/22088.png" width="280" /></a><div class="thumbcaption">
         <div class="magnify" style="float:right"><a class="internal" href="../../images/220/22088.png.htm" title="Enlarge"><img alt="Enlarge" height="11" src="../../images/0/1.png" width="15" /></a></div> Mathematical text typeset using TeX and the <!--del_lnk--> AMS Euler font.</div>
       </div>
      </div>
      <p>Since the primary goal of TeX was the high-quality typesetting of his book <i>The Art of Computer Programming</i>, Knuth gave a lot of attention to the choice of proper spacing rules for mathematical formul&aelig;. He took three bodies of work that he considered as standards of excellence for mathematical typography: the books typeset by <!--del_lnk--> Addison-Wesley, the publisher of <i>The Art of Computer Programming</i>, in particular the work done by <!--del_lnk--> Hans Wolf; editions of the mathematical journal <i><!--del_lnk--> Acta Mathematica</i> dating from around <!--del_lnk--> 1910; and a copy of <i><!--del_lnk--> Indagationes Mathematicae</i>, a <a href="../../wp/n/Netherlands.htm" title="Netherlands">Dutch</a> mathematics journal. Knuth looked closely at these examples to derive a set of spacing rules for TeX. While TeX provides some basic rules and the tools needed to specify proper spacing, the exact parameters depend on the font used to typeset the formul&aelig;. For example, the spacing for Knuth&#39;s <!--del_lnk--> Computer Modern fonts has been precisely fine-tuned over the years and is now frozen, but when other fonts, such as <!--del_lnk--> AMS Euler, were used by Knuth for the first time, new spacing parameters had to be defined.<p><a id="Hyphenation_and_justification" name="Hyphenation_and_justification"></a><h3> <span class="mw-headline">Hyphenation and justification</span></h3>
      <p>In comparison to manual typesetting, the problem of justification is easy to solve with a digital system such as TeX, which, provided that good points for line breaking have been defined, can automatically spread the spaces between words to fill in the line. The problem is thus to find the set of breakpoints that will give the most pleasing result. Many line breaking algorithms use a <i>first-fit</i> approach, where the breakpoints for each line are determined one after the other, and no breakpoint is changed after it has been chosen. Such a system is not able to decide to define a breakpoint depending on the effect that it will have on the following lines. In comparison, the <i>total-fit</i> line breaking algorithm used by TeX and developed by Donald Knuth and <!--del_lnk--> Michael Plass considers <i>all</i> the possible breakpoints in a paragraph, and finds the combination of line breaks that will produce the most globally pleasing arrangement.<p>Formally, the algorithm defines a value called <i>badness</i> associated with each possible line break; the badness is increased if the spaces on the line must stretch or shrink too much to make the line the correct width. Penalties are added if a breakpoint is particularly undesirable: for example, if a word must be hyphenated, if two lines in a row are hyphenated, or if a very loose line is immediately followed by a very tight line. The algorithm will then find the breakpoints that will minimize the sum of squares of the badness (including penalties) of the resulting lines. If the paragraph contains <span class="texhtml"><i>n</i></span> possible breakpoints, the number of situations that must be evaluated naively is <span class="texhtml">2<sup><i>n</i></sup></span>. However, by using the method of <!--del_lnk--> dynamic programming, the complexity of the algorithm can be brought down to <span class="texhtml"><i>O</i>(<i>n</i><sup>2</sup>)</span>. Further simplifications (for example, not testing extremely unlikely breakpoints such as a hyphenation in the first word of a paragraph) lead to an efficient algorithm whose running time is almost always order of <span class="texhtml"><i>n</i></span>. However, in general, a thesis by <!--del_lnk--> Michael Plass shows how the page breaking problem can be <!--del_lnk--> NP-complete because of the added complication of placing figures. A similar algorithm is used to determine the best way to break paragraphs across two pages, in order to avoid <!--del_lnk--> widows or <!--del_lnk--> orphans (lines that appear alone on a page while the rest of the paragraph is on the following or preceding page).<p>TeX&#39;s line breaking algorithm has been adopted by several other programs, such as <!--del_lnk--> Adobe InDesign <!--del_lnk--> desktop publishing <!--del_lnk--> application, and the <a href="../../wp/g/GNU.htm" title="GNU">GNU</a> fmt <a href="../../wp/u/Unix.htm" title="Unix">Unix</a> <!--del_lnk--> command line utility.<p>If no suitable line break can be found for a line, the system will try to <!--del_lnk--> hyphenate a word. The original version of TeX used a <!--del_lnk--> hyphenation algorithm based on a set of rules for the removal of prefixes and suffixes of words, and for deciding if it should insert a break between the two consonants in a pattern of the form <a href="../../wp/v/Vowel.htm" title="Vowel">vowel</a>&ndash;<!--del_lnk--> consonant&ndash;<!--del_lnk--> consonant&ndash;<a href="../../wp/v/Vowel.htm" title="Vowel">vowel</a> (which is possible most of the time). TeX82 uses a new hyphenation algorithm, designed by <!--del_lnk--> Frank Liang in <!--del_lnk--> 1983, to assign priorities to breakpoints in letter groups. A list of hyphenation patterns is first generated automatically from a corpus of hyphenated words (a list of 50,000 words). If TeX must find the acceptable hyphenation positions in the word <i>encyclopedia</i>, for example, it will consider all the subwords of the extended word <i>.encyclopedia.</i>, where <i>.</i> is a special marker to indicate the beginning or end of the word. The list of subwords include all the subwords of length 1 (<i>.</i>, <i>e</i>, <i>n</i>, <i>c</i>, <i>y</i>, etc), of length 2 (<i>.e</i>, <i>en</i>, <i>nc</i>, etc), etc, up to the subword of length 14, which is the word itself, including the markers. TeX will then look into its list of hyphenation patterns, and find subwords for which it has calculated the desirability of hyphenation at each position. In the case of our word, 11 such patterns can be matched, namely <sub>1</sub>c<sub>4</sub>l<sub>4</sub>, <sub>1</sub>cy, <sub>1</sub>d<sub>4</sub>i<sub>3</sub>a, <sub>4</sub>edi, e<sub>3</sub>dia, <sub>2</sub>i<sub>1</sub>a, ope<sub>5</sub>d, <sub>2</sub>p<sub>2</sub>ed, <sub>3</sub>pedi, pedia<sub>4</sub>, y<sub>1</sub>c. For each position in the word, TeX will calculate the <i>maximum value</i> obtained among all matching pattern, yielding en<sub>1</sub>cy<sub>1</sub>c<sub>4</sub>l<sub>4</sub>o<sub>3</sub>p<sub>4</sub>e<sub>5</sub>d<sub>4</sub>i<sub>3</sub>a. Finally, the acceptable positions are those indicated by an <!--del_lnk--> odd number, yielding the acceptable hyphenations <i>en-cy-clo-pe-di-a</i>. This system based on subwords allows the definition of very general patterns (such as <sub>2</sub>i<sub>1</sub>a), with low indicative numbers (either odd or even), which can then be superseded by more specific patterns (such as <sub>1</sub>d<sub>4</sub>i<sub>3</sub>a) if necessary. These patterns find about 90% of the hyphens in the original dictionary; more importantly, they do not insert any spurious hyphen. In addition, a list of exceptions (words for which the patterns do not predict the correct hyphenation) are included with the plain TeX format; additional ones can be specified by the user.<p><a id="METAFONT" name="METAFONT"></a><h3> <span class="mw-headline">METAFONT</span></h3>
      <dl>
       <dd>
      </dl>
      <p>While METAFONT is not strictly part of TeX, it is a required tool for the typesetting system. METAFONT is a font description system which allows the designer to describe characters algorithmically. It uses <!--del_lnk--> Bezier curves in a fairly standard way to generate the actual characters to be displayed, but Knuth devotes lots of attention to the rasterizing problem on <!--del_lnk--> bitmapped displays. Another thesis, by <!--del_lnk--> John Hobby, further explores this problem of digitizing &ldquo;brush trajectories&rdquo;. This term derives from the fact that Metafont describes characters as having been drawn by abstract brushes (and erasers).<p>It is possible to use TeX and LaTeX without METAFONT. Adobe PostScript (&ldquo;Type 1&rdquo;) fonts may be used instead. (La)TeX expects fonts to be supplied as bitmaps at specific point sizes, while PostScript is a vector (outline) description scalable over a wide range, so this does introduce some minor complications. Nonetheless, with the help of some prewritten packages, (La)TeX can be made to use PostScript fonts. Further note that &ldquo;Type 1&rdquo; or &ldquo;T1&rdquo; can refer in documentation to two very different things: the TeX T1 character encoding scheme to map byte values to glyphs, and Adobe PostScript fonts.<p><a id="Examples_of_TeX" name="Examples_of_TeX"></a><h2> <span class="mw-headline">Examples of TeX</span></h2>
      <div class="thumb tright">
       <div style="width:182px;"><a class="internal" href="../../images/220/22089.png.htm" title="A sample page produced using TeX with the LaTeX macros."><img alt="A sample page produced using TeX with the LaTeX macros." height="233" longdesc="/wiki/Image:LaTeX_sample.png" src="../../images/220/22089.png" width="180" /></a><div class="thumbcaption">
         <div class="magnify" style="float:right"><a class="internal" href="../../images/220/22089.png.htm" title="Enlarge"><img alt="Enlarge" height="11" src="../../images/0/1.png" width="15" /></a></div> A sample page produced using TeX with the <!--del_lnk--> LaTeX macros.</div>
       </div>
      </div>
      <p>To write the traditional <!--del_lnk--> Hello world program in plain TeX, create a file <i>myfile.tex</i> with the following content:<pre>
Hello, World
\bye          % marks the end of the file; not shown in the final output
</pre><p>By default, everything that follows a percent sign on a line is a comment, ignored by TeX. Running TeX on this file (for example, by typing <code>tex myfile.tex</code> in a <!--del_lnk--> command line interpreter, or by calling it from a <!--del_lnk--> graphical user interface) will create an output file called <i>myfile.dvi</i>, representing the content of the page in a <b>d</b>e<b>v</b>ice <b>i</b>ndependent format (<!--del_lnk--> DVI). The results can either be printed directly from a DVI viewer or converted to a more common format such as <!--del_lnk--> PostScript using the <tt><!--del_lnk--> dvips</tt> program. This was because TeX natively uses <!--del_lnk--> bitmap fonts, which are only designed to display well at one particular size, whereas PostScript typically uses scalable <!--del_lnk--> Type 1 fonts. It is now possible to make <tt>dvips</tt> output scalable fonts with a bit of tweaking (newer versions of Ghostscript support it). TeX variants such as <!--del_lnk--> PDFTeX produce PDF files directly.<p>To see TeX further in action, look at its formatting of mathematical formul&aelig;. For example, to write the well-known <!--del_lnk--> quadratic formula, try entering<pre>
The quadratic formula is $-b \pm \sqrt{b^2 - 4ac} \over 2a$
\bye
</pre><p>Use TeX as above, and you should get something that looks like<dl>
       <dd>The quadratic formula is <img alt="\textstyle{-b \pm \sqrt{b^2 - 4ac} \over 2a}" class="tex" src="../../images/494/49475.png" /></dl>
      <p>Notice how the formula is printed in a way a person would write by hand, or typeset the equation. In a document, entering <i>mathematics mode</i> is done by starting with a $, then entering a formula in TeX semantics and closing again with another $. Display mathematics, or mathematics presented centered on a new line is done by using $$. For example, the above with the quadratic formula in display math:<pre>
The quadratic formula is $$-b \pm \sqrt{b^2 - 4ac} \over 2a$$
\bye
</pre><p>renders as<dl>
       <dd>The quadratic formula is</dl>
      <center><img alt="-b \pm \sqrt{b^2 - 4ac} \over 2a" class="tex" src="../../images/494/49476.png" /></center>
      <p><a id="Software" name="Software"></a><h2> <span class="mw-headline">Software</span></h2>
      <p>The original source code for the current TeX software is written in <!--del_lnk--> WEB, a mixture of documentation written in TeX and a quite restricted <!--del_lnk--> Pascal subset in order to ensure portability. For example, TeX does all of its dynamic allocation itself from fixed-size arrays and uses only <!--del_lnk--> fixed-point arithmetic for its internal calculations. As a result, TeX has been ported to almost all <!--del_lnk--> operating systems, usually by using the <!--del_lnk--> web2c program to convert the source code into <!--del_lnk--> C instead of directly compiling the Pascal code. TeX is usually provided in the form of a <!--del_lnk--> distribution, an easy-to-install bundle of TeX itself along with <!--del_lnk--> METAFONT and all the necessary fonts, documents formats, and utilities needed to use the typesetting system. On <a href="../../wp/u/Unix.htm" title="Unix">UNIX</a>-compatible systems, including <a href="../../wp/l/Linux.htm" title="Linux">GNU/Linux</a> and <!--del_lnk--> Mac OS X, TeX is distributed in the form of the <!--del_lnk--> teTeX distribution. On <a href="../../wp/m/Microsoft_Windows.htm" title="Microsoft Windows">Windows</a>, there is the <!--del_lnk--> MiKTeX distribution (enhanced by <!--del_lnk--> ProTeX ) and the <!--del_lnk--> fpTeX distribution.<p>Several document processing systems are based on TeX, notably <!--del_lnk--> jadeTeX, which uses TeX as a backend for printing from <!--del_lnk--> James Clark&#39;s <!--del_lnk--> DSSSL Engine, and <!--del_lnk--> Texinfo, the <a href="../../wp/g/GNU.htm" title="GNU">GNU</a> documentation processing system. TeX has been the official typesetting package for the <a href="../../wp/g/GNU.htm" title="GNU">GNU operating system</a> since 1984.<p><!--del_lnk--> XeTeX is a new TeX engine that supports <!--del_lnk--> Unicode. Originally making use of advanced <!--del_lnk--> Mac OS X-specific font technologies, it now supports <!--del_lnk--> OpenType and is available on Linux and Microsoft Windows.<p>Numerous extensions and companion programs for TeX exist, among them <!--del_lnk--> BibTeX for bibliographies (distributed with LaTeX), <!--del_lnk--> PDFTeX, which bypasses dvi and produces output in <!--del_lnk--> Adobe Systems&#39; <!--del_lnk--> Portable Document Format, and <!--del_lnk--> Omega, which allows TeX to use the <!--del_lnk--> Unicode character set. Most TeX extensions are available for free from <!--del_lnk--> CTAN, the Comprehensive TeX Archive Network. The <!--del_lnk--> TeXmacs text editor is a <!--del_lnk--> WYSIWYG scientific text editor that is intended to be compatible with TeX and <a href="../../wp/e/Emacs.htm" title="Emacs">Emacs</a>. It uses Knuth&#39;s fonts, and can generate TeX output. <!--del_lnk--> LyX is a &ldquo;What You See is What You Mean&rdquo; document processor which runs on a variety of platforms including Linux, Windows (98, 2000 or later) or Mac OS X (using a non-native Qt front-end). <!--del_lnk--> TeXShop for <!--del_lnk--> Mac OS X, and <!--del_lnk--> WinShell for <a href="../../wp/m/Microsoft_Windows.htm" title="Microsoft Windows">Windows</a> are similar tools and provide integrated development environment (IDE) for working with LaTeX or TeX. <a href="../../wp/e/Emacs.htm" title="GNU Emacs">GNU Emacs</a> has various built-in and third party packages with support for TeX, the major one being <!--del_lnk--> AUCTeX. For <!--del_lnk--> Vim there is <!--del_lnk--> Vim-LaTeX Suite.<p>Knuth has kept a very detailed log of all the bugs he has corrected and changes he has made in the program since <!--del_lnk--> 1982; as of <!--del_lnk--> 2005, the list contains 419 entries, not including the version modification that should be done after his death as the final change in TeX.<p><a id="License" name="License"></a><h3> <span class="mw-headline">License</span></h3>
      <p>Donald Knuth has indicated several times that the source code of TeX has been placed into the public domain, and he strongly encourages modifications or experimentations with this source code. However, since he highly values the reproducibility of the output of all versions of TeX, any changed version must not be called T<sub><big>E</big></sub>X, TeX, or anything confusingly similar. To enforce this rule, the <!--del_lnk--> American Mathematical Society has registered a <!--del_lnk--> trademark for TeX, and any implementation of the system must pass a test suite called the <!--del_lnk--> TRIP test (<!--del_lnk--> available on CTAN) before being allowed to be called TeX. The question of license is somewhat confused by the statements included at the beginning of the TeX source code, which indicate that &ldquo;<i>all rights are reserved. Copying of this file is authorized only if (...) you make absolutely no changes to your copy</i>&rdquo;. However, this restriction should be interpreted as a prohibition to change the source code <i>as long as the file is called tex.web</i>. This interpretation is confirmed later in the source code when the TRIP test is mentioned (&ldquo;<i>If this program is changed, the resulting system should not be called &lsquo;\TeX&rsquo;</i>&rdquo;).<p><a id="Pronouncing_and_writing_TeX" name="Pronouncing_and_writing_TeX"></a><h2> <span class="mw-headline">Pronouncing and writing TeX</span></h2>
      <p>The name TeX is intended to be pronounced &ldquo;tekh&rdquo; (<!--del_lnk--> IPA: <span class="IPA" title="Pronunciation in IPA">/t&#x25B;x/</span>), where &ldquo;kh&rdquo; represents European <a href="../../wp/s/Spanish_language.htm" title="Spanish language">Spanish</a> <i>j</i>, the sound at the end of <!--del_lnk--> Scottish <i><a href="../../wp/l/Loch.htm" title="Loch">loch</a></i>, or the name of the German composer <i><a href="../../wp/j/Johann_Sebastian_Bach.htm" title="Johann Sebastian Bach">Bach</a></i> or <!--del_lnk--> Polish <i>ch</i>. The X is meant to represent the <!--del_lnk--> Greek letter &chi; (<!--del_lnk--> chi). TeX is the abbreviation of &tau;&#x3AD;&chi;&nu;&eta; (&Tau;&Epsilon;&Chi;&Nu;&Eta; &ndash; techn&#x113;), Greek for &ldquo;art&rdquo; and &ldquo;craft&rdquo;, which is also the source word of <i>technical</i>. English speakers often pronounce it &ldquo;tek&rdquo;, like the first syllable of <i>technology</i>.<p>The name is properly typeset with the &ldquo;E&rdquo; below the baseline and reduced spacing between the letters (this is done, as Donald Knuth mentions in his TeXBook, to distinguish &Tau;<sub><big>&Epsilon;</big></sub>&Chi; from other system names such as TEX, the Text EXecutive processor developed by Honeywell Information Systems); systems that do not support subscript layout and backspacing use the approximation &ldquo;TeX&rdquo;. Fans like to proliferate names from the word &ldquo;TeX&rdquo; &mdash; such as TeXnician (user of TeX software), TeXpert, TeXhacker (TeX programmer), TeXmaster (competent TeX programmer), TeXhax, and TeXnique.<p><a id="Trivia" name="Trivia"></a><h2> <span class="mw-headline">Trivia</span></h2>
      <dl>
       <dd>
      </dl>
      <p>Donald Knuth offers <!--del_lnk--> monetary awards to people who find and report a <!--del_lnk--> bug in TeX. The award per bug started at $2.56 (one &quot;hexadecimal dollar&quot;) and doubled every year until it was frozen at its current value of $327.68. This has not made Knuth poor, however, as there have been very few bugs claimed. In addition, people have been known to frame a check proving he found a bug in TeX instead of cashing it.<p>Knuth explained in a jest that he chose the dollar sign to indicate the beginning and end of mathematical mode in plain TeX because typesetting mathematics was traditionally supposed to be expensive.<p><a id="See_also" name="See_also"></a><div class="printfooter"> Retrieved from &quot;<!--del_lnk--> http://en.wikipedia.org/wiki/TeX&quot;</div>
      <!-- end content -->
      <div class="visualClear">
      </div>
     </div>
    </div>
   </div>
   <!-- end of the left (by default at least) column -->
   <div class="visualClear">
   </div>
   <div id="footer">
    <div class="center"> This reference article is mainly selected from the English Wikipedia with only minor checks and changes (see www.wikipedia.org for details of authors and sources) and is available under the <nobr><a href="../../wp/w/Wikipedia_Text_of_the_GNU_Free_Documentation_License.htm">GNU Free Documentation License</a></nobr>. See also our <b><a href="../../disclaimer.htm">Disclaimer</a></b>. </div>
   </div>
   <script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
  </div>
  
 </body>
</html>
