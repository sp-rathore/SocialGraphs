<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html dir="ltr" lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
  <meta content="Emacs,1999,2006,AIX operating system,Alt key,Apple Computer,Apple Macintosh,Backspace,Berkeley Software Distribution,Binary and text files,Binding (computer science)" name="keywords" />
  <link href="../../favicon.ico" rel="shortcut icon" />
  <link href="../../wp/w/Wikipedia_Text_of_the_GNU_Free_Documentation_License.htm" rel="copyright" />
  <title>Emacs</title>
  <style media="screen,projection" type="text/css">/*<![CDATA[*/ @import "../../css/wp-monobook-main.css"; /*]]>*/</style>
  <link href="../../css/wp-commonPrint.css" media="print" rel="stylesheet" type="text/css" />
  <!--[if lt IE 5.5000]><style type="text/css">@import "../../css/IE50Fixes.css";</style><![endif]-->
  <!--[if IE 5.5000]><style type="text/css">@import "../../css/IE55Fixes.css";</style><![endif]-->
  <!--[if IE 6]><style type="text/css">@import "../../css/IE60Fixes.css";</style><![endif]-->
  <!--[if IE 7]><style type="text/css">@import "../../css/IE70Fixes.css";</style><![endif]-->
  <!--[if lt IE 7]><script type="text/javascript" src="../../js/IEFixes.js"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->
  <script type="text/javascript">
			var skin = "monobook";
			var stylepath = "/skins-1.5";

			var wgArticlePath = "/wiki/$1";
			var wgScriptPath = "/w";
			var wgServer = "http://en.wikipedia.org";
                        
			var wgCanonicalNamespace = "";
			var wgNamespaceNumber = 0;
			var wgPageName = "Emacs";
			var wgTitle = "Emacs";
			var wgArticleId = 345593;
			var wgIsArticle = true;
                        
			var wgUserName = null;
			var wgUserLanguage = "en";
			var wgContentLanguage = "en";
		</script>
  <script src="../../js/wikibits.js" type="text/javascript"><!-- wikibits js --></script>
  <script src="../../js/wp.js" type="text/javascript"><!-- site js --></script>
  <style type="text/css">/*<![CDATA[*/
@import "../../css/wp-common.css";
@import "../../css/wp-monobook.css";
@import "../../css/wp.css";
/*]]>*/</style>
  <!-- Head Scripts -->
 </head>
 <body class="mediawiki ns-0 ltr page-Emacs">
  <div id="globalWrapper">
   <div id="column-content">
    <div id="content"><a id="top" name="top"></a><h1 class="firstHeading">Emacs</h1>
     <div id="bodyContent">
      <h3 id="siteSub"><a href="../../index.htm">2007 Schools Wikipedia Selection</a>. Related subjects: <a href="../index/subject.IT.Software.htm">Software</a></h3>
      <!-- start content -->
      <table cellspacing="5" class="infobox" style="width: 24em; font-size: 90%; text-align: left;">
       <caption style="font-size: 130%; font-weight: bold;">Emacs</caption>
       <tr>
        <th colspan="2" style="text-align: center;"><a class="image" href="../../images/247/24730.png.htm" title="Emacs logo"><img alt="Emacs logo" height="24" longdesc="/wiki/Image:Emacs_logo.png" src="../../images/247/24730.png" width="24" /></a></th>
       </tr>
       <tr>
        <td colspan="2" style="text-align: center;"><a class="image" href="../../images/247/24731.png.htm" title=""><img alt="" height="226" longdesc="/wiki/Image:Emacs-GTK.png" src="../../images/247/24731.png" width="200" /></a><br /> The GNU Emacs 22 interface, running in a graphical environment.</td>
       </tr>
       <tr valign="top">
        <td><b><!--del_lnk--> Maintainer:</b></td>
        <td><a href="../../wp/g/GNU_Project.htm" title="GNU Project">GNU Project</a></td>
       </tr>
       <tr class="plainlinksneverexpand">
        <td><b><!--del_lnk--> Stable release:</b></td>
        <td>21.4 (Feb 6, 2005) <sub>[<!--del_lnk--> +/-]</sub></td>
       </tr>
       <tr class="plainlinksneverexpand">
        <td><b><!--del_lnk--> Preview release:</b></td>
        <td>22 (December 4, 2005) <sub>[<!--del_lnk--> +/-]</sub></td>
       </tr>
       <tr valign="top">
        <td><b><!--del_lnk--> OS:</b></td>
        <td><!--del_lnk--> Cross-platform</td>
       </tr>
       <tr valign="top">
        <td><b>Available <!--del_lnk--> language(s)</b>:</td>
        <td><a href="../../wp/e/English_language.htm" title="English language">English</a> only</td>
       </tr>
       <tr valign="top">
        <td><b>Use:</b></td>
        <td><!--del_lnk--> Text editor</td>
       </tr>
       <tr valign="top">
        <td><b><!--del_lnk--> License:</b></td>
        <td><!--del_lnk--> GPL</td>
       </tr>
       <tr valign="top">
        <td><b><!--del_lnk--> Website:</b></td>
        <td><!--del_lnk--> www.gnu.org/software/emacs/</td>
       </tr>
      </table>
      <p><b>Emacs</b> is a class of <!--del_lnk--> text editors, possessing an extensive set of features, that are popular with <!--del_lnk--> computer programmers and other technically proficient computer users.<p><b>GNU Emacs</b>, a part of the <a href="../../wp/g/GNU.htm" title="GNU">GNU project</a>, is under active development and is the most popular version. The GNU Emacs manual describes it as &quot;the extensible, customizable, self-documenting, real-time display editor.&quot; It is also the most portable and ported of the implementations of Emacs. As of 2006, the latest release of GNU Emacs is version 21.4.<p>The original EMACS, a set of <i><b>E</b>ditor <b>MAC</b>ro<b>S</b></i> for the <!--del_lnk--> TECO editor, was written in 1975 by <a href="../../wp/r/Richard_Stallman.htm" title="Richard Stallman">Richard Stallman</a>, initially put together with <!--del_lnk--> Guy Steele. It was inspired by the ideas of TECMAC and TMACS, a pair of TECO-macro editors written by Guy Steele, <!--del_lnk--> Dave Moon, <!--del_lnk--> Richard Greenblatt, <!--del_lnk--> Charles Frankston, and others. Many versions of Emacs have appeared over the years, but nowadays there are two that are commonly used: GNU Emacs, started by <a href="../../wp/r/Richard_Stallman.htm" title="Richard Stallman">Richard Stallman</a> in 1984 and still maintained by him, and <!--del_lnk--> XEmacs, a <!--del_lnk--> fork of GNU Emacs which was started in 1991 and has remained mostly compatible. Both use a powerful extension language, <!--del_lnk--> Emacs Lisp, that allows them to handle tasks ranging from <a href="../../wp/c/Computer_programming.htm" title="Computer programming">writing</a> and <!--del_lnk--> compiling <!--del_lnk--> computer programs to <!--del_lnk--> browsing the web.<p>Some people make a distinction between the capitalized word &quot;Emacs&quot;, used to refer to editors derived from versions created by Richard Stallman (particularly GNU Emacs and XEmacs), and the lower-case word &quot;emacs&quot;, which is used to refer to the large number of independent emacs reimplementations. The word &quot;emacs&quot; is often pluralized as <b>emacsen</b> by analogy with &quot;oxen&quot;. For example, <!--del_lnk--> Debian&#39;s compatible Emacs package is named <code>emacsen-common</code>. The only plural given by the <i>Collins English Dictionary</i> is emacsen.<p>In <a href="../../wp/u/Unix.htm" title="Unix">Unix</a> culture, Emacs is one of the two main contenders in the traditional <!--del_lnk--> editor wars, the other being <!--del_lnk--> vi.<p>
       <script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script><a id="History" name="History"></a><h2> <span class="mw-headline">History</span></h2>
      <table class="infobox" style="width: 12em;">
       <caption><b>Emacs</b></caption>
       <tr>
        <td>
         <div class="center">
          <div class="floatnone"><span><a class="image" href="../../images/247/24732.png.htm" title=""><img alt="" height="117" longdesc="/wiki/Image:EmacsLogo.png" src="../../images/247/24732.png" width="145" /></a></span></div>
         </div>
         <ul>
          <li><strong class="selflink">Emacs</strong><li><!--del_lnk--> XEmacs<li><!--del_lnk--> Emacs Lisp<li>Notable smaller <!--del_lnk--> Emacsen<ul>
            <li><!--del_lnk--> MicroEMACS<li><!--del_lnk--> mg<li><!--del_lnk--> Freemacs<li><!--del_lnk--> Zile</ul>
         </ul>
        </td>
       </tr>
       <tr>
        <td align="right">
        </td>
       </tr>
      </table>
      <p>Emacs began life at the <!--del_lnk--> MIT AI Lab during the 1970s. Before its introduction, the default editor on the <!--del_lnk--> Incompatible Timesharing System (ITS), the <!--del_lnk--> operating system on the AI Lab&#39;s <!--del_lnk--> PDP-6 and <!--del_lnk--> PDP-10 computers, was a <!--del_lnk--> line editor known as <!--del_lnk--> TECO. Unlike modern text editors, TECO treated typing, editing, and document display as separate modes, like the later vi would. Typing characters into TECO did not place those characters directly into a document; one had to write a series of instructions in the TECO command language telling it to enter the required characters, during which time the edited text was not displayed on the screen. This behaviour is similar to the program <!--del_lnk--> ed, which is still in use.<p>Richard Stallman visited the <!--del_lnk--> Stanford AI Lab in 1974 or 1972 and saw the lab&#39;s &quot;E&quot; editor. The editor had an intuitive <!--del_lnk--> WYSIWYG behaviour as is used almost universally by modern text editors. Impressed by this feature, Stallman returned to MIT where Carl Mikkelsen, one of the <!--del_lnk--> hackers at the AI Lab, had added a display-editing mode called &quot;Control-R&quot; to TECO, allowing the screen display to be updated each time the user entered a keystroke. Stallman reimplemented this mode to run efficiently, then added a <!--del_lnk--> macro feature to the TECO display-editing mode, allowing the user to redefine any keystroke to run a TECO program.<p>The new version of TECO was instantly popular at the AI Lab, and soon there accumulated a large collection of custom macros, whose names often ended in &quot;MAC&quot; or &quot;MACS&quot;, which stood for &quot;macros&quot;. Two years later, <!--del_lnk--> Guy Steele took on the project of unifying the overly diverse keyboard command sets into a single set. After one night of joint hacking by Steele and Stallman, the latter finished the implementation, which included facilities for extending and documenting the new macro set. The resulting system was called EMACS, which stood for &quot;Editing MACroS&quot;. According to Stallman, he picked the name Emacs &quot;because &lt;E&gt; was not in use as an abbreviation on ITS at the time.&quot; It has also been pointed out that &quot;<!--del_lnk--> Emack &amp; Bolio&#39;s&quot; was the name of a popular ice cream store in <a href="../../wp/b/Boston%252C_Massachusetts.htm" title="Boston, Massachusetts">Boston</a>, within walking distance of MIT. A text-formatting program used on ITS was later named BOLIO by <!--del_lnk--> Dave Moon, who frequented that store. However, Stallman did not like that ice cream, and did not even know of it when choosing the name &quot;Emacs&quot;; this ignorance is the basis of a <!--del_lnk--> Hacker koan, <!--del_lnk--> <i>Emacs and Bolio</i>).<p>Stallman realized the danger of too much customization and de-facto forking and set certain conditions for usage. He later wrote:<dl>
       <dd><i>&quot;EMACS was distributed on a basis of communal sharing, which means all improvements must be given back to me to be incorporated and distributed.&quot;</i></dl>
      <p>The original Emacs, like TECO, ran only on the PDP line. Its behaviour was different enough from TECO to be considered a text editor in its own right. It quickly became the standard editing program on ITS. It was also <!--del_lnk--> ported from ITS to the <!--del_lnk--> Tenex and <!--del_lnk--> TOPS-20 operating systems by Michael McMahon, but not Unix, initially. Other contributors to early versions of Emacs include <!--del_lnk--> Kent Pitman, <!--del_lnk--> Earl Killian, and <!--del_lnk--> Eugene Ciccarelli.<p><a id="Other_emacsen" name="Other_emacsen"></a><h3> <span class="mw-headline">Other emacsen</span></h3>
      <p>Many Emacs-like editors were written in the following years for other computer systems, including SINE (Sine is not EMACS), EINE (&quot;EINE Is Not EMACS&quot;) and ZWEI (&quot;ZWEI Was EINE Initially&quot;, for the <!--del_lnk--> Lisp machine), which were written by Michael McMahon and Daniel Weinreb. (Those names mean &quot;one&quot; and &quot;two&quot; in German, respectively, although it should correctly be spelled EINS) In 1978, <!--del_lnk--> Bernard Greenberg wrote <!--del_lnk--> Multics Emacs at <!--del_lnk--> Honeywell&#39;s Cambridge Information Systems Lab.<p>The first Emacs-like editor to run on <a href="../../wp/u/Unix.htm" title="Unix">Unix</a> was <!--del_lnk--> Gosling Emacs, written in 1981 by <!--del_lnk--> James Gosling (who later invented the <!--del_lnk--> Java programming language). It was written in <!--del_lnk--> C and, notably, used a language with Lisp-like syntax known as <!--del_lnk--> Mocklisp as an extension language. In 1984 it was <!--del_lnk--> proprietary software.<p><a id="GNU_Emacs" name="GNU_Emacs"></a><h3> <span class="mw-headline">GNU Emacs</span></h3>
      <p>In 1984, Stallman began working on GNU Emacs to produce a <!--del_lnk--> free software alternative to Gosling Emacs; initially it was based on Gosling Emacs, but Stallman replaced the Mocklisp interpreter at its heart with a true Lisp interpreter, which entailed replacing nearly all of the code. It became the first program released by the nascent <a href="../../wp/g/GNU.htm" title="GNU">GNU project</a>. GNU Emacs is written in C and provides <!--del_lnk--> Emacs Lisp (itself implemented in C) as an extension language. The first widely distributed version of GNU Emacs was 15.34, which appeared in 1985. (Versions 2 to 12 never existed. Earlier versions of GNU Emacs had been numbered &quot;1.x.x&quot;, but sometime after version 1.12 the decision was made to drop the &quot;1&quot;, as it was thought the major number would never change. Version 13, the first public release, was made on March 20, 1985.)<p>Like Gosling Emacs, GNU Emacs ran on Unix; however, GNU Emacs had more features, in particular a full-featured Lisp as extension language. As a result, it soon replaced Gosling Emacs as the <i>de facto</i> Emacs editor on Unix.<p>Until <!--del_lnk--> 1999, GNU Emacs development was relatively closed, to the point where it was used as an example of the &quot;Cathedral&quot; development style in <i><!--del_lnk--> The Cathedral and the Bazaar</i>. The project has since adopted a public development mailing list and anonymous <!--del_lnk--> CVS access. Development takes place in a single CVS trunk, which is at version 22.0.90. The current maintainer is <a href="../../wp/r/Richard_Stallman.htm" title="Richard Stallman">Richard Stallman</a>.<p><a id="XEmacs" name="XEmacs"></a><h3> <span class="mw-headline">XEmacs</span></h3>
      <div class="thumb tright">
       <div style="width:182px;"><a class="internal" href="../../images/247/24733.png.htm" title=""><img alt="" height="211" longdesc="/wiki/Image:X_Emacs_Vm-2.png" src="../../images/247/24733.png" width="180" /></a><div class="thumbcaption">
         <div class="magnify" style="float:right"><a class="internal" href="../../images/247/24733.png.htm" title="Enlarge"><img alt="Enlarge" height="11" src="../../images/0/1.png" width="15" /></a></div>
        </div>
       </div>
      </div>
      <p>Beginning in 1991, Lucid Emacs was developed by <!--del_lnk--> Jamie Zawinski and others at Lucid Inc., based on an early alpha version of GNU Emacs 19. The codebases soon diverged, and the separate development teams gave up trying to merge them back into a single program. This was one of the most famous early <!--del_lnk--> forks of a <!--del_lnk--> free software program. Lucid Emacs has since been renamed <!--del_lnk--> XEmacs; it and GNU Emacs remain the two most popular varieties in use today.<p><a id="Other_implementations" name="Other_implementations"></a><h3> <span class="mw-headline">Other implementations</span></h3>
      <p>GNU Emacs was initially targeted at computers with a 32-bit flat address space, and at least 1 <!--del_lnk--> MiB of RAM, at a time where such computers were considered high end. This left an opening for smaller reimplementations. Some noteworthy ones are listed here:<ul>
       <li><!--del_lnk--> MicroEMACS, a very portable implementation originally written by Dave Conroy and further developed by Daniel Lawrence, which exists in many variations. The editor used by <a href="../../wp/l/Linus_Torvalds.htm" title="Linus Torvalds">Linus Torvalds</a>.<li><!--del_lnk--> MG, originally called MicroGNUEmacs, an offshoot of MicroEMACS intended to more closely resemble GNU Emacs. Now installed by default on <a href="../../wp/o/OpenBSD.htm" title="OpenBSD">OpenBSD</a>.<li>JOVE (Jonathan&#39;s Own Version of Emacs), a non-programmable Emacs implementation for <!--del_lnk--> UNIX-like systems by Jonathan Payne.<li><!--del_lnk--> Freemacs, a <!--del_lnk--> DOS version with an extension language based on text macro expansion, all within the original 64 <!--del_lnk--> KiB flat memory limit.</ul>
      <p><a id="Licensing" name="Licensing"></a><h2> <span class="mw-headline">Licensing</span></h2>
      <p>For GNU Emacs (and GNU packages in general), it remains policy to accept significant code contributions only if the <!--del_lnk--> copyright holder executes a suitable disclaimer or assignment of their copyright interest, although one exception was made to this policy for the <!--del_lnk--> MULE (MULtilingual Extension, which handles <!--del_lnk--> Unicode and more advanced methods of dealing with other languages&#39; scripts) code <!--del_lnk-->  since the copyright holder is the Japanese government and copyright assignment was not possible. This does not apply to extremely minor code contributions or bug fixes. There is no strict definition of minor, but as a guideline less than 10 lines of code is considered minor. This policy is intended to facilitate <!--del_lnk--> copyleft enforcement, so that the FSF can defend the software in a court case if one arises. This requirement by the GNU Emacs maintainers is assumed to affect contributions. Some people claim that it even affects performance, e.g. the inability of GNU Emacs to handle large files in an efficient manner could be blamed on the mentioned requirement repelling any serious developer. However, according to Stallman, it is more important for the program to be &quot;free&quot; than good in any other aspect. Enforcement provides legal confidence in the GNU Emacs <!--del_lnk--> free software license &mdash; the <!--del_lnk--> GNU General Public License &mdash; and in the free software itself &mdash; an intellectual work with many copyrights and contributors.<p><a id="Features" name="Features"></a><h2> <span class="mw-headline">Features</span></h2>
      <p>The remainder of this article discusses modern Emacs, GNU Emacs and XEmacs, the only incarnations of Emacs that are widely used today. The term &quot;Emacs&quot; will be used to refer to both programs, as they have very similar features; XEmacs started as a fork of GNU Emacs, and subsequent versions have remained more or less compatible with GNU Emacs.<p>In spite of &mdash; or perhaps because of &mdash; its venerable background, Emacs is one of the most powerful and versatile text editors in existence. It should be noted that it is primarily a <i>text</i> editor, not a <!--del_lnk--> word processor; its huge feature set is geared toward helping the user to manipulate pieces of text, rather than manipulating the <!--del_lnk--> font of the characters or printing documents (though Emacs can do these as well). Emacs brings a host of features to bear on the deceptively simple-seeming task of text editing, ranging from commands to manipulate <!--del_lnk--> words and <!--del_lnk--> paragraphs (deleting them, moving them, moving through them, and so forth), to <!--del_lnk--> syntax highlighting for making <!--del_lnk--> source code easier to read, to executing &quot;keyboard macros&quot; for performing arbitrary batches of editing commands defined by the user.<p>The rich variety of features found in Emacs is a result of its unusual design. Almost all of the functionality in the editor, ranging from basic editing operations such as the insertion of characters into a document to the configuration of the user interface, is controlled by a dialect of the <!--del_lnk--> Lisp programming language known as <!--del_lnk--> Emacs Lisp. In this Lisp environment, <!--del_lnk--> variables and even entire <!--del_lnk--> functions can be modified on the fly, without having to recompile or even restart the editor. As a result, the behaviour of Emacs can be modified almost without limit, either directly by the user, or (more commonly) by loading bodies of Emacs Lisp code known variously as &quot;libraries&quot;, &quot;packages&quot;, or &quot;extensions&quot;.<p>Emacs contains a large number of Emacs Lisp libraries, and more &quot;third-party&quot; libraries can be found on the <a href="../../wp/i/Internet.htm" title="Internet">Internet</a>. Many libraries implement computer programming aids, reflecting Emacs&#39; popularity among programmers. Emacs can be used as an <!--del_lnk--> Integrated Development Environment (IDE), allowing programmers to edit, <!--del_lnk--> compile, and <!--del_lnk--> debug their code within a single interface. Other libraries perform more unusual functions. A few examples are listed below:<ul>
       <li>Calc, a powerful numerical <!--del_lnk--> calculator<li>Calendar-mode, for keeping appointment calendars and diaries<li>Doctor, an implementation of <!--del_lnk--> ELIZA that performs basic <!--del_lnk--> Rogerian <!--del_lnk--> psychotherapy<li><!--del_lnk--> Dunnet, a <!--del_lnk--> text adventure<li><!--del_lnk--> Ediff, for working with <!--del_lnk--> diff files interactively.<li>Emerge, for comparing files and combining them<li><!--del_lnk--> Emacs/W3, a <!--del_lnk--> web browser<li><!--del_lnk--> ERC, an <!--del_lnk--> IRC client<li><!--del_lnk--> Gnus, a full-featured <!--del_lnk--> newsreader and <!--del_lnk--> email client<li><!--del_lnk--> MULE, MultiLingual extensions to Emacs, allowing editing text written in multiple languages, somewhat analogous to <!--del_lnk--> Unicode<li><!--del_lnk--> Info, an online help-browser<li><i>Emacs-wiki</i>, LISP-based wiki software for Emacs<li><!--del_lnk--> Planner, a <!--del_lnk--> personal information manager for Emacs<li><!--del_lnk--> Tetris<li><a href="../../wp/p/PONG.htm" title="Pong">Pong</a></ul>
      <p>The downside to Emacs&#39; Lisp-based design is a performance overhead resulting from loading and <!--del_lnk--> interpreting the Lisp code. On the systems in which Emacs was first implemented, Emacs was often noticeably slower than rival text editors. Several joke acronyms allude to this: <i>Eight Megabytes And Constantly Swapping</i> (from the days when eight <!--del_lnk--> megabytes was a lot of memory), <i>Emacs Makes A Computer Slow</i>, <i>Eventually <!--del_lnk--> Mallocs All Computer Storage</i>, and <i>Eventually Makes All Computers Sick</i>. However, modern computers are fast enough that Emacs is seldom felt to be slow. In fact, Emacs starts up more quickly than most modern word processors. Other joke acronyms describe the user interface: <i>Escape Meta Alt Control Shift</i>.<p><a id="Platforms" name="Platforms"></a><h3> <span class="mw-headline">Platforms</span></h3>
      <p>Emacs is one of the most <!--del_lnk--> ported non-trivial computer programs in the world. It runs on a wide variety of <!--del_lnk--> operating systems, including most <a href="../../wp/u/Unix.htm" title="Unix">Unix</a>-like systems (<a href="../../wp/l/Linux.htm" title="Linux">GNU/Linux</a>, the various <!--del_lnk--> BSDs, <!--del_lnk--> Solaris, <!--del_lnk--> AIX, <!--del_lnk--> IRIX, <!--del_lnk--> Mac OS X, etc.), <!--del_lnk--> MS-DOS, <a href="../../wp/m/Microsoft_Windows.htm" title="Microsoft Windows">Microsoft Windows</a> and <!--del_lnk--> OpenVMS. Unix systems, both free and proprietary, frequently provide Emacs bundled with the <!--del_lnk--> operating system.<p>Emacs runs on both <!--del_lnk--> text terminals and <!--del_lnk--> graphical user interface (GUI) environments. On <a href="../../wp/u/Unix.htm" title="Unix">Unix</a>-like operating systems, Emacs uses the <a href="../../wp/x/X_Window_System.htm" title="X Window System">X Window System</a> to produce its GUI, either directly or using a &quot;widget toolkit&quot; such as <!--del_lnk--> Motif, <!--del_lnk--> LessTif, or <!--del_lnk--> GTK+. Emacs can also use the native graphical systems of Mac OS X (using the <!--del_lnk--> Carbon interface) and <a href="../../wp/m/Microsoft_Windows.htm" title="Microsoft Windows">Microsoft Windows</a>. The graphical interface provides <!--del_lnk--> menubars, <!--del_lnk--> toolbars, <!--del_lnk--> scrollbars, and <!--del_lnk--> context menus.<p><a id="Editing_modes" name="Editing_modes"></a><h3> <span class="mw-headline">Editing modes</span></h3>
      <p>Emacs adapts its behaviour to the type of text it is editing by entering editing modes called &quot;major modes&quot;. Major modes are defined for ordinary text files, <!--del_lnk--> source code for many <a href="../../wp/p/Programming_language.htm" title="Programming language">programming languages</a>, <!--del_lnk--> HTML documents, <a href="../../wp/t/TeX.htm" title="TeX">TeX</a> and <!--del_lnk--> LaTeX documents, and many other types of text. Each major mode tweaks certain Emacs Lisp variables to make Emacs behave more conveniently for the particular type of text. In particular, they usually implement <!--del_lnk--> syntax highlighting, using different fonts or colors to display <!--del_lnk--> keywords, <!--del_lnk--> comments, and so forth. Major modes also provide special editing commands; for example, major modes for programming languages usually define commands to jump to the beginning and the end of a function.<p>The behaviour of Emacs can be further customized using &quot;minor modes&quot;. While only one major mode can be associated with a buffer at a time, multiple minor modes can be simultaneously active. For example, the major mode for the C programming language defines a different minor mode for each of the popular <!--del_lnk--> indent styles.<p><a id="Customization" name="Customization"></a><h3> <span class="mw-headline">Customization</span></h3>
      <p>Many users of Emacs customize the editor to suit their needs. There are three primary ways to customize Emacs. The first is the <i>customize</i> extension, which allows the user to set common customization variables, such as the colour scheme, using a graphical interface. This is intended for Emacs beginners who do not want to work with Emacs Lisp code.<p>The second is to collect keystrokes into <!--del_lnk--> macros and replay them to automate complex, repetitive tasks. This is often done on an ad-hoc basis and each macro discarded after use, although macros can be saved and invoked at need.<p>The third method for customizing Emacs is using Emacs Lisp. Usually, user-supplied Emacs Lisp code is stored in a file called <code>.emacs</code>, which is loaded when Emacs starts up. The <code>.emacs</code> file is often used to set variables and <!--del_lnk--> key bindings different from the default setting, and to define new commands that the user finds convenient. Many advanced users have <code>.emacs</code> files hundreds of lines long, with idiosyncratic customizations that cause Emacs to diverge wildly from the default behaviour.<p>If a body of Emacs Lisp code is generally useful, it is often packaged as a library and distributed to other users. Many such third-party libraries can be found on the Internet; for example, there is a library called <!--del_lnk--> wikipedia-mode for editing <!--del_lnk--> Wikipedia articles. There is even a <!--del_lnk--> Usenet <!--del_lnk--> newsgroup, <!--del_lnk--> gnu.emacs.sources, which is used for posting new libraries. Some third-party libraries eventually make their way into Emacs, thus becoming a &quot;standard&quot; library.<p><a id="Documentation" name="Documentation"></a><h3> <span class="mw-headline">Documentation</span></h3>
      <p>The first Emacs included a powerful <i>help</i> library that can display the documentation for every single command, variable, and internal function. (It may have originated this technique.) Because of this, Emacs was described as &quot;self-documenting&quot;. (This term does not mean that Emacs writes its own documentation, but rather that it presents its own documentation to the user.) This feature makes Emacs&#39; documentation very accessible. For example, the user can find out about the command bound to a particular keystroke simply by entering <code>C-h k</code> (which runs the command <code>describe-key</code>), followed by the keystroke. Each function included a documentation string, specifically to be used for showing to the user on request. The practice of giving functions documentation strings subsequently spread to various programming languages such as <!--del_lnk--> Lisp and <!--del_lnk--> Java.<p>The Emacs <i>help</i> system is useful not only for beginners, but also for advanced users writing Emacs Lisp code. If the documentation for a function or variable is not enough, the <i>help</i> system can be used to browse the Emacs Lisp source code for both built-in libraries and installed third-party libraries. It is therefore very convenient to program in Emacs Lisp using Emacs itself.<p>Apart from the built-in documentation, Emacs has an unusually long, detailed and well-written <!--del_lnk--> manual. An electronic copy of the <i>GNU Emacs Manual</i>, written by Richard Stallman, is included with GNU Emacs and can be viewed with the built-in <!--del_lnk--> Info browser. XEmacs has a similar manual, which forked from the GNU Emacs Manual at the same time as the XEmacs software. Two other manuals, the <i>Emacs Lisp Reference Manual</i> by Bill Lewis, Richard Stallman, and Dan Laliberte, and <i>Programming in Emacs Lisp</i> by Robert Chassell, are also included. Apart from the electronic versions, all three manuals are also available in book form, published by the <!--del_lnk--> Free Software Foundation.<p>Emacs also has a built-in <!--del_lnk--> tutorial. When Emacs is started with no file to edit, it displays instructions for performing simple editing commands and invoking the tutorial.<p><a id="Internationalization" name="Internationalization"></a><h3> <span class="mw-headline">Internationalization</span></h3>
      <p>Emacs supports the editing of text written in many <a href="../../wp/l/Language.htm" title="Language">human languages</a>. There is support for many alphabets, scripts, writing systems, and cultural conventions. Emacs provides spell checking for many languages by calling external programs such as <!--del_lnk--> ispell. Many <!--del_lnk--> encoding systems, including <!--del_lnk--> UTF-8, are supported. XEmacs version 21.5 has partial <!--del_lnk--> Unicode support. Emacs 21.4 has similar support; Emacs 22 will be better. All of these efforts use an Emacs-specific encoding internally, necessitating conversion upon load and save. <!--del_lnk--> UTF-8 will become the Emacs-internal encoding in some later version of XEmacs 21.5, and likely in Emacs 23.<p>However, the Emacs user interface is in English, and has not been translated into any other language, with the exception of the beginners&#39; tutorial.<p>For visually impaired and blind users, there is a subsystem called <i><!--del_lnk--> Emacspeak</i> which allows the editor to be used through audio feedback only.<p><a id="License" name="License"></a><h2> <span class="mw-headline">License</span></h2>
      <p>The source code, including both the C and Emacs Lisp components, is freely available for examination, modification, and redistribution, under the terms of the <!--del_lnk--> GNU General Public License (GPL). Older versions of the GNU Emacs documentation were released under an ad-hoc license which required the inclusion of certain text in any modified copy. In the GNU Emacs user&#39;s manual, for example, this included how to obtain GNU Emacs and Richard Stallman&#39;s political essay &quot;<!--del_lnk--> The GNU Manifesto&quot;. The XEmacs manuals, which were inherited from older GNU Emacs manuals when the fork occurred, have the same license. The newer versions of the GNU Emacs documentation, meanwhile, uses the <!--del_lnk--> GNU Free Documentation License and makes use of &quot;invariant sections&quot; to require the inclusion of the same documents, additionally requiring that the manuals proclaim themselves as <i>GNU Manuals</i>.<p><a id="Using_Emacs" name="Using_Emacs"></a><h2> <span class="mw-headline">Using Emacs</span></h2>
      <p><a id="Commands" name="Commands"></a><h3> <span class="mw-headline">Commands</span></h3>
      <p>From the Unix shell, a file can be opened for editing by typing &quot;emacs [filename]&quot;. If the filename you entered does not exist a file will be created with that name. For example &quot;emacs xorg.conf&quot; will edit the xorg.conf file in the current directory, if it exists. However, Emacs documentation recommends starting Emacs without a file name, to avoid the bad habit of starting a separate Emacs for each file you edit. Visiting all files in a single Emacs process is the way to get the full benefit of Emacs.<p>In the normal editing mode, Emacs behaves just like other text editors: the character keys (<i>a</i>, <i>b</i>, <i>c</i>, <i>1</i>, <i>2</i>, <i>3</i>, etc.) insert the corresponding characters, the arrow keys move the editing point, <!--del_lnk--> backspace deletes text, and so forth. Other commands are invoked with <!--del_lnk--> modified keystrokes, pressing the <!--del_lnk--> control key and/or the <!--del_lnk--> meta key/<!--del_lnk--> alt key in conjunction with a regular key. Every editing command is actually a call to a function in the Emacs Lisp environment. Even a command as simple as typing <code>a</code> to insert the character <i>a</i> involves calling a function--in this case, <code>self-insert-command</code>.<p>Some of the basic commands are shown below. More can be found at <!--del_lnk--> List of Emacs commands. The control key [Ctrl] is denoted by a capital <i>C</i>, and the meta or alt [Alt] key by a capital <i>M</i>.<table class="wikitable">
       <tr>
        <th>Command</th>
        <th>Keystroke</th>
        <th>Description</th>
       </tr>
       <tr>
        <td><code>forward-word</code></td>
        <td><code>M-f</code></td>
        <td>Move forward past one word.</td>
       </tr>
       <tr>
        <td><code>search-word</code></td>
        <td><code>C-s</code></td>
        <td>Search a word in the buffer.</td>
       </tr>
       <tr>
        <td><code>undo</code></td>
        <td><code>C-/</code></td>
        <td>Undo last change, and prior changes if pressed repeatedly.</td>
       </tr>
       <tr>
        <td><code>keyboard-quit</code></td>
        <td><code>C-g</code></td>
        <td>Abort the current command.</td>
       </tr>
       <tr>
        <td><code>fill-paragraph</code></td>
        <td><code>M-q</code></td>
        <td><!--del_lnk--> Wrap text in (&quot;fill&quot;) a paragraph.</td>
       </tr>
       <tr>
        <td><code>find-file</code></td>
        <td><code>C-x C-f</code></td>
        <td>Visit a file (you specify the name) in its own editor buffer.</td>
       </tr>
       <tr>
        <td><code>save-buffer</code></td>
        <td><code>C-x C-s</code></td>
        <td>Save the current editor buffer in its visited file.</td>
       </tr>
       <tr>
        <td><code>save-with-newname</code></td>
        <td><code>C-x C-w</code></td>
        <td>Save the current editor buffer as a file with the name you specify.</td>
       </tr>
       <tr>
        <td><code>save-buffers-kill-emacs</code></td>
        <td><code>C-x C-c</code></td>
        <td>Offer to save changes, then exit Emacs.</td>
       </tr>
       <tr>
        <td><code>set-marker</code></td>
        <td><code>C-[space]/C-@</code></td>
        <td>Set a marker from where you want to cut or copy.</td>
       </tr>
       <tr>
        <td><code>cut</code></td>
        <td><code>C-w</code></td>
        <td>Cut all text between the marker and the cursor.</td>
       </tr>
       <tr>
        <td><code>copy</code></td>
        <td><code>M-w</code></td>
        <td>Copy all text between the marker and the cursor.</td>
       </tr>
       <tr>
        <td><code>paste</code></td>
        <td><code>C-y</code></td>
        <td>Paste text from the emacs clipboard</td>
       </tr>
       <tr>
        <td><code>kill buffer</code></td>
        <td><code>C-x k</code></td>
        <td>Kill the current buffer</td>
       </tr>
      </table>
      <p>Note that the commands <code>save-buffer</code> and <code>save-buffers-kill-emacs</code> use <i>multiple</i> modified keystrokes. For example, <code>C-x C-c</code> means: while holding down the control key, press <i>x</i>; then, while holding down the control key, press <i>c</i>. This technique, allowing more commands to be bound to the keyboard than with the use of single keystrokes alone, was popularized by Emacs, which got it from TECMAC, one of the TECO macro collections that immediately preceded Emacs. It has since made its way into modern code editors like <!--del_lnk--> Visual Studio.<p>When Emacs is running a graphical interface, many commands can be invoked from the menubar or toolbar instead of using the keyboard. However, many experienced Emacs users prefer to use the keyboard because it is faster and more convenient once the necessary keystrokes have been memorized.<p>Some Emacs commands work by invoking an external program (such as <!--del_lnk--> ispell for spell-checking or <!--del_lnk--> gcc for program compilation), parsing the program&#39;s output, and displaying the result in Emacs.<p><a id="Minibuffer" name="Minibuffer"></a><h3> <span class="mw-headline">Minibuffer</span></h3>
      <p>The <i>minibuffer</i>, normally the bottommost line, is where Emacs requests information. Text to target in a search, the name of a file to read or save, and similar information is entered in the minibuffer. When applicable, <!--del_lnk--> tab completion is usually available.<p><a id="File_management_and_display" name="File_management_and_display"></a><h3> <span class="mw-headline">File management and display</span></h3>
      <p>Emacs keeps text in objects called <i>buffers</i>. The user can create new buffers and dismiss unwanted ones, and several buffers can exist at the same time. Most buffers contain text loaded from <!--del_lnk--> text files, which the user can edit and save back to disk. Buffers are also used to store temporary text, such as the documentation strings displayed by the <i>help</i> library.<p>In both text terminal and graphical modes, Emacs is able to split the editing area into separate sections (referred to since 1975 as &quot;windows&quot;, which can be confusing on systems that have another concept of &quot;windows&quot; as well), so that more than one buffer can be displayed at a time. This has many uses. For example, one section can be used to display the <!--del_lnk--> source code of a program, while another displays the results from compiling the program. In graphical environments, Emacs can also launch multiple <!--del_lnk--> graphical-environment windows, known as &quot;frames&quot; in the context of Emacs.<p><a id="Emacs_Pinky" name="Emacs_Pinky"></a><h3> <span class="mw-headline">Emacs Pinky</span></h3>
      <p>Because of Emacs&#39; dependence on the modifier keys, in particular the control key is pressed with the <!--del_lnk--> pinky finger, heavy Emacs users have experienced pain in their pinky fingers (see <!--del_lnk--> repetitive strain injury and <!--del_lnk--> fat-finger). This has been dubbed the &quot;Emacs Pinky&quot;, and <!--del_lnk--> vi advocates often cite it as a reason to switch to vi. To alleviate this situation, many Emacs users transpose the left control key and the left caps-lock key or define both as control keys. There are also <!--del_lnk--> Kinesis&#39;s Contoured Keyboard available which reduce the strain by moving the modifier keys altogether so that they are in a position to be easily pushed by the <!--del_lnk--> thumb, and <!--del_lnk--> Microsoft Natural keyboard that has large modifier keys placed symmetrically on both sides of the keyboard so that they can be pressed with palm.<p><a id="See_also" name="See_also"></a><div class="printfooter"> Retrieved from &quot;<!--del_lnk--> http://en.wikipedia.org/wiki/Emacs&quot;</div>
      <!-- end content -->
      <div class="visualClear">
      </div>
     </div>
    </div>
   </div>
   <!-- end of the left (by default at least) column -->
   <div class="visualClear">
   </div>
   <div id="footer">
    <div class="center"> This reference article is mainly selected from the English Wikipedia with only minor checks and changes (see www.wikipedia.org for details of authors and sources) and is available under the <nobr><a href="../../wp/w/Wikipedia_Text_of_the_GNU_Free_Documentation_License.htm">GNU Free Documentation License</a></nobr>. See also our <b><a href="../../disclaimer.htm">Disclaimer</a></b>. </div>
   </div>
   <script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
  </div>
  
 </body>
</html>
