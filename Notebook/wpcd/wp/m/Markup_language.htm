<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html dir="ltr" lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
  <meta content="Markup language,Markup language.ogg,2006,Academia,Atom (standard),Binary large object,Brian Reid,CALS,CERN,CLIX,Carnegie Mellon University" name="keywords" />
  <link href="../../favicon.ico" rel="shortcut icon" />
  <link href="../../wp/w/Wikipedia_Text_of_the_GNU_Free_Documentation_License.htm" rel="copyright" />
  <title>Markup language</title>
  <style media="screen,projection" type="text/css">/*<![CDATA[*/ @import "../../css/wp-monobook-main.css"; /*]]>*/</style>
  <link href="../../css/wp-commonPrint.css" media="print" rel="stylesheet" type="text/css" />
  <!--[if lt IE 5.5000]><style type="text/css">@import "../../css/IE50Fixes.css";</style><![endif]-->
  <!--[if IE 5.5000]><style type="text/css">@import "../../css/IE55Fixes.css";</style><![endif]-->
  <!--[if IE 6]><style type="text/css">@import "../../css/IE60Fixes.css";</style><![endif]-->
  <!--[if IE 7]><style type="text/css">@import "../../css/IE70Fixes.css";</style><![endif]-->
  <!--[if lt IE 7]><script type="text/javascript" src="../../js/IEFixes.js"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->
  <script type="text/javascript">
			var skin = "monobook";
			var stylepath = "/skins-1.5";

			var wgArticlePath = "/wiki/$1";
			var wgScriptPath = "/w";
			var wgServer = "http://en.wikipedia.org";
                        
			var wgCanonicalNamespace = "";
			var wgNamespaceNumber = 0;
			var wgPageName = "Markup_language";
			var wgTitle = "Markup language";
			var wgArticleId = 18910;
			var wgIsArticle = true;
                        
			var wgUserName = null;
			var wgUserLanguage = "en";
			var wgContentLanguage = "en";
		</script>
  <script src="../../js/wikibits.js" type="text/javascript"><!-- wikibits js --></script>
  <script src="../../js/wp.js" type="text/javascript"><!-- site js --></script>
  <style type="text/css">/*<![CDATA[*/
@import "../../css/wp-common.css";
@import "../../css/wp-monobook.css";
@import "../../css/wp.css";
/*]]>*/</style>
  <!-- Head Scripts -->
 </head>
 <body class="mediawiki ns-0 ltr page-Markup_language">
  <div id="globalWrapper">
   <div id="column-content">
    <div id="content"><a id="top" name="top"></a><h1 class="firstHeading">Markup language</h1>
     <div id="bodyContent">
      <h3 id="siteSub"><a href="../../index.htm">2007 Schools Wikipedia Selection</a>. Related subjects: <a href="../index/subject.IT.Computer_Programming.htm">Computer Programming</a></h3>
      <!-- start content -->
      <div class="thumb tright">
       <div style="width:302px;"><a class="internal" href="../../images/263/26378.jpg.htm" title="A specialized markup language using SGML is used to write the electronic version of the Oxford English Dictionary. This enables sophisticated queries to be performed, as well as easy translation into HTML."><img alt="A specialized markup language using SGML is used to write the electronic version of the Oxford English Dictionary. This enables sophisticated queries to be performed, as well as easy translation into HTML." height="213" longdesc="/wiki/Image:OED-LEXX-Bungler.jpg" src="../../images/263/26378.jpg" width="300" /></a><div class="thumbcaption">A specialized markup language using <!--del_lnk--> SGML is used to write the electronic version of the <i><!--del_lnk--> Oxford English Dictionary</i>. This enables sophisticated queries to be performed, as well as easy translation into <!--del_lnk--> HTML.</div>
       </div>
      </div>
      <p>A <b>markup language</b> combines text and extra information about the text. The extra information, for example about the text&#39;s structure or presentation, is expressed using <b>markup</b>, which is intermingled with the primary text. The best-known markup language in modern use is <!--del_lnk--> HTML (<!--del_lnk--> HyperText Markup Language), one of the foundations of the <!--del_lnk--> World Wide Web. Historically, markup was (and is) used in the publishing industry in the communication of printed work between authors, editors, and printers.<p>
       <script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script><a id="Classes_of_markup_languages" name="Classes_of_markup_languages"></a><h2> <span class="mw-headline">Classes of markup languages</span></h2>
      <p>Markup languages are often divided into three classes: presentational, procedural, and descriptive.<p><a id="Presentational_markup" name="Presentational_markup"></a><h3> <span class="mw-headline">Presentational markup</span></h3>
      <p><b>Presentational markup</b> is an attempt to infer document structure from cues in the encoding. For example, in a <!--del_lnk--> text file, the title of a document might be preceded by several newlines and/or spaces, thus suggesting leading spacing and centering. Word-processing and <!--del_lnk--> desktop publishing products sometimes attempt to deduce structure from such conventions, but, as the enormous variety of Wiki plain-text conventions prove, this is, as of yet, an unresolved problem.<p><a id="Procedural_markup" name="Procedural_markup"></a><h3> <span class="mw-headline">Procedural markup</span></h3>
      <p><b>Procedural markup</b> is typically also focused on the presentation of text, but is usually visible to the user editing the text file, and is expected to be interpreted by software in the order in which it appears. To format a title, a succession of formatting directives would be inserted into the file immediately before the title&#39;s text, instructing software to switch into centered display mode, then enlarge and embolden the typeface. The title text would be followed by directives to reverse these effects; in more advanced systems macros or a <!--del_lnk--> stack model make this less tedious. In most cases, the procedural markup capabilities comprise a <!--del_lnk--> Turing-complete programming language. Examples of procedural-markup systems include <!--del_lnk--> nroff, <!--del_lnk--> troff, <a href="../../wp/t/TeX.htm" title="TeX">TeX</a>, <!--del_lnk--> Lout and <!--del_lnk--> PostScript. Procedural markup has been widely used in professional publishing applications, where professional <!--del_lnk--> typographers can be expected to learn the languages required.<p><a id="Descriptive_markup" name="Descriptive_markup"></a><h3> <span class="mw-headline">Descriptive markup</span></h3>
      <p><b>Descriptive markup</b> or <b>semantic markup</b> applies labels to fragments of text without necessarily mandating any particular display or other processing semantics. For example, the <!--del_lnk--> Atom syndication language provides markup to label the &quot;updated&quot; time-stamp, which is an assertion from the publisher as to when some item of information was last changed. While the Atom specification discusses the meaning of the &quot;updated&quot; timestamp, and specifies the markup used to identify it, it makes no assertions about whether or how it might be presented to a user. Software might put this markup to a variety of uses, including many not foreseen by the designers of the Atom language. <!--del_lnk--> SGML and <!--del_lnk--> XML are systems explicitly designed to support the design of descriptive markup languages.<p>In practice, the classes of markup usually co-occur in any given system. For example, <!--del_lnk--> HTML contains markup elements which are purely procedural (for example <i>b</i> for bold) and others which are purely descriptive (&quot;blockquote&quot;, or the &quot;href=&quot; attribute). HTML also includes the PRE element, which encloses areas of presentational markup to be laid out exactly as typed.<p>Sets of markup elements and rules for their use are commonly developed by standards bodies to support the kinds of documents used in particular industries or communities. One of the earliest of these was <!--del_lnk--> CALS, used by the US military for technical manuals. Industries with large-scale documentation requirements soon followed suit, developing <!--del_lnk--> tag-sets for aircraft, telecommunications, automotive, and computer hardware manuals. This led to delivering many such manuals solely in electronic form; some companies were able to produce printed, online, and CD-based manuals all from a single (descriptive markup) source. A notable example was <!--del_lnk--> Sun Microsystems, where <!--del_lnk--> Jon Bosak (who later founded the <!--del_lnk--> XML committee) decided on SGML for multi-target documentation delivery, achieving considerable cost savings.<p>Markup languages now abound; among the more widely known are <!--del_lnk--> DocBook, <!--del_lnk--> MathML, <!--del_lnk--> SVG, <!--del_lnk--> Open eBook, <!--del_lnk--> TEI, and <!--del_lnk--> XBRL. Many are for various kinds of text documents, but specialized languages are used in many other domains.<p><b>Generic markup</b> is another term for descriptive markup. Most modern descriptive markup systems structure documents into <!--del_lnk--> trees, while also providing some means for embedding cross-references. Because of this, documents can be readily treated as <!--del_lnk--> databases, in which the database system is aware of the structure (not &quot;<!--del_lnk--> blobs&quot; as in the past). Because they do not have such strict schemas as <!--del_lnk--> relational databases, however, they are commonly called &quot;<!--del_lnk--> semi-structured databases&quot;.<p>In the third millennium, great interest has arisen in document structures that are not trees. For example, ancient and sacred literature commonly has a rhetorical or prose structure (stories, <!--del_lnk--> pericopes, paragraphs, and so on), as well as a reference structure (books, chapters, verses, lines). Since the boundaries of these units often cross, they cannot readily be encoded using tree-structured markup systems. Among the document modeling systems that support such structures are <!--del_lnk--> MECS (developed for encoding the works of <!--del_lnk--> Wittgenstein), aspects of the <!--del_lnk--> TEI Guidelines, <!--del_lnk--> LMNL, and <!--del_lnk--> CLIX.<p>A primary virtue of descriptive markup is considered to be its flexibility: if the fragments of text are labeled as to &quot;what they are&quot; as opposed to &quot;how they should be displayed&quot;, software may be written to process these fragments in useful ways not anticipated by the designers of the languages. For example, HTML&#39;s hyperlinks, originally designed for activation by a human following a link, are also widely used by Web search engines both in discovering new material to index and in estimating the popularity of Web resources.<p>Descriptive markup also facilitates the simpler task of reformatting a document as needed, because the format specification is not intertwined with the content. For example, italics might be used both for emphasis, and to indicate foreign words. However, if both are merely tagged (presentationally or procedurally) as italic, this ambiguity cannot readily be sorted out. If a decision is later made not to italicize foreign words, there is nothing for it but to review all italic portions and sort them out one by one. However, if the two cases were (descriptively or generically) tagged differently to begin with, either can be reformatted without interfering with the other.<p><a id="History" name="History"></a><h2> <span class="mw-headline">History</span></h2>
      <p>The term &quot;markup&quot; is derived from the traditional publishing practice of &quot;marking up&quot; a <!--del_lnk--> manuscript, that is, adding symbolic <!--del_lnk--> printer&#39;s instructions in the margins of a paper manuscript. For centuries, this task was done by specialists known as &quot;markup men&quot; and proofreaders who marked up text to indicate what <!--del_lnk--> typeface, style, and size should be applied to each part, and then handed off the manuscript to someone else for the tedious task of <!--del_lnk--> typesetting by hand. A familiar example of manual markup symbols still in use is <!--del_lnk--> proofreader&#39;s marks, which are a subset of larger vocabularies of handwritten markup symbols.<p><a id="GenCode" name="GenCode"></a><h3> <span class="mw-headline">GenCode</span></h3>
      <p>The idea of &quot;markup languages&quot; was apparently first presented by publishing executive <!--del_lnk--> William W. Tunnicliffe at a conference in 1967, although he preferred to call it &quot;generic coding.&quot; Tunnicliffe would later lead the development of a standard called GenCode for the publishing industry. Book designer Stanley Fish also published speculation along similar lines in the late 1960s. <!--del_lnk--> Brian Reid, in his 1980 dissertation at <!--del_lnk--> Carnegie Mellon University, developed the theory and a working implementation of descriptive markup in actual use. However, <!--del_lnk--> IBM researcher <!--del_lnk--> Charles Goldfarb is more commonly seen today as the &quot;father&quot; of markup languages, because of his work on IBM GML, and then as chair of the <!--del_lnk--> International Organization for Standardization committee that developed SGML, the first widely used descriptive markup system. Goldfarb hit upon the basic idea while working on an early project to help a newspaper computerize its workflow, although the published record does not clarify when. He later became familiar with the work of Tunnicliffe and Fish, and heard an early talk by Reid which further sparked his interest.<p>It must be noted that the details of the early history of descriptive markup languages are hotly debated. However, it is clear that the notion was independently discovered several times throughout the 70s (and possibly the late 60s), and became an important practice in the late 80s. <p>Some early examples of markup languages available outside the publishing industry can be found in typesetting tools on <a href="../../wp/u/Unix.htm" title="Unix">Unix</a> systems such as <!--del_lnk--> troff and <!--del_lnk--> nroff. In these systems, formatting commands were inserted into the document text so that typesetting software could format the text according to the editor&#39;s specifications. It was a <!--del_lnk--> trial and error iterative process to get a document printed correctly. Availability of <!--del_lnk--> WYSIWYG (&quot;what you see is what you get&quot;) publishing software supplanted much use of these languages among casual users, though serious publishing work still uses markup to specify the non-visual structure of texts.<p><a id="TeX" name="TeX"></a><h3> <span class="mw-headline">TeX</span></h3>
      <p>Another major publishing standard is <a href="../../wp/t/TeX.htm" title="TeX">TeX</a>, created and continuously refined by <a href="../../wp/d/Donald_Knuth.htm" title="Donald Knuth">Donald Knuth</a> in the 1970s and 80s. TeX concentrated on detailed layout of text and font descriptions in order to typeset mathematical books in professional quality. This required Knuth to spend considerable time investigating the art of <!--del_lnk--> typesetting. However, TeX requires considerable skill from the user, so that it is mainly used in <!--del_lnk--> academia, where it is a de-facto standard in many scientific disciplines. A TeX macro package known as <!--del_lnk--> LaTeX provides a descriptive markup system on top of TeX, and is widely used.<p><a id="SGML" name="SGML"></a><h3> <span class="mw-headline">SGML</span></h3>
      <p>The first language to make a clear and clean distinction between structure and presentation was certainly <!--del_lnk--> Scribe, developed by <!--del_lnk--> Brian Reid and described in his doctoral thesis in 1980. Scribe was revolutionary in a number of ways, not least that it introduced the idea of styles separated from the marked up document, and of a <!--del_lnk--> grammar controlling the usage of descriptive elements. Scribe influenced the development of <!--del_lnk--> Generalized Markup Language (later SGML) and is a direct ancestor to HTML and <!--del_lnk--> LaTeX.<p>In the early 1980s, the idea that markup should be focused on the structural aspects of a document and leave the visual presentation of that structure to the interpreter led to the creation of SGML. The language was developed by a committee chaired by Goldfarb. It incorporated ideas from many different sources, including Tunnicliffe&#39;s project, GenCode. <!--del_lnk--> Sharon Adler, <!--del_lnk--> Anders Berglund, and <!--del_lnk--> James D. Mason were also key members of the SGML committee.<p>SGML specified a syntax for including the markup in documents, as well as one for separately describing what tags were allowed, and where (the Document Type Definition (<!--del_lnk--> DTD) or <!--del_lnk--> schema). This allowed authors to create and use any markup they wished, selecting tags that made the most sense to them and were named in their own natural languages. Thus, SGML is properly a <!--del_lnk--> meta-language, and many particular markup languages are derived from it. From the late 80s on, most substantial new markup languages have been based on SGML system, including for example <!--del_lnk--> TEI and <!--del_lnk--> DocBook. SGML was promulgated as an International Standard by <!--del_lnk--> International Organization for Standardization, ISO 8879, in 1986.<p>SGML found wide acceptance and use in fields with very large-scale documentation requirements. However, it was generally found to be cumbersome and difficult to learn, a side effect of attempting to do too much and be too flexible. For example, SGML made end <!--del_lnk--> tags (or start-tags, or even both) optional in certain contexts, because it was thought that markup would be done manually by overworked support staff who would appreciate saving keystrokes.<p><a id="HTML" name="HTML"></a><h4> <span class="mw-headline">HTML</span></h4>
      <p>By 1991, it appeared to many that SGML would be limited to commercial and data-based applications while <!--del_lnk--> WYSIWYG tools (which stored documents in proprietary binary formats) would suffice for other <!--del_lnk--> document processing applications.<p>The situation changed when <a href="../../wp/t/Tim_Berners-Lee.htm" title="Tim Berners-Lee">Sir Tim Berners-Lee</a>, learning of SGML from co-worker Anders Berglund and others at <!--del_lnk--> CERN, used SGML syntax to create <!--del_lnk--> HTML. HTML resembles other SGML-based tag languages, although it began as simpler than most and a formal DTD was not developed until later. DeRose argues that HTML&#39;s use of descriptive markup (and SGML in particular) was a major factor in the success of the Web, because of the flexibility and extensibility that it enabled (other factors include the notion of URLs and the free distribution of browsers). HTML is quite likely the most used markup language in the world today.<p>However, HTML&#39;s status as a markup language is disputed by some computer scientists. The argument for this is that HTML restricts the placement of tags, requiring them to be either fully nested inside of other tags, or the root tag of the document. Because of this, these scientists would suggest instead that HTML is a container language, following a <!--del_lnk--> Hierarchical model.<p><a id="XML" name="XML"></a><h3> <span class="mw-headline">XML</span></h3>
      <dl>
       <dd>
      </dl>
      <p>Another, newer, markup language that is now widely used is <!--del_lnk--> XML (Extensible Markup Language). XML was developed by the <!--del_lnk--> World Wide Web Consortium, in a committee created and chaired by <!--del_lnk--> Jon Bosak. The main purpose of XML was to simplify SGML by focusing on a particular problem &mdash; documents on the Internet. XML remains a meta-language like SGML, allowing users to create any tags needed (hence &quot;extensible&quot;) and then describing those tags and their permitted uses.<p>XML adoption was helped because every XML document is also an SGML document, and existing SGML users and software could switch to XML fairly easily. However, XML eliminated many of the more complex features of SGML, easing learning and implementation (while increasing markup size and reducing readability). Other improvements rectified some SGML problems in international settings, and made it possible to parse and interpret document hierarchy even if no schema is available.<p>XML was designed primarily for semi-structured environments such as documents and publications. However, it appeared to hit a <!--del_lnk--> sweet spot between simplicity and flexibility, and was rapidly adopted for many other uses. XML is now widely used for communicating <!--del_lnk--> data between applications.<p><a id="XHTML" name="XHTML"></a><h4> <span class="mw-headline">XHTML</span></h4>
      <p>Since <!--del_lnk--> January 2000 all <!--del_lnk--> W3C Recommendations for HTML have been based on XML rather than SGML, using the abbrebiation <!--del_lnk--> XHTML (the <i>e<b>X</b>tensible <b>H</b>yper<b>t</b>ext <b>M</b>arkup <b>L</b>anguage</i>). The language specification requires that XHTML Web documents must be &quot;well-formed&quot; XML documents &ndash; this allows for more rigorous and robust documents while using tags familiar from HTML.<p>One of the most noticeable differences between HTML and XHTML is the rule that <i>all tags must be closed</i>: &#39;empty&#39; HTML tags such as <code>&lt;br&gt;</code> must either be &#39;closed&#39; with a regular end-tag, or replaced by a special form: <code>&lt;br /&gt;</code> (note that there must be a space before the &#39;/&#39; on the end tag as otherwise the tag is not valid SGML). Another is that all <!--del_lnk--> attribute values in tags must be quoted.<p><a id="Other_XML-based_applications" name="Other_XML-based_applications"></a><h4> <span class="mw-headline">Other XML-based applications</span></h4>
      <p>Many XML-based applications now exist, including <!--del_lnk--> RDF, <!--del_lnk--> XForms, <!--del_lnk--> DocBook, <!--del_lnk--> SOAP and the <!--del_lnk--> Web Ontology Language (OWL). For a partial list of these see <!--del_lnk--> List of XML markup languages.<p><a id="Features" name="Features"></a><h2> <span class="mw-headline">Features</span></h2>
      <p>A common feature of many markup languages is that they intermix the text of a document with markup instructions in the same data stream or file. Here, for example, is a small section of text marked up in HTML:<pre>
&lt;h1&gt; Anatidae &lt;/h1&gt;
&lt;p&gt;
The family &lt;i&gt;Anatidae&lt;/i&gt; includes ducks, geese, and swans,
but &lt;em&gt;not&lt;/em&gt; the closely-related screamers.
&lt;/p&gt;
</pre><p>The codes enclosed in angle-brackets &lt;like this&gt; are markup instructions (known as tags), while the text between these instructions is the actual text of the document. The codes &quot;h1&quot;, &quot;p&quot;, and &quot;em&quot; are examples of <i>structural</i> markup, in that they describe the intended purpose or meaning of the text they include. Specifically, &quot;h1&quot; means &quot;this is a first-level heading&quot;, &quot;p&quot; means &quot;this is a paragraph&quot;, and &quot;em&quot; means &quot;this is an emphasized word&quot;. A device reading such structural markup may apply its own rules or styles for presenting it, using larger type, boldface, indentation, or whatever style it prefers. The &quot;i&quot; instruction is an example of <i>presentational</i> markup. It specifies the exact appearance of the text (in this case, the use of an italic typeface) without specifying the reason for that appearance.<p>The <!--del_lnk--> Text Encoding Initiative (TEI) has published extensive guidelines for how to encode texts of interest in the humanities and social sciences, developed through years of international cooperative work. These guidelines are used by countless projects encoding historical documents, the works of particular scholars, periods, or genres, and so on.<p><a id="Alternative_usage" name="Alternative_usage"></a><h2> <span class="mw-headline">Alternative usage</span></h2>
      <p>While the idea of markup language originated with text documents, there is an increasing usage of markup languages in areas like <!--del_lnk--> vector graphics, <!--del_lnk--> web services, <!--del_lnk--> content syndication, and <!--del_lnk--> user interfaces. Most of these are XML applications because it is a clean, well-formatted, and extensible language. The use of XML has also led to the possibility of combining multiple markup languages into a single profile, like <!--del_lnk--> XHTML+SMIL and <!--del_lnk--> XHTML+MathML+SVG <!--del_lnk--> .<p><a id="See_also" name="See_also"></a><div class="printfooter"> Retrieved from &quot;<!--del_lnk--> http://en.wikipedia.org/wiki/Markup_language&quot;</div>
      <!-- end content -->
      <div class="visualClear">
      </div>
     </div>
    </div>
   </div>
   <!-- end of the left (by default at least) column -->
   <div class="visualClear">
   </div>
   <div id="footer">
    <div class="center"> This reference article is mainly selected from the English Wikipedia with only minor checks and changes (see www.wikipedia.org for details of authors and sources) and is available under the <nobr><a href="../../wp/w/Wikipedia_Text_of_the_GNU_Free_Documentation_License.htm">GNU Free Documentation License</a></nobr>. See also our <b><a href="../../disclaimer.htm">Disclaimer</a></b>. </div>
   </div>
   <script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
  </div>
  
 </body>
</html>
