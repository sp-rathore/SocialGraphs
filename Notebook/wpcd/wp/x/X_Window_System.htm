<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html dir="ltr" lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
  <meta content="X Window System,1987,1988,1989,1991,1994,1996,1998,2000,2001,2004" name="keywords" />
  <link href="../../favicon.ico" rel="shortcut icon" />
  <link href="../../wp/w/Wikipedia_Text_of_the_GNU_Free_Documentation_License.htm" rel="copyright" />
  <title>X Window System</title>
  <style media="screen,projection" type="text/css">/*<![CDATA[*/ @import "../../css/wp-monobook-main.css"; /*]]>*/</style>
  <link href="../../css/wp-commonPrint.css" media="print" rel="stylesheet" type="text/css" />
  <!--[if lt IE 5.5000]><style type="text/css">@import "../../css/IE50Fixes.css";</style><![endif]-->
  <!--[if IE 5.5000]><style type="text/css">@import "../../css/IE55Fixes.css";</style><![endif]-->
  <!--[if IE 6]><style type="text/css">@import "../../css/IE60Fixes.css";</style><![endif]-->
  <!--[if IE 7]><style type="text/css">@import "../../css/IE70Fixes.css";</style><![endif]-->
  <!--[if lt IE 7]><script type="text/javascript" src="../../js/IEFixes.js"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->
  <script type="text/javascript">
			var skin = "monobook";
			var stylepath = "/skins-1.5";

			var wgArticlePath = "/wiki/$1";
			var wgScriptPath = "/w";
			var wgServer = "http://en.wikipedia.org";
                        
			var wgCanonicalNamespace = "";
			var wgNamespaceNumber = 0;
			var wgPageName = "X_Window_System";
			var wgTitle = "X Window System";
			var wgArticleId = 34147;
			var wgIsArticle = true;
                        
			var wgUserName = null;
			var wgUserLanguage = "en";
			var wgContentLanguage = "en";
		</script>
  <script src="../../js/wikibits.js" type="text/javascript"><!-- wikibits js --></script>
  <script src="../../js/wp.js" type="text/javascript"><!-- site js --></script>
  <style type="text/css">/*<![CDATA[*/
@import "../../css/wp-common.css";
@import "../../css/wp-monobook.css";
@import "../../css/wp.css";
/*]]>*/</style>
  <!-- Head Scripts -->
 </head>
 <body class="mediawiki ns-0 ltr page-X_Window_System">
  <div id="globalWrapper">
   <div id="column-content">
    <div id="content"><a id="top" name="top"></a><h1 class="firstHeading">X Window System</h1>
     <div id="bodyContent">
      <h3 id="siteSub"><a href="../../index.htm">2007 Schools Wikipedia Selection</a>. Related subjects: <a href="../index/subject.IT.Software.htm">Software</a></h3>
      <!-- start content -->
      <table cellspacing="5" class="infobox" style="width: 24em; font-size: 90%; text-align: left;">
       <caption style="font-size: 130%; font-weight: bold;">X Window System</caption>
       <tr>
        <th colspan="2" style="text-align: center;"><a class="image" href="../../images/229/22946.png.htm" title=""><img alt="" height="20" longdesc="/wiki/Image:X11.svg" src="../../images/285/28515.png" width="20" /></a></th>
       </tr>
       <tr valign="top">
        <td><b><!--del_lnk--> Maintainer:</b></td>
        <td><!--del_lnk--> X.Org Foundation</td>
       </tr>
       <tr class="plainlinksneverexpand">
        <td><b><!--del_lnk--> Stable release:</b></td>
        <td><span class="plainlinks"><!--del_lnk--> 7.1</span> &nbsp;<small>(<!--del_lnk--> 22 May <!--del_lnk--> 2006)</small> <sub>[<!--del_lnk--> +/-]</sub></td>
       </tr>
       <tr class="plainlinksneverexpand">
        <td><b><!--del_lnk--> Preview release:</b></td>
        <td><span class="plainlinks"><!--del_lnk--> 7.2RC1</span> &nbsp;<small>(October 13th, 2006)</small><p><span class="plainlinks"><!--del_lnk--> git (development)</span> &nbsp;<small>(various)</small> <sub>[<!--del_lnk--> +/-]</sub></td>
       </tr>
       <tr valign="top">
        <td><b><!--del_lnk--> OS:</b></td>
        <td>multiple</td>
       </tr>
       <tr valign="top">
        <td><b>Use:</b></td>
        <td><!--del_lnk--> Windowing system</td>
       </tr>
       <tr valign="top">
        <td><b><!--del_lnk--> License:</b></td>
        <td><!--del_lnk--> MIT License</td>
       </tr>
       <tr valign="top">
        <td><b><!--del_lnk--> Website:</b></td>
        <td><!--del_lnk--> www.x.org</td>
       </tr>
      </table>
      <div class="thumb tright">
       <div style="width:227px;"><a class="internal" href="../../images/285/28516.png.htm" title="KDE 3.5"><img alt="KDE 3.5" height="169" longdesc="/wiki/Image:Kde35.png" src="../../images/285/28516.png" width="225" /></a><div class="thumbcaption">
         <div class="magnify" style="float:right"><a class="internal" href="../../images/285/28516.png.htm" title="Enlarge"><img alt="Enlarge" height="11" src="../../images/0/1.png" width="15" /></a></div><!--del_lnk--> KDE 3.5</div>
       </div>
      </div>
      <div class="thumb tright">
       <div style="width:227px;"><a class="internal" href="../../images/285/28517.png.htm" title="GNOME 2.14.0"><img alt="GNOME 2.14.0" height="169" longdesc="/wiki/Image:Gnome-2.14.png" src="../../images/285/28517.png" width="225" /></a><div class="thumbcaption">
         <div class="magnify" style="float:right"><a class="internal" href="../../images/285/28517.png.htm" title="Enlarge"><img alt="Enlarge" height="11" src="../../images/0/1.png" width="15" /></a></div><a href="../../wp/g/GNOME.htm" title="GNOME">GNOME</a> 2.14.0</div>
       </div>
      </div>
      <p>In <!--del_lnk--> computing, the <b>X Window System</b> (commonly <b>X11</b> or <b>X</b>) is a protocol and associated software to provide <!--del_lnk--> windowing on <!--del_lnk--> bitmap displays. It provides the standard toolkit and protocol to build <!--del_lnk--> graphical user interfaces (GUIs) on <a href="../../wp/u/Unix.htm" title="Unix">Unix</a>, <!--del_lnk--> Unix-like <!--del_lnk--> operating systems, and <!--del_lnk--> OpenVMS, and is supported by almost all other modern operating systems.<p>X provides the basic framework for a GUI environment: drawing and moving <!--del_lnk--> windows on the <!--del_lnk--> screen and interacting with a <!--del_lnk--> mouse and/or <!--del_lnk--> keyboard. X does not mandate the <!--del_lnk--> user interface &ndash; individual client programs handle this. As such, the visual styling of X-based environments varies greatly; different programs may present radically different interfaces.<p>X features <!--del_lnk--> network transparency: the machine where application programs (the <i>client</i> applications) run can differ from the user&#39;s local machine (the display <i>server</i>). X&#39;s usage of the terms <!--del_lnk--> &quot;client&quot; and &quot;server&quot; reverses what people often expect, in that &quot;server&quot; refers to the user&#39;s local display (&quot;display server&quot;) rather than to a remote machine.<p>X originated at <!--del_lnk--> MIT in 1984. The <!--del_lnk--> current protocol version, X11, appeared in September 1987. The <!--del_lnk--> X.Org Foundation leads the X project, with the <!--del_lnk--> current <!--del_lnk--> reference implementation, version 11 release 7.1, available as <!--del_lnk--> free software under the <!--del_lnk--> MIT License and similar permissive licenses <!--del_lnk--> .<p>
       <script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script><a id="The_X_client-server_model_and_network_transparency" name="The_X_client-server_model_and_network_transparency"></a><h2> <span class="mw-headline">The X client-server model and network transparency</span></h2>
      <p>X uses a <!--del_lnk--> client-server model: an <i>X server</i> communicates with various <i>client</i> programs. The server accepts requests for graphical output (windows) and sends back user input (from keyboard, mouse, or touchscreen). The server may function as any one of:<ul>
       <li>an application displaying to a window of another display system<li>a system program controlling the video output of a <!--del_lnk--> PC<li>a dedicated piece of hardware.</ul>
      <p>This client-server terminology &mdash; the user&#39;s terminal as the &quot;server&quot;, the remote applications as the &quot;clients&quot; &mdash; often confuses new X users, because the terms appear reversed. But X takes the perspective of the program, rather than that of the end-user or of the hardware: the local X display provides display services to programs, so it acts as a server; any remote program uses these services, thus it acts as a client.<div class="thumb tright">
       <div style="width:252px;"><a class="internal" href="../../images/229/22947.png.htm" title="In this example, the X server takes input from a keyboard and mouse and displays to a screen. A web browser and a terminal emulator run on the user&#39;s workstation, and a system updater runs on a remote server but is controlled from the user&#39;s machine. Note that the remote application runs just as it would locally."><img alt="In this example, the X server takes input from a keyboard and mouse and displays to a screen. A web browser and a terminal emulator run on the user&#39;s workstation, and a system updater runs on a remote server but is controlled from the user&#39;s machine. Note that the remote application runs just as it would locally." height="422" longdesc="/wiki/Image:X_client_server_example.png" src="../../images/229/22947.png" width="250" /></a><div class="thumbcaption">In this example, the X server takes input from a keyboard and mouse and displays to a screen. A <!--del_lnk--> web browser and a <!--del_lnk--> terminal emulator run on the user&#39;s workstation, and a system updater runs on a remote server but is controlled from the user&#39;s machine. Note that the remote application runs just as it would locally.</div>
       </div>
      </div>
      <p>The <!--del_lnk--> communication protocol between server and client operates <!--del_lnk--> network-transparently: the client and server may run on the same machine or on different ones, possibly with different <!--del_lnk--> architectures and <!--del_lnk--> operating systems, but they run the same in either case. A client and server can even communicate <!--del_lnk--> securely over the <a href="../../wp/i/Internet.htm" title="Internet">Internet</a> by <!--del_lnk--> tunneling the connection over an <!--del_lnk--> encrypted network session.<p>To start a remote client program displaying to a local server, the user will typically open a <!--del_lnk--> terminal window and <!--del_lnk--> telnet or <!--del_lnk--> ssh to the remote machine, tell it to display to the user&#39;s machine (<i>e.g.</i> <tt>export DISPLAY=</tt><i>[user&#39;s machine]</i><tt>:0</tt> on a remote machine running <!--del_lnk--> bash), then start the client. The client will then connect to the local server and the remote application will display to the local screen and accept input from the local input devices. Alternatively, the local machine may run a small helper program to connect to a remote machine and start the desired client application there.<p>Practical examples of remote clients include:<ul>
       <li>administering a remote machine graphically<li>running a computationally intensive simulation on a remote Unix machine and displaying the results on a local Windows desktop machine<li>running graphical software on several machines at once, controlled by a single display, keyboard and mouse.</ul>
      <p><a id="Design_principles_of_X" name="Design_principles_of_X"></a><h2> <span class="mw-headline">Design principles of X</span></h2>
      <p>In 1984, <!--del_lnk--> Bob Scheifler and <!--del_lnk--> Jim Gettys set out the early principles of X:<ul>
       <li><i>Do not add new functionality unless an implementor cannot complete a real application without it.</i><li><i>It is as important to decide what a system is not as to decide what it is. Do not serve all the world&#39;s needs; rather, make the system extensible so that additional needs can be met in an upwardly compatible fashion.</i><li><i>The only thing worse than generalizing from one example is generalizing from no examples at all.</i><li><i>If a problem is not completely understood, it is probably best to provide no solution at all.</i><li><i>If you can get 90 percent of the desired effect for 10 percent of the work, use the simpler solution.</i> (See also <!--del_lnk--> Worse is better.)<li><i>Isolate complexity as much as possible.</i><li><i>Provide mechanism rather than policy. In particular, place user interface policy in the clients&#39; hands.</i></ul>
      <p>The first principle was modified during the design of X11 to: <i>&quot;Do not add new functionality unless you know of some real application that will require it.&quot;</i><p>X has largely kept to these principles since. The reference implementation is developed with a view to extension and improvement of the implementation, whilst remaining almost entirely compatible with the original 1987 protocol.<p><a id="User_interfaces" name="User_interfaces"></a><h2> <span class="mw-headline">User interfaces</span></h2>
      <p>X deliberately contains no specification as to application <!--del_lnk--> user interface, such as <!--del_lnk--> buttons, <!--del_lnk--> menus, window <!--del_lnk--> title bars and so on. Instead, user software &ndash; such as <!--del_lnk--> window managers, GUI <!--del_lnk--> widget toolkits and <!--del_lnk--> desktop environments, or application-specific GUIs, such as <!--del_lnk--> point of sale &ndash; provide/define all such details. As such, the &quot;typical&quot; X interface has varied tremendously over the years.<p>A <!--del_lnk--> window manager controls the placement and appearance of application windows. This may have an interface akin to that of <a href="../../wp/m/Microsoft_Windows.htm" title="Microsoft Windows">Microsoft Windows</a> or of the <a href="../../wp/m/Macintosh.htm" title="Apple Macintosh">Macintosh</a> (examples include <!--del_lnk--> KWin in <!--del_lnk--> KDE or <!--del_lnk--> Metacity in <a href="../../wp/g/GNOME.htm" title="GNOME">GNOME</a>) or have radically different controls (such as a <!--del_lnk--> tiling window manager). The window manager may be bare-bones (<i>e.g.</i> <!--del_lnk--> twm, the basic window manager supplied with X) or offer functionality verging on that of a full desktop environment (<i>e.g.</i> <!--del_lnk--> Enlightenment).<p>Many users use X with a full <!--del_lnk--> desktop environment, which includes a window manager, various applications and a consistent interface. <a href="../../wp/g/GNOME.htm" title="GNOME">GNOME</a> and <!--del_lnk--> KDE are the most popular desktop environments. The <!--del_lnk--> Unix standard environment is the <!--del_lnk--> Common Desktop Environment (CDE). The <!--del_lnk--> freedesktop.org initiative addresses interoperability between desktops and the components needed for a competitive X desktop.<p>As X is responsible for keyboard and mouse interaction with graphical desktops, certain <!--del_lnk--> keyboard shortcuts have become associated with X. Control-Alt-Backspace terminates the currently running X session, while Control-Alt in conjunction with a <!--del_lnk--> function key switches to the associate <!--del_lnk--> virtual console.<p><a id="Implementations" name="Implementations"></a><h2> <span class="mw-headline">Implementations</span></h2>
      <p>The X.Org <!--del_lnk--> reference implementation serves as the <!--del_lnk--> canonical implementation of X. Due to the liberal <!--del_lnk--> licensing, a number of variations, both <!--del_lnk--> free and <!--del_lnk--> proprietary, have appeared. Commercial UNIX vendors have tended to take the reference implementation and adapt it for their hardware, usually customising it heavily and adding proprietary extensions.<table align="left" style="float: left; clear: left; background: none; border: none;">
       <tr>
        <td>
        </td>
       </tr>
       <tr>
        <td>
        </td>
       </tr>
      </table>
      <p>Up to 2004, <!--del_lnk--> XFree86 provided the most common X variant on free <!--del_lnk--> Unix-like systems. XFree86 started as a <!--del_lnk--> port of X for <!--del_lnk--> 386-compatible PCs and, by the end of the 1990s, had become the greatest source of technical innovation in X and the <i>de facto</i> steward of X development <!--del_lnk--> . Since 2004, however, the <!--del_lnk--> X.Org reference implementation, a <!--del_lnk--> fork of XFree86, has become predominant.<p>While computer aficionados most often associate X with Unix, X servers also exist natively within other graphical environments. <!--del_lnk--> Hewlett-Packard&#39;s <!--del_lnk--> OpenVMS operating system includes a version of X with <!--del_lnk--> CDE, known as <!--del_lnk--> DECwindows, as its standard desktop environment. <!--del_lnk--> Apple&#39;s <!--del_lnk--> Mac OS X v10.3 (Panther) and up includes <!--del_lnk--> X11.app, based on XFree86 4.3 and X11R6.6, with better <!--del_lnk--> Mac OS X integration. Third-party servers under Macintosh System 7, 8 and 9 included <!--del_lnk--> MacX.<p><a href="../../wp/m/Microsoft_Windows.htm" title="Microsoft Windows">Microsoft Windows</a> does not come with support for X, but many third-party implementations exist, both <!--del_lnk--> free software such as <!--del_lnk--> Cygwin/X, <!--del_lnk--> Xming, <!--del_lnk--> WeirdMind and <!--del_lnk--> WeirdX; and proprietary products such as <!--del_lnk--> Xmanager, <!--del_lnk--> X-Deep/32, <!--del_lnk--> WiredX, <!--del_lnk--> Exceed and <!--del_lnk--> X-Win32. They normally serve to control remote X clients.<p>When another windowing system (such as those of Microsoft Windows or Mac OS) hosts X, the X system generally runs &quot;rootless&quot;, meaning the host windowing environment looks after the root window (the background and associated menus) and manages the geometry of the hosted X windows &mdash; although some servers (Exceed, for example) can also create the root window for the remote clients to display to as a separate window in the host system.<p><a id="X_terminals" name="X_terminals"></a><h3> <span class="mw-headline">X terminals</span></h3>
      <div class="thumb tright">
       <div style="width:182px;"><a class="internal" href="../../images/285/28520.jpg.htm" title="A Network Computing Devices NCD-88k X terminal."><img alt="A Network Computing Devices NCD-88k X terminal." height="120" longdesc="/wiki/Image:Network_Computing_Devices_NCD-88k_X_terminal.jpg" src="../../images/285/28520.jpg" width="180" /></a><div class="thumbcaption">
         <div class="magnify" style="float:right"><a class="internal" href="../../images/285/28520.jpg.htm" title="Enlarge"><img alt="Enlarge" height="11" src="../../images/0/1.png" width="15" /></a></div> A Network Computing Devices NCD-88k X terminal.</div>
       </div>
      </div>
      <dl>
       <dd>
      </dl>
      <p>An <i>X terminal</i> is a <!--del_lnk--> smart terminal that runs an X server as a <!--del_lnk--> thin client. This architecture became popular for building inexpensive terminal parks for many users to simultaneously use the same large server. This use very much aligns with the original intention of the MIT project.<p>X terminals explore the network (the local <!--del_lnk--> broadcast domain) using the <!--del_lnk--> X Display Manager Control Protocol to generate a list of available hosts that they can run clients from. The initial host needs to run an <!--del_lnk--> X display manager.<p>Dedicated (hardware) X terminals have become less common; a <!--del_lnk--> PC with an X server typically provides the same functionality at a lower cost.<p><a id="Limitations_and_criticisms_of_X" name="Limitations_and_criticisms_of_X"></a><h2> <span class="mw-headline">Limitations and criticisms of X</span></h2>
      <p>The <i><!--del_lnk--> UNIX-HATERS Handbook</i> devoted an entire chapter, <!--del_lnk--> &quot;The X-Windows Disaster&quot;, to the problems of X in the late 1980s and early 1990s. <i>Why X Is Not Our Ideal Window System</i> (1990) by Gajewska, Manasse and McCormack detailed problems in the protocol with recommendations for improvement.<p><a id="Video_hardware" name="Video_hardware"></a><h3> <span class="mw-headline">Video hardware</span></h3>
      <p>The performance edge for graphical computing is now in the most advanced graphics functions. Manufacturers typically implement these in proprietary drivers, generally writing for <a href="../../wp/m/Microsoft_Windows.htm" title="Microsoft Windows">Windows</a> (the largest consumer-market) first. <!--del_lnk--> XFree86 and the <!--del_lnk--> X.Org Server have reverse-engineered drivers for many older cards. However, as the high performance video market offers &quot;<!--del_lnk--> state-of-the-art&quot; products, some vendors regard programming details as trade secrets or as <!--del_lnk--> patentable inventions that they do not wish to reveal.<p><a id="User_interface_features" name="User_interface_features"></a><h3> <span class="mw-headline">User interface features</span></h3>
      <p>X deliberately contains no specification as to user interface or most inter-application communication. This has resulted in several vastly different interfaces, and in applications that have not always quite worked together. The <!--del_lnk--> ICCCM, a specification for client interoperability, has a reputation as difficult to implement correctly. Further standards efforts such as <!--del_lnk--> Motif and <!--del_lnk--> CDE did not remedy matters. This has frustrated users and programmers <!--del_lnk-->  for a long time. Graphics programmers <!--del_lnk--> now generally address consistency of application <!--del_lnk--> look and feel and communication by coding to a specific desktop environment or to a specific widget toolkit, which also avoids having to deal directly with the ICCCM.<p>The X protocol provides no facilities for handling sound, leaving it to the operating system to provide support for audio hardware and sound playback. As users increasingly expect sound, this has led to various incompatible sound subsystems. Most programmers simply use local, OS-specific sound <!--del_lnk--> APIs. The first generation of client-server sound systems included <!--del_lnk--> rplay and <!--del_lnk--> Network Audio System. More recent efforts have produced <!--del_lnk--> EsounD (GNOME) and <!--del_lnk--> ARts (KDE). In 2001, the <!--del_lnk--> X.org foundation announced the development of the <!--del_lnk--> Media Application Server (<i>MAS</i>) to remedy this problem. However, none of these is generally used as a solution to the problem.<p><a id="Network" name="Network"></a><h3> <span class="mw-headline">Network</span></h3>
      <div class="thumb tright">
       <div style="width:252px;"><a class="internal" href="../../images/285/28521.png.htm" title="Example of tunnelling an X11 application over SSH."><img alt="Example of tunnelling an X11 application over SSH." height="166" longdesc="/wiki/Image:X11_ssh_tunnelling.png" src="../../images/285/28521.png" width="250" /></a><div class="thumbcaption">
         <div class="magnify" style="float:right"><a class="internal" href="../../images/285/28521.png.htm" title="Enlarge"><img alt="Enlarge" height="11" src="../../images/0/1.png" width="15" /></a></div> Example of tunnelling an X11 application over SSH.</div>
       </div>
      </div>
      <p>One cannot <!--del_lnk--> currently detach an X client or session from one server and reattach it to another, as with <!--del_lnk--> Virtual Network Computing (VNC). Work has started to add this facility to X. Workarounds (<i>VNC&nbsp;:0 viewers</i>) exist to make the current X-server screen available via VNC.<p>Network traffic between an X server and remote X clients has no default encryption. An attacker with a <!--del_lnk--> packet sniffer can intercept and read it. Most users address this issue by tunneling X over <!--del_lnk--> SSH; most SSH implementations support the tunneling of X applications although it is sometimes disabled by default.<p><a id="Client-server_separation" name="Client-server_separation"></a><h3> <span class="mw-headline">Client-server separation</span></h3>
      <p>X&#39;s design requires the clients and server to operate separately, and device independence and the separation of client and server incur overhead compared to an operating system where the graphics are integrated into the OS, such as early versions of <a href="../../wp/m/Microsoft_Windows.htm" title="Microsoft Windows">Microsoft Windows</a> or <!--del_lnk--> Mac OS. X advocates recommended 4 to 8 <!--del_lnk--> MB of <!--del_lnk--> RAM for reasonable performance; until the mid-1990s, this seemed bloated compared to Windows or Mac OS.<p>Current versions of Windows and <!--del_lnk--> Mac OS X <!--del_lnk--> Quartz have internal subsystem separation similar to the client/server divide in X and comparable performance and resource usage to X with <!--del_lnk--> KDE or <a href="../../wp/g/GNOME.htm" title="GNOME">GNOME</a>. Most of the overhead comes from network <!--del_lnk--> round-trip delay time between client and server (<!--del_lnk--> latency rather than from the protocol itself): the best solutions to performance issues involve paying attention to application design <!--del_lnk--> . A common misconception is that X&#39;s network features result in excessive complexity if only used locally, and that X&#39;s network capabilities cause an undesirable performance hit; modern X implementations use local sockets and shared memory, requiring very little overhead.<p><a id="Competitors_to_X" name="Competitors_to_X"></a><h2> <span class="mw-headline">Competitors to X</span></h2>
      <p>For graphics <!--del_lnk--> Unix-like systems use X almost universally. Nevertheless, some people have attempted writing alternatives to and replacements for&nbsp;X. Historical alternatives include <!--del_lnk--> Sun&#39;s <!--del_lnk--> NeWS, which failed in the market, and <!--del_lnk--> NeXT&#39;s <!--del_lnk--> Display PostScript, which eventually became <!--del_lnk--> Apple&#39;s <!--del_lnk--> Quartz for <!--del_lnk--> Mac OS&nbsp;X.<p>Modern attempts to address criticisms of X by replacing it completely include Berlin/<!--del_lnk--> Fresco and the <!--del_lnk--> Y Window System. These alternatives have seen negligible take-up, however, and commentators widely doubt the viability of any replacement that does not preserve backwards-compatibility with&nbsp;X.<p>Other competitors attempt to avoid the overhead of X by working directly with the hardware. Such projects include <!--del_lnk--> DirectFB and the very small <!--del_lnk--> FBUI. The <!--del_lnk--> Direct Rendering Infrastructure, which aims to provide a reliable kernel-level interface to the <!--del_lnk--> framebuffer, may make these efforts redundant.<p>Other ways to achieve network transparency for graphical services include:<ul>
       <li>the <!--del_lnk--> SVG Terminal, a protocol to update <!--del_lnk--> Scalable Vector Graphics (SVG) content in a browser in near-real-time<li><!--del_lnk--> Virtual Network Computing (VNC), a very low-level system which sends compressed bitmaps across the network; the Unix implementation includes an X server<li><!--del_lnk--> Citrix MetaFrame, an X-like product for Microsoft Windows<li><!--del_lnk--> Tarantella, which provides a Java client for use in web browsers</ul>
      <p><a id="History" name="History"></a><h2> <span class="mw-headline">History</span></h2>
      <p><a id="Predecessors" name="Predecessors"></a><h3> <span class="mw-headline">Predecessors</span></h3>
      <p>Several bitmap display systems preceded X. From <!--del_lnk--> Xerox came the <!--del_lnk--> Alto (1973) and the <!--del_lnk--> Star (1981). From <!--del_lnk--> Apple came the <!--del_lnk--> Lisa (1983) and the <a href="../../wp/m/Macintosh.htm" title="Apple Macintosh">Macintosh</a> (1984). The <a href="../../wp/u/Unix.htm" title="Unix">Unix</a> world had the <!--del_lnk--> Andrew Project (1982) and <!--del_lnk--> Rob Pike&#39;s <!--del_lnk--> Blit terminal (1984).<p>X derives its name as a successor to a pre-1983 window system called <!--del_lnk--> W (the letter X directly following W in the <a href="../../wp/l/Latin_alphabet.htm" title="Latin alphabet">Latin alphabet</a>). W Window System ran under the <!--del_lnk--> V operating system. W used a network protocol supporting terminal and graphics windows, the server maintaining display lists.<p><a id="Origin_and_early_development" name="Origin_and_early_development"></a><h3> <span class="mw-headline">Origin and early development</span></h3>
      <p>The original idea of X emerged at MIT in 1984 as a collaboration between <!--del_lnk--> Jim Gettys (of <!--del_lnk--> Project Athena) and <!--del_lnk--> Bob Scheifler (of the <!--del_lnk--> MIT Laboratory for Computer Science). Scheifler needed a usable display environment for debugging the <!--del_lnk--> Argus system. Project Athena (a joint project between <!--del_lnk--> Digital Equipment Corporation (DEC), MIT and <!--del_lnk--> IBM to provide easy access to computing resources for all students) needed a platform-independent graphics system to link together its heterogeneous multiple-vendor systems; the window system then under development in <!--del_lnk--> Carnegie Mellon University&#39;s <!--del_lnk--> Andrew Project did not make licences available, and no alternatives existed.<p>The project solved this by creating a protocol that could both run local applications and call on remote resources. In mid-1983 an initial port of W to Unix ran at one-fifth of its speed under V; in May 1984, Scheifler replaced the <!--del_lnk--> synchronous <!--del_lnk--> protocol of W with an <!--del_lnk--> asynchronous protocol and the display lists with immediate mode graphics to make X version 1. X became the first windowing system environment to offer true hardware-independence and vendor-independence.<p>Scheifler, Gettys and <!--del_lnk--> Ron Newman set to work and X progressed rapidly. They released Version 6 in January 1985. DEC, then preparing to release its first <!--del_lnk--> Ultrix workstation, judged X the only windowing system likely to become available in time. DEC engineers ported X6 to DEC&#39;s QVSS display on <!--del_lnk--> MicroVAX.<p>In the second quarter of 1985 X acquired <!--del_lnk--> colour support to function in the DEC <!--del_lnk--> VAXstation-II/GPX, forming what became version 9. Although MIT had licensed X6 to some outside groups for a fee, it decided at this time to license X9 and future versions under what became known as the <!--del_lnk--> MIT License. X9 appeared in September 1985.<p>A group at <!--del_lnk--> Brown University ported version 9 to the <!--del_lnk--> IBM <!--del_lnk--> RT/PC, but problems with reading unaligned data on the RT forced an incompatible protocol change, leading to version 10 in late 1985. By 1986, outside organizations had started asking for X. The release of X10R2 took place in January 1986; that of X10R3 in February 1986. X10R3 became the first version to achieve wide deployment, with both DEC and <!--del_lnk--> Hewlett-Packard releasing products based on it. Other groups ported X10 to <!--del_lnk--> Apollo and to <!--del_lnk--> Sun workstations and even to the IBM <!--del_lnk--> PC/AT. Demonstrations of the first commercial application for X (a mechanical computer-aided engineering system that ran on VAXes and displayed on PCs running an X server) took place at the Autofact trade show at that time. The last version of X10, X10R4, appeared in December 1986.<p>Although X10 offered interesting and powerful functionality, it had become obvious that the X protocol could use a more hardware-neutral redesign before it became too widely deployed; but MIT alone would not have the resources available for such a complete redesign. As it happened, DEC&#39;s <!--del_lnk--> Western Software Laboratory found itself between projects. <!--del_lnk--> Smokey Wallace of DEC WSL and Jim Gettys proposed that DEC WSL build X11 and make it freely available under the same terms as X9 and X10. This process started in May 1986, with the protocol finalised in August. Alpha-testing of the software started in February 1987, beta-testing in May; the release of X11 finally occurred on <!--del_lnk--> September 15, <!--del_lnk--> 1987.<p>The X11 protocol design, led by Scheifler, got extensively discussed on open mailing lists on the nascent <a href="../../wp/i/Internet.htm" title="Internet">Internet</a>. X therefore represents one of the first very large-scale <!--del_lnk--> free software projects.<p><a id="The_MIT_X_Consortium_and_the_X_Consortium.2C_Inc." name="The_MIT_X_Consortium_and_the_X_Consortium.2C_Inc."></a><h3> <span class="mw-headline">The MIT X Consortium and the X Consortium, Inc.</span></h3>
      <p>In 1987, with the success of X11 becoming apparent, MIT wished to relinquish the stewardship of X, but at a June 1987 meeting with nine vendors, the vendors told MIT that they believed in the need for a neutral party to keep X from fragmenting in the marketplace. In January 1988, the <i>MIT X Consortium</i> formed as a non-profit vendor group, with Scheifler as director, to direct the future development of X in a neutral atmosphere inclusive of commercial and educational interests. Jim Fulton joined in January 1988 and <!--del_lnk--> Keith Packard in March 1988 as senior <!--del_lnk--> developers, with Jim focusing on <!--del_lnk--> Xlib, fonts, window managers, and utilities; and Keith re-implementing the server. Donna Converse and Chris Peterson joined later that year, focusing on toolkits and widget sets, working closely with Ralph Swick of MIT Project Athena. The MIT X Consortium produced several significant revisions to X11, the first (Release 2 - X11R2) in February 1988.<table align="right" style="float: right; clear: right; background: none; border: none;">
       <tr>
        <td>
        </td>
       </tr>
       <tr>
        <td>
        </td>
       </tr>
      </table>
      <p>In 1993, the X Consortium, Inc. (a non-profit corporation) formed as the successor to the MIT X Consortium. It released X11R6 on <!--del_lnk--> May 16, <!--del_lnk--> 1994. In 1995 it took over stewardship of the <!--del_lnk--> Motif toolkit and of the <!--del_lnk--> Common Desktop Environment for Unix systems. The X Consortium dissolved at the end of 1996, producing a final revision, X11R6.3, and a legacy of increasing commercial influence in the development. <!--del_lnk-->  <!--del_lnk--> <p><a id="The_Open_Group" name="The_Open_Group"></a><h3> <span class="mw-headline">The Open Group</span></h3>
      <p>In mid-1997 the X Consortium passed stewardship of X to <!--del_lnk--> The Open Group, a vendor group formed in early 1996 by the merger of the <!--del_lnk--> Open Software Foundation and <!--del_lnk--> X/Open.<p>The Open Group released X11R6.4 in early 1998. Controversially, X11R6.4 departed from the traditional liberal licensing terms, as the Open Group sought to assure funding for X&#39;s development <!--del_lnk--> . The new terms would have prevented its adoption by many projects (such as <!--del_lnk--> XFree86) and even by some commercial vendors. After XFree86 threatened a <!--del_lnk--> fork <!--del_lnk--> , the Open Group relicensed X11R6.4 under the traditional license in September 1998. <!--del_lnk-->  The Open Group&#39;s last release came as X11R6.4 patch 3.<p><a id="X.Org_and_XFree86" name="X.Org_and_XFree86"></a><h3> <span class="mw-headline">X.Org and XFree86</span></h3>
      <p><!--del_lnk--> XFree86 originated in 1992 from the X386 server for <!--del_lnk--> IBM PC compatibles included with X11R5 in 1991, written by Thomas Roell and Mark W. Snitily and donated to the MIT X Consortium by Snitily Graphics Consulting Services (SGCS). XFree86 evolved over time from just one port of X to the leading and most popular implementation and the <i>de facto</i> steward of X&#39;s development <!--del_lnk--> .<p>In May 1999, the Open Group formed <!--del_lnk--> X.Org. X.Org supervised the release of versions X11R6.5.1 onward. X development at this time had become moribund <!--del_lnk--> ; most technical innovation since the X Consortium had dissolved had taken place in the XFree86 project <!--del_lnk--> . In 1999, the XFree86 team joined X.Org as an honorary (non-paying) member <!--del_lnk--> , encouraged by various hardware companies <!--del_lnk-->  interested in using XFree86 with Linux and in its status as the most popular version of X.<p>By 2003, while the popularity of Linux (and hence the installed base of X) surged, X.Org remained all but inactive <!--del_lnk--> , and active development took place largely within XFree86. However, considerable dissent developed within XFree86. The XFree86 project suffered from a perception of a far too <!--del_lnk--> cathedral-like development model; developers could not get <!--del_lnk--> CVS commit access <!--del_lnk-->  <!--del_lnk-->  and vendors had to maintain extensive <!--del_lnk--> patch sets <!--del_lnk--> . In March 2003 the XFree86 organization expelled Keith Packard, who had joined XFree86 after the end of the original MIT X Consortium, with considerable ill-feeling <!--del_lnk-->  <!--del_lnk-->  <!--del_lnk--> .<p>X.Org and XFree86 began discussing a reorganisation suited to properly nurturing the development of X <!--del_lnk-->  <!--del_lnk-->  <!--del_lnk--> . Jim Gettys had been pushing strongly for an open development model since at least 2000 <!--del_lnk--> . Gettys, Packard and several others began discussing in detail the requirements for the effective governance of X with open development.<p>Finally, in an echo of the X11R6.4 licensing dispute, XFree86 released version 4.4 in February 2004 under a more restricted license which many projects relying on X found unacceptable <!--del_lnk--> . The added clause to the license was based upon the original <!--del_lnk--> BSD license&#39;s advertising clause, which was viewed by the <!--del_lnk--> Free Software Foundation and <!--del_lnk--> Debian as incompatible with the <!--del_lnk--> GNU General Public License <!--del_lnk--> . Other groups saw further restrictions as being against the spirit of the original X (<a href="../../wp/o/OpenBSD.htm" title="OpenBSD">OpenBSD</a> threatening a <!--del_lnk--> fork, for example). The license issue, combined with the difficulties in getting changes in, left many feeling the time was ripe for a fork <!--del_lnk--> .<p><a id="The_X.Org_Foundation" name="The_X.Org_Foundation"></a><h3> <span class="mw-headline">The X.Org Foundation</span></h3>
      <p>In early 2004 various people from X.Org and freedesktop.org formed the <!--del_lnk--> X.Org Foundation, and the Open Group gave it control of the <tt>x.org</tt> <!--del_lnk--> domain name. This marked a radical change in the governance of X. Whereas the stewards of X since 1988 (including the previous X.Org) had been vendor organizations, the Foundation was led by software developers and used community development based on the <!--del_lnk--> bazaar model, which relies on outside involvement. Membership was opened to individuals, with corporate membership being in the form of sponsorship. Several major corporations such as <!--del_lnk--> Hewlett-Packard and <!--del_lnk--> Sun Microsystems currently support the X.Org Foundation.<p>The Foundation takes an oversight role over X development: technical decisions are made on their merits by achieving rough consensus among community members. Technical decisions are not made by the board of directors; in this sense, it is strongly modelled on the technically non-interventionist <!--del_lnk--> GNOME Foundation. The Foundation does not employ any developers.<p>The Foundation released X11R6.7, the <!--del_lnk--> X.Org Server, in April 2004, based on XFree86 4.4RC2 with X11R6.6 changes merged. Gettys and Packard had taken the last version of XFree86 under the old license and, by making a point of an open development model and retaining GPL compatibility, brought many of the old XFree86 developers on board <!--del_lnk--> .<p>X11R6.8 came out in September 2004. It added significant new features, including preliminary support for translucent windows and other sophisticated visual effects, screen magnifiers and thumbnailers, and facilities to integrate with 3D immersive display systems such as Sun&#39;s <!--del_lnk--> Project Looking Glass and the <!--del_lnk--> Croquet project. External applications called <i><!--del_lnk--> compositing managers</i> provide policy for the visual appearance.<p><a id="Future_directions" name="Future_directions"></a><h2> <span class="mw-headline">Future directions</span></h2>
      <p>With the X.Org Foundation and freedesktop.org, the main line of X development has started to progress rapidly once more. The developers intend to release present and future versions as usable finished products, not merely as bases for vendors to build a product upon.<p>On <!--del_lnk--> December 21, <!--del_lnk--> 2005 <!--del_lnk--> , X.Org released X11R6.9, the monolithic <!--del_lnk--> source tree for legacy users, and X11R7.0, the same source code separated into independent modules, each maintainable in separate projects <!--del_lnk--> . The Foundation released X11R7.1 on May 22, 2006, about four months after 7.0, with considerable feature improvements <!--del_lnk--> .<p>For sufficiently capable combinations of hardware and operating systems, X.Org plans to access the video hardware only via <!--del_lnk--> OpenGL and the <!--del_lnk--> Direct Rendering Infrastructure (DRI). The DRI first appeared in XFree86 version 4.0 and became standard in X11R6.7 and later <!--del_lnk--> . Many operating systems have started to add kernel support for hardware manipulation. This work proceeds incrementally.<p><a id="Nomenclature" name="Nomenclature"></a><h2> <span class="mw-headline">Nomenclature</span></h2>
      <p>People in the computer trade commonly shorten the phrase &quot;X Window System&quot; to &quot;X11&quot; or simply to &quot;X&quot;. The term &quot;X Windows&quot; (in the manner of &quot;Microsoft Windows&quot;) is not officially endorsed, though it has been in common use since early in the history of X and has been used deliberately for literary effect, for example in the <i>UNIX-HATERS Handbook</i>.<p><a id="Release_history" name="Release_history"></a><h2> <span class="mw-headline">Release history</span></h2>
      <table class="wikitable">
       <tr>
        <th>Version</th>
        <th style="width:10em">Release date</th>
        <th>Most important changes</th>
       </tr>
       <tr>
        <td>X1</td>
        <td>June 1984</td>
        <td>First use of the name &quot;X&quot;; fundamental changes distinguishing the product from W.</td>
       </tr>
       <tr>
        <td>X6</td>
        <td>January 1985</td>
        <td>First version licensed to a handful of outside companies.</td>
       </tr>
       <tr>
        <td>X9</td>
        <td>September 1985</td>
        <td>Colour. First release under <!--del_lnk--> MIT License.</td>
       </tr>
       <tr>
        <td>X10</td>
        <td>late 1985</td>
        <td>IBM RT/PC, AT (running DOS), and others</td>
       </tr>
       <tr>
        <td>X10R2</td>
        <td>January 1986</td>
        <td>
        </td>
       </tr>
       <tr>
        <td>X10R3</td>
        <td>February 1986</td>
        <td>First release outside MIT. <!--del_lnk--> uwm made standard window manager.</td>
       </tr>
       <tr>
        <td>X10R4</td>
        <td>December 1986</td>
        <td>Last version of X10.</td>
       </tr>
       <tr>
        <td>X11</td>
        <td><!--del_lnk--> September 15, <!--del_lnk--> 1987</td>
        <td>First release of the current protocol.</td>
       </tr>
       <tr>
        <td>X11R2</td>
        <td>February 1988</td>
        <td>First X Consortium release. <!--del_lnk--> </td>
       </tr>
       <tr>
        <td>X11R3</td>
        <td><!--del_lnk--> October 25, <!--del_lnk--> 1988</td>
        <td><!--del_lnk--> XDM</td>
       </tr>
       <tr>
        <td>X11R4</td>
        <td><!--del_lnk--> December 22, <!--del_lnk--> 1989</td>
        <td><!--del_lnk--> XDMCP, <!--del_lnk--> twm brought in as standard window manager, application improvements, <!--del_lnk--> Shape extension, new fonts.</td>
       </tr>
       <tr>
        <td>X11R5</td>
        <td><!--del_lnk--> September 5, <!--del_lnk--> 1991</td>
        <td><!--del_lnk--> PEX, Xcms (<!--del_lnk--> colour management), font server, <!--del_lnk--> X386, <!--del_lnk--> X video extension</td>
       </tr>
       <tr>
        <td>X11R6</td>
        <td><!--del_lnk--> May 16, <!--del_lnk--> 1994</td>
        <td><!--del_lnk--> ICCCM v2.0; Inter-Client Exchange; X Session Management; X Synchronization extension; X Image extension; XTEST extension; X Input; X Big Requests; XC-MISC; XFree86 changes.</td>
       </tr>
       <tr>
        <td>X11R6.1</td>
        <td><!--del_lnk--> March 14, <!--del_lnk--> 1996</td>
        <td>X Double Buffer extension; <!--del_lnk--> X keyboard extension; X Record extension.</td>
       </tr>
       <tr>
        <td>X11R6.2<br /> X11R6.3 (Broadway)</td>
        <td><!--del_lnk--> December 23, <!--del_lnk--> 1996</td>
        <td>Web functionality, <!--del_lnk--> LBX. Last X Consortium release. X11R6.2 is the tag for a subset of X11R6.3 with the only new features over R6.1 being XPrint and the Xlib implementation of vertical writing and user-defined character support. <!--del_lnk--> </td>
       </tr>
       <tr>
        <td>X11R6.4</td>
        <td><!--del_lnk--> March 31, <!--del_lnk--> 1998</td>
        <td><!--del_lnk--> Xinerama. <!--del_lnk--> </td>
       </tr>
       <tr>
        <td>X11R6.5</td>
        <td>
        </td>
        <td>Internal X.org release; not made publicly available.</td>
       </tr>
       <tr>
        <td>X11R6.5.1</td>
        <td><!--del_lnk--> August 20, <!--del_lnk--> 2000</td>
        <td>
        </td>
       </tr>
       <tr>
        <td>X11R6.6</td>
        <td><!--del_lnk--> April 4, <!--del_lnk--> 2001</td>
        <td>Bug fixes, XFree86 changes.</td>
       </tr>
       <tr>
        <td>X11R6.7.0</td>
        <td><!--del_lnk--> April 6, <!--del_lnk--> 2004</td>
        <td>First X.Org Foundation release, incorporating XFree86 4.4rc2. Full end-user distribution. Removal of XIE, <!--del_lnk--> PEX and libxml2. <!--del_lnk--> </td>
       </tr>
       <tr>
        <td>X11R6.8.0</td>
        <td><!--del_lnk--> September 8, <!--del_lnk--> 2004</td>
        <td>Window translucency, XDamage, Distributed Multihead X, <!--del_lnk--> XFixes, Composite, XEvIE.</td>
       </tr>
       <tr>
        <td>X11R6.8.1</td>
        <td><!--del_lnk--> September 17, <!--del_lnk--> 2004</td>
        <td>Security fix in <!--del_lnk--> libxpm.</td>
       </tr>
       <tr>
        <td>X11R6.8.2</td>
        <td><!--del_lnk--> February 10, <!--del_lnk--> 2005</td>
        <td>Bug fixes, driver updates.</td>
       </tr>
       <tr>
        <td>X11R6.9<br /> X11R7.0</td>
        <td><!--del_lnk--> December 21, <!--del_lnk--> 2005</td>
        <td><!--del_lnk--> EXA, major source code refactoring <!--del_lnk--> . From the same source-code base, the modular <!--del_lnk--> autotooled version became 7.0 and the monolithic <!--del_lnk--> imake version was frozen at 6.9.</td>
       </tr>
       <tr>
        <td><b>X11R7.1</b></td>
        <td><!--del_lnk--> May 22, <!--del_lnk--> 2006</td>
        <td>EXA enhancements, <!--del_lnk--> KDrive integrated, <!--del_lnk--> AIGLX, OS and platform support enhancements <!--del_lnk--> .</td>
       </tr>
       <tr>
        <td><i>X11R7.2</i></td>
        <td><i>2006</i></td>
        <td>Removal of <!--del_lnk--> LBX and the built-in keyboard driver, X-ACE, <!--del_lnk--> XCB, autoconfig improvements, cleanups. <!--del_lnk--> </td>
       </tr>
      </table>
      <p><a id="See_also" name="See_also"></a><div class="printfooter"> Retrieved from &quot;<!--del_lnk--> http://en.wikipedia.org/wiki/X_Window_System&quot;</div>
      <!-- end content -->
      <div class="visualClear">
      </div>
     </div>
    </div>
   </div>
   <!-- end of the left (by default at least) column -->
   <div class="visualClear">
   </div>
   <div id="footer">
    <div class="center"> This reference article is mainly selected from the English Wikipedia with only minor checks and changes (see www.wikipedia.org for details of authors and sources) and is available under the <nobr><a href="../../wp/w/Wikipedia_Text_of_the_GNU_Free_Documentation_License.htm">GNU Free Documentation License</a></nobr>. See also our <b><a href="../../disclaimer.htm">Disclaimer</a></b>. </div>
   </div>
   <script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
  </div>
  
 </body>
</html>
