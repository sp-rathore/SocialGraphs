<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html dir="ltr" lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type" />
  <meta content="Unix,Unix-like,Unix-like,16-bit,1970,1971,2005,2006,2008,2038,2106" name="keywords" />
  <link href="../../favicon.ico" rel="shortcut icon" />
  <link href="../../wp/w/Wikipedia_Text_of_the_GNU_Free_Documentation_License.htm" rel="copyright" />
  <title>Unix</title>
  <style media="screen,projection" type="text/css">/*<![CDATA[*/ @import "../../css/wp-monobook-main.css"; /*]]>*/</style>
  <link href="../../css/wp-commonPrint.css" media="print" rel="stylesheet" type="text/css" />
  <!--[if lt IE 5.5000]><style type="text/css">@import "../../css/IE50Fixes.css";</style><![endif]-->
  <!--[if IE 5.5000]><style type="text/css">@import "../../css/IE55Fixes.css";</style><![endif]-->
  <!--[if IE 6]><style type="text/css">@import "../../css/IE60Fixes.css";</style><![endif]-->
  <!--[if IE 7]><style type="text/css">@import "../../css/IE70Fixes.css";</style><![endif]-->
  <!--[if lt IE 7]><script type="text/javascript" src="../../js/IEFixes.js"></script>
		<meta http-equiv="imagetoolbar" content="no" /><![endif]-->
  <script type="text/javascript">
			var skin = "monobook";
			var stylepath = "/skins-1.5";

			var wgArticlePath = "/wiki/$1";
			var wgScriptPath = "/w";
			var wgServer = "http://en.wikipedia.org";
                        
			var wgCanonicalNamespace = "";
			var wgNamespaceNumber = 0;
			var wgPageName = "Unix";
			var wgTitle = "Unix";
			var wgArticleId = 31642;
			var wgIsArticle = true;
                        
			var wgUserName = null;
			var wgUserLanguage = "en";
			var wgContentLanguage = "en";
		</script>
  <script src="../../js/wikibits.js" type="text/javascript"><!-- wikibits js --></script>
  <script src="../../js/wp.js" type="text/javascript"><!-- site js --></script>
  <style type="text/css">/*<![CDATA[*/
@import "../../css/wp-common.css";
@import "../../css/wp-monobook.css";
@import "../../css/wp.css";
/*]]>*/</style>
  <!-- Head Scripts -->
 </head>
 <body class="mediawiki ns-0 ltr page-Unix">
  <div id="globalWrapper">
   <div id="column-content">
    <div id="content"><a id="top" name="top"></a><h1 class="firstHeading">Unix</h1>
     <div id="bodyContent">
      <h3 id="siteSub"><a href="../../index.htm">2007 Schools Wikipedia Selection</a>. Related subjects: <a href="../index/subject.IT.Software.htm">Software</a></h3>
      <!-- start content -->
      <p><b>Unix</b> (officially trademarked as <b>UNIX</b>) is a computer <!--del_lnk--> operating system originally developed in the 1960s and 1970s by a group of <a href="../../wp/a/AT%2526T.htm" title="AT&amp;T">AT&amp;T</a> employees at <!--del_lnk--> Bell Labs including <!--del_lnk--> Ken Thompson, <a href="../../wp/d/Dennis_Ritchie.htm" title="Dennis Ritchie">Dennis Ritchie</a>, and <!--del_lnk--> Douglas McIlroy. Today&#39;s Unix systems are split into various branches, developed over time by AT&amp;T, as well as various commercial vendors and non-profit organizations.<p>The present owner of the <!--del_lnk--> trademark <i>UNIX</i> is <!--del_lnk--> The Open Group, an industry standards consortium. Only systems fully compliant with and certified to the <!--del_lnk--> Single UNIX Specification qualify as &quot;UNIX&quot; (others are called &quot;Unix system-like&quot; or &quot;<!--del_lnk--> Unix-like&quot;).<p>During the late 1970s and early 1980s, Unix&#39;s influence in academic circles led to large-scale adoption (particularly of the <!--del_lnk--> BSD variant, originating from the <!--del_lnk--> University of California, Berkeley) of Unix by commercial startups, the most notable of which is <!--del_lnk--> Sun Microsystems. Today, in addition to certified Unix systems, Unix-like operating systems such as <a href="../../wp/l/Linux.htm" title="Linux">Linux</a> and <!--del_lnk--> Mac OS X are commonly encountered.<p>Sometimes, <i>Traditional Unix</i> may be used to describe a Unix or an operating system that has the characteristics of either <!--del_lnk--> Version 7 Unix or <!--del_lnk--> UNIX System V.<div class="thumb tright">
       <div style="width:302px;"><a class="internal" href="../../images/80/8094.png.htm" title="Filiation of Unix and Unix-like systems"><img alt="Filiation of Unix and Unix-like systems" height="256" longdesc="/wiki/Image:Unix.svg" src="../../images/80/8094.png" width="300" /></a><div class="thumbcaption">
         <div class="magnify" style="float:right"><a class="internal" href="../../images/80/8094.png.htm" title="Enlarge"><img alt="Enlarge" height="11" src="../../images/0/1.png" width="15" /></a></div> Filiation of Unix and Unix-like systems</div>
       </div>
      </div>
      <p>
       <script type="text/javascript">
//<![CDATA[
 if (window.showTocToggle) { var tocShowText = "show"; var tocHideText = "hide"; showTocToggle(); } 
//]]>
</script><a id="Overview" name="Overview"></a><h2> <span class="mw-headline">Overview</span></h2>
      <p>Unix operating systems are widely used in both <!--del_lnk--> servers and <!--del_lnk--> workstations. The Unix environment and the <!--del_lnk--> client-server program model were essential elements in the development of the <a href="../../wp/i/Internet.htm" title="Internet">Internet</a> and the reshaping of computing as centered in <!--del_lnk--> networks rather than in individual computers.<p>Both Unix and the <!--del_lnk--> C programming language were developed by AT&amp;T and distributed to government and academic institutions, causing both to be ported to a wider variety of machine families than any other operating system. As a result, Unix became synonymous with &quot;<!--del_lnk--> open systems&quot;.<p>Unix was designed to be <!--del_lnk--> portable, <!--del_lnk--> multi-tasking and <!--del_lnk--> multi-user in a <!--del_lnk--> time-sharing configuration. Unix systems are characterized by various concepts: the use of <!--del_lnk--> plain text for storing data; a hierarchical <!--del_lnk--> file system; treating devices and certain types of <!--del_lnk--> inter-process communication (IPC) as files; and the use of a large number of small programs that can be strung together through a <!--del_lnk--> command line interpreter using <!--del_lnk--> pipes, as opposed to using a single monolithic program that includes all of the same functionality. These concepts are known as the <!--del_lnk--> Unix philosophy.<p>Under Unix, the &quot;operating system&quot; consists of many of these utilities along with the master control program, the <!--del_lnk--> kernel. The kernel provides services to start and stop programs, handle the <!--del_lnk--> file system and other common &quot;high level&quot; tasks that most programs share, and, perhaps most importantly, schedules access to hardware to avoid conflicts if two programs attempt to simultaneously access the same resource or device. In order to mediate such access, the kernel was given special rights on the system and led to the division between <i>user-space</i> and <i>kernel-space</i>.<p>The <!--del_lnk--> microkernel tried to reverse the growing size of kernels and return to a system in which most tasks would be completed by smaller utilities. In an era when a &quot;normal&quot; computer consisted of a hard disk for storage and a <!--del_lnk--> data terminal for input and output (I/O), the Unix file model worked quite well as most I/O was &quot;linear&quot;. However, modern systems include networking and other new devices. Describing a graphical user interface driven by mouse control in an &quot;event driven&quot; fashion didn&#39;t work well under the old model. Work on systems supporting these new devices in the 1980s led to facilities for non-blocking I/O, forms of inter-process communications other than just pipes, as well as moving functionality such as network protocols out of the kernel.<p><a id="History" name="History"></a><h2> <span class="mw-headline">History</span></h2>
      <p>In the 1960s, the <!--del_lnk--> Massachusetts Institute of Technology, AT&amp;T Bell Labs, and <!--del_lnk--> General Electric worked on an experimental operating system called <!--del_lnk--> Multics (<b>Mult</b>iplexed <b>I</b>nformation and <b>C</b>omputing <b>S</b>ervice), which was designed to run on the <!--del_lnk--> GE-645 <!--del_lnk--> mainframe computer. The aim was the creation of a commercial product, although this was never a great success. Multics was an interactive operating system with many novel capabilities, including enhanced <!--del_lnk--> security. The project did develop production releases, but initially these releases performed poorly.<p>AT&amp;T Bell Labs pulled out and deployed its resources elsewhere. One of the developers on the Bell Labs team, Ken Thompson, continued to develop for the GE-645 mainframe, and wrote a game for that computer called <!--del_lnk--> Space Travel. However, he found that the game was too slow on the GE machine and was costly, costing $75 per execution in scarce computing time.<div class="thumb tright">
       <div style="width:252px;"><a class="internal" href="../../images/140/14045.png.htm" title="A partial list of simultaneously-running processes on a UNIX system."><img alt="A partial list of simultaneously-running processes on a UNIX system." height="121" longdesc="/wiki/Image:Unix-process-list.png" src="../../images/140/14045.png" width="250" /></a><div class="thumbcaption">
         <div class="magnify" style="float:right"><a class="internal" href="../../images/140/14045.png.htm" title="Enlarge"><img alt="Enlarge" height="11" src="../../images/0/1.png" width="15" /></a></div> A partial list of simultaneously-running processes on a UNIX system.</div>
       </div>
      </div>
      <p>Thompson thus re-wrote the game in <!--del_lnk--> assembly language for <!--del_lnk--> Digital Equipment Corporation&#39;s <!--del_lnk--> PDP-7 with help from Dennis Ritchie. This experience, combined with his work on the Multics project, led Thompson to start a new operating system for the PDP-7. Thompson and Ritchie led a team of developers, including <!--del_lnk--> Rudd Canaday, at Bell Labs developing a file system as well as the new multi-tasking operating system itself. They included a command line interpreter and some small utility programs.<p><a name="1970s"></a><h3> <span class="mw-headline">1970s</span></h3>
      <p>In 1970, the project was named <b>Unics</b>, short for <b>Un</b>iplexed <b>I</b>nformation and <b>C</b>omputing <b>S</b>ystem, and could support two simultaneous users. The name has been attributed to <!--del_lnk--> Brian Kernighan, and was a play on <i>Multics</i> - Unix would do one thing, and do it well, rather than the overly general and bloated Multics system. The spelling was later changed to Unix.<p>Up until this point there had been no financial support from Bell Labs. When the Computer Science Research Group wanted to use Unix on a much larger machine than the PDP-7, Thompson and Ritchie managed to trade the promise of adding text processing capabilities to Unix for a <!--del_lnk--> PDP-11/20 machine. This led to some financial support from Bell. For the first time in 1970, the UNIX Operating System was officially named and ran on the PDP-11/20. It added a text formatting program called <!--del_lnk--> roff and a <!--del_lnk--> text editor. All three were written in PDP-11/20 assembly language. Bell Labs used this initial &quot;text processing system&quot;, made up of Unix, roff, and the editor, for text processing of <!--del_lnk--> patent applications. Roff soon evolved into <!--del_lnk--> troff, the first electronic publishing program with a full <!--del_lnk--> typesetting capability. The <i>UNIX Programmer&#39;s Manual</i> was published on <!--del_lnk--> November 3, <!--del_lnk--> 1971.<p>In 1973, the decision was made to re-write Unix in the C programming language. The change meant that it was easier to modify Unix to work on other machines (thus becoming portable), and other developers could create variations. The code was now more concise and compact, leading to accelerated development of Unix. AT&amp;T made Unix available to universities and commercial firms, as well as the <!--del_lnk--> United States government under licenses. The licenses included all source code except for the machine-dependent kernel, which was written in PDP-11 assembly code. However, copies of the annotated Unix machine-dependent kernel circulated widely in the late 1970s in the form of a much-copied book by <!--del_lnk--> John Lions of the <!--del_lnk--> University of New South Wales, the <i><!--del_lnk--> Lions&#39; Commentary on UNIX 6th Edition, with Source Code</i>, which led to considerable adoption of Unix as an educational operating system.<p>Versions of the Unix system were determined by editions of its user manuals, so that (for example) &quot;Fifth Edition UNIX&quot; and &quot;UNIX Version 5&quot; have both been used to designate the same thing. Development expanded, with Versions 4, 5, and <!--del_lnk--> 6 being released by 1975. These versions added the concept of pipes, leading to the development of a more modular code-base, increasing development speed still further. Version 5 and especially Version 6 led to a plethora of different Unix versions both inside and outside Bell Labs, including <!--del_lnk--> PWB/UNIX, <!--del_lnk--> IS/1 (the first commercial Unix), and the <!--del_lnk--> University of Wollongong&#39;s port to the <!--del_lnk--> Interdata 7/32 (the first non-PDP Unix).<p>In 1978, <!--del_lnk--> UNIX/32V, for the <!--del_lnk--> VAX system, was released. By this time, over 600 machines were running Unix in some form. <!--del_lnk--> Version 7 Unix, the last version of <!--del_lnk--> Research Unix to be released widely, was released in 1979. Versions <!--del_lnk--> 8, <!--del_lnk--> 9 and <!--del_lnk--> 10 were developed through the 1980s but were only ever released to a few universities, though they did generate papers describing the new work. This research led to the development of <!--del_lnk--> Plan 9 from Bell Labs, a new portable distributed system.<p><a name="1980s"></a><h3> <span class="mw-headline">1980s</span></h3>
      <div class="thumb tright">
       <div style="width:252px;"><a class="internal" href="../../images/140/14046.png.htm" title="Editing a shell script using the ed editor. The dollar-sign at the top of the screen is the prompt printed by the shell. &#39;ed&#39; is typed to start the editor, which takes over from that point on the screen downwards."><img alt="Editing a shell script using the ed editor. The dollar-sign at the top of the screen is the prompt printed by the shell. &#39;ed&#39; is typed to start the editor, which takes over from that point on the screen downwards." height="122" longdesc="/wiki/Image:Unix-ed-shellscript.png" src="../../images/140/14046.png" width="250" /></a><div class="thumbcaption">
         <div class="magnify" style="float:right"><a class="internal" href="../../images/140/14046.png.htm" title="Enlarge"><img alt="Enlarge" height="11" src="../../images/0/1.png" width="15" /></a></div> Editing a shell script using the <i><!--del_lnk--> ed</i> editor. The dollar-sign at the top of the screen is the prompt printed by the shell. &#39;ed&#39; is typed to start the editor, which takes over from that point on the screen downwards.</div>
       </div>
      </div>
      <p>AT&amp;T now licensed <!--del_lnk--> UNIX System III, based largely on Version 7, for commercial use, the first version launching in 1982. This also included support for the VAX. AT&amp;T continued to issue licenses for older Unix versions. To end the confusion between all its differing internal versions, AT&amp;T combined them into <!--del_lnk--> UNIX System V Release 1. This introduced a few features such as the <!--del_lnk--> vi editor and <!--del_lnk--> curses from the <!--del_lnk--> Berkeley Software Distribution of Unix developed at the <!--del_lnk--> University of California, Berkeley. This also included support for the <!--del_lnk--> Western Electric 3B series of machines.<p>Since the newer commercial UNIX licensing terms were not as favorable for academic use as the older versions of Unix, the Berkeley researchers continued to develop BSD Unix as an alternative to UNIX System III and V, originally on the PDP-11 architecture (the 2.xBSD releases, ending with 2.11BSD) and later for the VAX-11 (the 4.x BSD releases). Many contributions to Unix first appeared on BSD systems, notably the <!--del_lnk--> C shell with <!--del_lnk--> job control (modelled on <!--del_lnk--> ITS), Perhaps the most important aspect of the BSD development effort was the addition of <!--del_lnk--> TCP/IP <!--del_lnk--> network code to the mainstream Unix <!--del_lnk--> kernel. The BSD effort produced several significant releases that contained network code: 4.1cBSD, 4.2BSD, 4.3BSD, 4.3BSD-Tahoe (&quot;Tahoe&quot; being the nickname of the CCI Power 6/32 architecture that was the first non-DEC release of the BSD kernel), Net/1, 4.3BSD-Reno (to match the &quot;Tahoe&quot; naming, and that the release was something of a gamble), Net/2, 4.4BSD, and 4.4BSD-lite. The network code found in these releases is the ancestor of almost all TCP/IP network code in use today, including code that was later released in AT&amp;T System V UNIX and <a href="../../wp/m/Microsoft_Windows.htm" title="Microsoft Windows">Microsoft Windows</a>. The accompanying <!--del_lnk--> Berkeley Sockets <!--del_lnk--> API is a de facto standard for networking APIs and has been copied on many platforms.<p>Other companies began to offer commercial versions of the UNIX System for their own mini-computers and workstations. Most of these new Unix flavours were developed from the System V base under a license from AT&amp;T; however, others were based on BSD instead. One of the leading developers of BSD, <!--del_lnk--> Bill Joy, went on to co-found <!--del_lnk--> Sun Microsystems in 1982 and create <!--del_lnk--> SunOS (now <!--del_lnk--> Solaris) for their <!--del_lnk--> workstation computers. In 1980, <a href="../../wp/m/Microsoft.htm" title="Microsoft">Microsoft</a> announced its first Unix for <!--del_lnk--> 16-bit microcomputers called <!--del_lnk--> Xenix, which the <!--del_lnk--> Santa Cruz Operation (SCO) ported to the <!--del_lnk--> Intel 8086 processor in 1983, and eventually branched Xenix into <!--del_lnk--> SCO UNIX in 1989.<p>In 1984, an industry group called <!--del_lnk--> X/Open was formed, with the aim of forming compatible open systems, that is, standardizing the UNIX environment. By the mid-1980s, the (largely gratuitous) incompatibilities between competing versions of Unix, popularly called &quot;the <!--del_lnk--> Unix wars,&quot; were seen as hindering the adoption of Unix in a marketplace that was beginning to be dominated by <a href="../../wp/m/Microsoft.htm" title="Microsoft">Microsoft</a>&#39;s operating systems. Inspired to some extent by the development of dual-mode (AT&amp;T/BSD) versions of Unix, the <!--del_lnk--> IEEE Working Group P1003 developed the first <!--del_lnk--> POSIX standard for a Unix-based <!--del_lnk--> application programming interface, published in 1988.<p>AT&amp;T added various features into UNIX System V, such as <!--del_lnk--> file locking, <!--del_lnk--> system administration, <!--del_lnk--> streams, the <!--del_lnk--> Remote File System and <!--del_lnk--> TLI. AT&amp;T cooperated with Sun Microsystems and between 1987 and 1989 merged features from <!--del_lnk--> Xenix, BSD, SunOS, and System V into <!--del_lnk--> System V Release 4 (SVR4), independently of X/Open. This new release consolidated all the previous features into one package, and heralded the end of competing versions. It also increased licensing fees.<p><a name="1990s"></a><h3> <span class="mw-headline">1990s</span></h3>
      <p>In 1990, the <!--del_lnk--> Open Software Foundation released OSF/1, their standard Unix implementation, based on <!--del_lnk--> Mach and BSD. The Foundation was started in 1988 and was funded by several Unix-related companies that wished to counteract the collaboration of AT&amp;T and Sun on SVR4. Subsequently, AT&amp;T and another group of licensees formed the group &quot;<!--del_lnk--> UNIX International&quot; in order to counteract OSF. This escalation of conflict between competing vendors gave rise to the phrase &quot;<!--del_lnk--> Unix wars&quot;.<p>In 1991, a group of BSD developers (Donn Seeley, Mike Karels, Bill Jolitz, and Trent Hein) left the University of California to found Berkeley Software Design, Inc (<!--del_lnk--> BSDI). BSDI produced a fully functional commercial version of BSD Unix for the inexpensive and ubiquitous Intel platform, which started a wave of interest in the use of inexpensive hardware for production computing. Shortly after it was founded, Bill Jolitz left BSDI to pursue distribution of <!--del_lnk--> 386BSD, the free software ancestor of <!--del_lnk--> FreeBSD, <a href="../../wp/o/OpenBSD.htm" title="OpenBSD">OpenBSD</a>, and <!--del_lnk--> NetBSD.<p>By 1993 most of the commercial vendors of UNIX had changed their commercial variants of Unix to be based on <!--del_lnk--> System V with many BSD features added on top. The creation of the <!--del_lnk--> COSE initiative that year by the major players in Unix marked the end of the most notorious phase of the Unix wars, and was followed by the merger of UI and OSF in 1994. The new combined entity, which retained the OSF name, stopped work on OSF/1 that year. By that time the only vendor using it was <!--del_lnk--> Digital, which continued its own development, rebranding their product <!--del_lnk--> Digital UNIX in early 1995.<p>Shortly after UNIX System V Release 4 was produced, AT&amp;T sold all its rights to UNIX to Novell. (Dennis Ritchie likened this to the Biblical story of <!--del_lnk--> Esau selling his birthright for the proverbial &quot;<!--del_lnk--> mess of pottage&quot;.) Novell developed its own version, <!--del_lnk--> UnixWare, merging its <!--del_lnk--> NetWare with UNIX System V Release 4. Novell tried to use this to battle against <!--del_lnk--> Windows NT, but their core markets suffered considerably.<p>In 1993, Novell decided to transfer the UNIX <!--del_lnk--> trademark and certification rights to the <!--del_lnk--> X/Open Consortium.<!--del_lnk-->  In 1996, X/Open merged with <!--del_lnk--> OSF, creating the <!--del_lnk--> Open Group. Various standards by the Open Group now define what is and what is not a &quot;UNIX&quot; operating system, notably the post-1998 <!--del_lnk--> Single UNIX Specification.<p>In 1995, the business of administration and support of the existing UNIX licenses plus rights to further develop the System V code base were sold by Novell to the Santa Cruz Operation.<!--del_lnk-->  Whether Novell also sold the copyrights is currently the subject of litigation (see below).<p><a name="2000_to_present"></a><h3> <span class="mw-headline">2000 to present</span></h3>
      <p>In 2000, SCO sold its entire UNIX business and assets to Caldera Systems, which later on changed its name to The SCO Group. This new player then started legal action against various users and vendors of Linux. SCO have alleged that Linux contains copyrighted Unix code now owned by The SCO Group. Other allegations include trade-secret violations by <!--del_lnk--> IBM, or contract violations by former Santa Cruz customers who have since converted to Linux. However, Novell disputed the SCO group&#39;s claim to hold copyright on the UNIX source base. According to Novell, SCO (and hence the SCO Group) are effectively franchise operators for Novell, which also retained the core copyrights, veto rights over future licensing activities of SCO, and 95% of the licensing revenue. The SCO Group disagreed with this, and the dispute had resulted in the <!--del_lnk--> SCO v. Novell lawsuit.<p>In 2005, <!--del_lnk--> Sun Microsystems released the bulk of its Solaris system code (based on <!--del_lnk--> UNIX System V Release 4) into an <a href="../../wp/o/Open_source.htm" title="Open source">open source</a> project called <!--del_lnk--> OpenSolaris. New Sun OS technologies such as the <!--del_lnk--> ZFS file system are now first released as open source code via the OpenSolaris project; <!--del_lnk--> as of 2006 it has spawned several non-Sun distributions such as SchilliX, Belenix, Nexenta and MartuX.<p>The <!--del_lnk--> Dot-com crash has led to significant consolidation of UNIX users as well. Of the many commercial flavours of UNIX that were born in the 1980s, only <!--del_lnk--> Solaris, <!--del_lnk--> HP-UX, and <!--del_lnk--> AIX are still doing relatively well in the market. Of these, Solaris has the most market share, and may be becoming more popular now that it is <!--del_lnk--> Open Source.<p><a id="Standards" name="Standards"></a><h2> <span class="mw-headline">Standards</span></h2>
      <p>Beginning in the late 1980s, an open operating system standardization effort now known as <!--del_lnk--> POSIX provided a common baseline for all operating systems; <!--del_lnk--> IEEE based POSIX around the common structure of the major competing variants of the Unix system, publishing the first POSIX standard in 1988. At around the same time a separate but very similar standard, the <!--del_lnk--> Single UNIX Specification, was also produced by the Open Group. Starting in 1998 these two standards bodies began work on merging the two standards, and they are now identical.<p>In an effort towards compatibility, several Unix system vendors agreed on SVR4&#39;s <!--del_lnk--> Executable and Linkable Format (ELF) as standard for binary and object code files. The common format allows substantial binary compatibility among Unix systems operating on the same CPU architecture.<p>The directory layout of some systems, particularly on Linux, is defined by the <!--del_lnk--> Filesystem Hierarchy Standard. This type of standard however is controversial, and even within the Linux community its adoption is far from universal.<p><a id="Components" name="Components"></a><h2> <span class="mw-headline">Components</span></h2>
      <p>The UNIX system is composed of several components that are normally packaged together. By including &mdash; in addition to the <!--del_lnk--> kernel of an operating system &mdash; the development environment, libraries, documents, and the portable, modifiable source-code for all of these components, UNIX was a self-contained software system. This was one of the key reasons it emerged into an important teaching and learning tool and had such a broad influence.<p>Inclusion of these components did not make the system large &mdash; the original V7 UNIX distribution, consisting of copies of all of the compiled binaries plus all of the source code and documentation occupied less than 10Mb, and arrived on a single 9-track magtape. The printed documentation was contained in two fairly thin books.<p>The names and filesystem locations of the Unix components has changed substantially across the history of the system. Nonetheless, the V7 implementation is considered by many to have the canonical early structure:<ul>
       <li><b>Kernel</b> &mdash; originally found in /usr/sys, and composed of several sub-components: <ul>
         <li><i>conf</i> &mdash; originally found in /usr/sys/conf, and composed of configuration and machine-dependent parts, often including boot code<li><i>dev</i> &mdash; Device drivers (originally /usr/sys/dev) for control of hardware (and sometimes pseudo-hardware)<li><i>sys</i> &mdash; The &quot;kernel&quot; of the operating system, handling memory management, system calls, etc.<li><i>h</i> (or <i>include</i>) &mdash; Header files, generally defining key interfaces within the system, and important system-specific invariables</ul>
       <li><b>Development Environment</b> &mdash; Most implementations of Unix contained a development environment sufficient to recreate the system from source code. The development environment included: <ul>
         <li><i>cc</i> &mdash; The C language compiler (first appearing in V3 Unix)<li><i>as</i> &mdash; The machine-language assembler for the machine<li><i>ld</i> &mdash; The linker, for combining object files<li><i>lib</i> &mdash; Libraries. Originally <i>libc</i>, the system library with C run-time support, was the primary library, but there have always been additional libraries for such things as mathematical functions (<i>libm</i>) or database access. V7 Unix introduced the first version of the modern &quot;Standard I/O&quot; library <i>stdio</i> as part of the system library. Later implementations multiplied the number and type of libraries significantly.<li><i><!--del_lnk--> make</i> - The build manager (introduced in <!--del_lnk--> PWB/UNIX), designed to effectively automate the build process<li><i>include</i> &mdash; Header files for software development, defining standard interfaces and system invariants<li>Other (secondary) languages &mdash; V7 Unix contained a Fortran-77 compiler, a programmable calculator, and the <!--del_lnk--> awk &quot;scripting&quot; language, and other versions and implementations have or now contain many other language compilers and toolsets. Early BSD releases included <!--del_lnk--> Pascal programming language tools, and many modern Unix systems also include the <!--del_lnk--> GNU Compiler Collection as well as or instead of a proprietary compiler system.<li>... and a number of other tools, including an object-code archive manager (<i>ar</i>), symbol-table lister, compiler-development tools (e.g. <i>yacc</i>), <i>make</i>, and debugging tools.</ul>
       <li><b>Commands</b> &mdash; Most Unix implementations make little distinction between commands (user-level programs) for system operation and maintenance (e.g. <i>cron</i>), commands of general utility (e.g. <i>grep</i>), and more general-purpose applications such as the text formatting and typesetting package. Nonetheless, some major categories are: <ul>
         <li><i>sh</i> &mdash; The Shell, the primary user-interface on Unix before window systems appeared, and the centre of the command environment. To degrees that varied in different shell implementations, external programs (such as <i>expr</i>) were relied on by the shell.<li><i>Utilities</i> &mdash; the core of the Unix command set, including <i>ls</i>, <i>grep</i>, <i>find</i> and many others. This category could be subcategorized: <ul>
           <li><i>System utilities</i> &mdash; such as <i>mkfs</i>, <i>fsck</i>, and many others; and<li><i>User utilities</i> &mdash; <i>passwd</i>, <i>kill</i>, and others.</ul>
         <li><i>Document formatting</i> &mdash; Unix systems were used from the outset for document preparation and typesetting systems, and included many related programs such as <i><!--del_lnk--> nroff</i>, <i><!--del_lnk--> troff</i>, <i><!--del_lnk--> tbl</i>, <i><!--del_lnk--> eqn</i>, <i><!--del_lnk--> refer</i>, and <i><!--del_lnk--> pic</i>. Some systems also include more advanced packages such as <a href="../../wp/t/TeX.htm" title="TeX">TeX</a> and <!--del_lnk--> GhostScript.<li><i>Graphics</i> &mdash; The <i>plot</i> subsystem provided facilities for producing simple vector plots in a device-independent format, with device-specific interpreters to display such files. Modern Unix systems also generally include <a href="../../wp/x/X_Window_System.htm" title="X11">X11</a> as a standard windowing system and <!--del_lnk--> GUI, and many support <!--del_lnk--> OpenGL.<li><i>Communications</i> &mdash; early Unix systems contained no inter-system communication, but did include the inter-user communication programs <i>mail</i> and <i>write</i>. V7 introduced the early inter-system communication system <i><!--del_lnk--> UUCP</i>, and systems beginning with BSD release 4.1c included <!--del_lnk--> TCP/IP utilities.</ul>
      </ul>
      <div class="thumb tright">
       <div style="width:152px;"><a class="internal" href="../../images/140/14049.png.htm" title="The &#39;man&#39; command can display a &#39;man page&#39; for every command on the system, including itself."><img alt="The &#39;man&#39; command can display a &#39;man page&#39; for every command on the system, including itself." height="73" longdesc="/wiki/Image:Man-man.png" src="../../images/140/14049.png" width="150" /></a><div class="thumbcaption">
         <div class="magnify" style="float:right"><a class="internal" href="../../images/140/14049.png.htm" title="Enlarge"><img alt="Enlarge" height="11" src="../../images/0/1.png" width="15" /></a></div> The &#39;man&#39; command can display a &#39;man page&#39; for every command on the system, including itself.</div>
       </div>
      </div>
      <ul>
       <li><b>Documentation</b> &mdash; Unix was the first operating system to include all of its documentation online in machine-readable form. The documentation included: <ul>
         <li><i>man</i> &mdash; Manual pages for each command, library component, system call, header file, etc.<li><i>doc</i> &mdash; Longer documents detailing major subsystems, such as the C language and <i>troff</i></ul>
      </ul>
      <p><a id="Impact" name="Impact"></a><h2> <span class="mw-headline">Impact</span></h2>
      <p>The Unix system had a great impact on other operating systems. Unix has been called &quot;the most important operating system you may never use.&quot;<p>Following the lead of <!--del_lnk--> Multics, it was written in high level language as opposed to <!--del_lnk--> assembly (assembly had been necessary for achieving acceptable performance on early computers).<p>It had a drastically simplified file model compared to many contemporary operating systems, treating all kinds of files as simple byte arrays. The file system hierarchy contained machine services and devices (such as <!--del_lnk--> printers, <!--del_lnk--> terminals, or <!--del_lnk--> disk drives), providing a uniform interface, but at the expense of occasionally requiring additional mechanisms such as <!--del_lnk--> ioctl and mode flags to access features of the hardware that did not fit the simple &quot;stream of bytes&quot; model. The <!--del_lnk--> Plan 9 operating system pushed this model even further and eliminated the need for additional mechanisms.<p>Unix also popularized the hierarchical file system with arbitrarily nested subdirectories, originally introduced by Multics. Other common operating systems of the era had ways to divide a storage device into multiple directories or sections, but they were a fixed number of levels and often only one level. The major proprietary operating systems all added recursive subdirectory capabilities also patterned after Multics. DEC&#39;s <!--del_lnk--> RSTS programmer/project hierarchy evolved into <!--del_lnk--> VMS directories, <!--del_lnk--> CP/M&#39;s volumes evolved into <!--del_lnk--> MS-DOS 2.0+ subdirectories, and HP&#39;s <!--del_lnk--> MPE group.account hierarchy and IBM&#39;s <!--del_lnk--> System 36 and <!--del_lnk--> OS/400 library systems were folded into broader POSIX file systems.<p>Making the command interpreter an ordinary user-level program, with additional commands provided as separate programs, was another Multics innovation popularized by Unix. The <!--del_lnk--> Unix shell used the same language for interactive commands as for scripting (<!--del_lnk--> shell scripts &mdash; there was no separate job control language, like IBM&#39;s <!--del_lnk--> JCL for example). Since the shell and OS commands were &quot;just another program&quot;, the user could choose (or even write) his/her own shell. Finally, new commands could be added without <!--del_lnk--> recompiling the shell. Unix&#39;s innovative command-line syntax for creating chains of producer-consumer processes (<!--del_lnk--> pipelines) made a powerful programming technique (<!--del_lnk--> coroutines) widely available. Many later command-line interpreters have been more or less inspired by the Unix shell.<p>A fundamental simplifying assumption of Unix was its focus on ASCII text for nearly all of its file formats. There were no &quot;binary&quot; editors in the original version of Unix &mdash; the entire system was configured using textual shell command scripts. The common denominator in the I/O system is the byte &mdash; unlike &quot;record-based&quot; file systems in other computers. The focus on text for representing nearly everything made Unix pipes useful. The focus on text and bytes made the system far more scalable and portable than other systems. Over time text-based applications have also won in application areas, such as printing languages (<!--del_lnk--> PostScript &mdash; not <!--del_lnk--> InterPress, an earlier effort by the same people), and when feasible, at the application layer of the <!--del_lnk--> Internet Protocols, i.e. Telnet, FTP, SMTP, HTTP, SIP, XML, etc.<p>Unix popularised a syntax for <!--del_lnk--> regular expressions that found much wider use. The Unix programming interface became the basis for a standard operating system interface (POSIX, see above).<p>The <!--del_lnk--> C programming language, now ubiquitous in systems and applications programming, originated under Unix, and spread more quickly than Unix.<p>Early Unix developers were important in bringing the theory of <!--del_lnk--> modularity and <!--del_lnk--> reusability into <!--del_lnk--> software engineering practice.<p>Unix provided the TCP/IP networking protocol on relatively inexpensive computers, which contributed to the <a href="../../wp/i/Internet.htm" title="Internet">Internet</a> explosion of world-wide real-time connectivity. This also exposed numerous security holes in its networking implementations, which formed the basis for implementations on many other platforms.<p>The Unix policy of extensive on-line documentation and (for many years) ready access to all system source code raised programmer expectations, contributing to the <!--del_lnk--> Open Source movement.<p>Over time, the leading developers of Unix (and programs that ran on it) developed a set of cultural norms for developing software, norms which became as important and influential as the technology of Unix itself; this has been termed the <!--del_lnk--> Unix philosophy.<p><a name="2038"></a><h3> <span class="mw-headline">2038</span></h3>
      <dl>
       <dd>
      </dl>
      <p>Unix stores time values as the number of seconds from midnight <!--del_lnk--> January 1, <!--del_lnk--> 1970 (the &quot;<!--del_lnk--> Unix Epoch&quot;) in variables of type <code>time_t</code>, historically defined as &quot;signed 32-bit integer&quot;. On <!--del_lnk--> January 19, <!--del_lnk--> 2038, the current time will roll over from a zero followed by 31 ones to a one followed by 31 zeros, which will reset time to the year 1901 or 1970, depending on implementation. As many applications use OS library routines for date calculations, the impact of this could be felt much earlier than 2038; for instance, 30-year mortgages may be calculated incorrectly beginning in the year <!--del_lnk--> 2008.<p>Since times before 1970 are rarely represented in <!--del_lnk--> Unix time, one possible solution that is compatible with existing binary formats would be to redefine <code>time_t</code> as &quot;unsigned 32-bit integer&quot;. However, such a <!--del_lnk--> kludge merely postpones the problem to <!--del_lnk--> February 7, <!--del_lnk--> 2106, and could introduce bugs in software that needed to compare differences between two sets of time.<p>Some Unix versions have already addressed this. For example, in Solaris on 64-bit systems, <code>time_t</code> is 64 bits long, meaning that the OS itself and 64-bit applications will correctly handle dates for some 292 billion years (several times greater than the <!--del_lnk--> age of the universe). Existing 32-bit applications using a 32-bit <code>time_t</code> continue to work on 64-bit Solaris systems but are still prone to the 2038 problem.<p><a id="Free_Unix-like_operating_systems" name="Free_Unix-like_operating_systems"></a><h2> <span class="mw-headline">Free Unix-like operating systems</span></h2>
      <div class="thumb tright">
       <div style="width:252px;"><a class="internal" href="../../images/140/14050.jpg.htm" title="Linux is a modern Unix-like system"><img alt="Linux is a modern Unix-like system" height="200" longdesc="/wiki/Image:Linux-cluttered-desktop.jpg" src="../../images/140/14050.jpg" width="250" /></a><div class="thumbcaption">
         <div class="magnify" style="float:right"><a class="internal" href="../../images/140/14050.jpg.htm" title="Enlarge"><img alt="Enlarge" height="11" src="../../images/0/1.png" width="15" /></a></div> Linux is a modern Unix-like system</div>
       </div>
      </div>
      <p>In 1983, <a href="../../wp/r/Richard_Stallman.htm" title="Richard Stallman">Richard Stallman</a> announced the GNU project, an ambitious effort to create a <!--del_lnk--> free software <!--del_lnk--> Unix-like system; &quot;free&quot; in that everyone who received a copy would be free to use, study, modify, and redistribute it. GNU&#39;s goal was achieved in 1992. Its own kernel development project, <!--del_lnk--> GNU Hurd, had not produced a working kernel, but a compatible kernel called <!--del_lnk--> Linux was released as free software in 1992 under the <!--del_lnk--> GNU General Public License. The combination of the two is frequently referred to simply as &quot;Linux&quot;, although the Free Software Foundation and some <!--del_lnk--> Linux distributions, such as <!--del_lnk--> Debian GNU/Linux, use the combined term GNU/Linux. Work on GNU Hurd continues, although very slowly.<p>In addition to their use in the Linux operating system, many GNU packages &mdash; such as the <!--del_lnk--> GNU Compiler Collection (and the rest of the <!--del_lnk--> GNU toolchain), the <!--del_lnk--> GNU C library and the <!--del_lnk--> GNU core utilities &mdash; have gone on to play central roles in other free Unix systems as well.<p>Linux distributions, comprising Linux and large collections of compatible software have become popular both with hobbyists and in business. Popular distributions include <!--del_lnk--> Red Hat Enterprise Linux, <!--del_lnk--> SUSE Linux, <!--del_lnk--> Mandriva Linux, <a href="../../wp/f/Fedora_Core.htm" title="Fedora Core">Fedora Core</a>, <a href="../../wp/u/Ubuntu_%2528Linux_distribution%2529.htm" title="Ubuntu (Linux distribution)">Ubuntu</a>, <!--del_lnk--> Debian GNU/Linux and <!--del_lnk--> Gentoo.<p>A free derivative of <!--del_lnk--> BSD Unix, <!--del_lnk--> 386BSD, was also released in 1992 and led to the <!--del_lnk--> NetBSD and <!--del_lnk--> FreeBSD projects. With the 1994 settlement of a lawsuit that <!--del_lnk--> UNIX Systems Laboratories brought against the University of California and Berkeley Software Design Inc. (<!--del_lnk--> USL v. BSDi), it was clarified that Berkeley had the right to distribute BSD Unix &mdash; for free, if it so desired. Since then, BSD Unix has been developed in several different directions, including the <a href="../../wp/o/OpenBSD.htm" title="OpenBSD">OpenBSD</a> and <!--del_lnk--> DragonFly BSD variants.<p>Linux and the BSD kin are now rapidly occupying the market traditionally occupied by proprietary UNIX operating systems, as well as expanding into new markets such as the consumer desktop and mobile and embedded devices. A measure of this success may be seen when <!--del_lnk--> Apple Computer sought out a new foundation for its Macintosh operating system: it chose <!--del_lnk--> NEXTSTEP, an operating system developed by <!--del_lnk--> NeXT with a freely redistributable core operating system, renamed <!--del_lnk--> Darwin after Apple acquired it. It was based on the BSD family and the <!--del_lnk--> Mach kernel. The deployment of Darwin BSD Unix in Mac OS X makes it, according to a statement made by an Apple employee at a <!--del_lnk--> USENIX conference, the most widely used Unix-based system in the <!--del_lnk--> desktop computer market. Due to the modularity of the Unix design, sharing bits and pieces is relatively common; consequently, most or all Unix and Unix-like systems include at least some BSD code, and modern BSDs also typically include some GNU utilities in their distribution, so Apple&#39;s combination of parts from NeXT and FreeBSD with Mach and some GNU utilities has precedent.<p>In 2005, <!--del_lnk--> Sun Microsystems released the bulk of the source code to the <!--del_lnk--> Solaris operating system, a System V variant, under the name <!--del_lnk--> OpenSolaris, making it the first actively developed commercial Unix system to be <a href="../../wp/o/Open_source.htm" title="Open source">open sourced</a> (several years earlier, Caldera had released many of the older Unix systems under an educational and later <!--del_lnk--> BSD license. As a result, a great deal of formerly proprietary AT&amp;T/USL code is now freely available.<p><a id="Branding" name="Branding"></a><h2> <span class="mw-headline">Branding</span></h2>
      <p>In October 1993, Novell, the company that owned the rights to the Unix System V source at the time, transferred the <!--del_lnk--> trademarks of Unix to the X/Open Company (now <!--del_lnk--> The Open Group), and in 1995 sold the related business operations to <!--del_lnk--> Santa Cruz Operation. Whether Novell also sold the <!--del_lnk--> copyrights to the actual software is <!--del_lnk--> currently the subject of litigation in a federal lawsuit, <!--del_lnk--> SCO v. Novell. UNIX vendor <!--del_lnk--> SCO Group Inc. accused <!--del_lnk--> Novell of <!--del_lnk--> slander of title.<p>The present owner of the <!--del_lnk--> trademark <i>UNIX</i> is <!--del_lnk--> The Open Group, an industry standards consortium. Only systems fully compliant with and certified to the <!--del_lnk--> Single UNIX Specification qualify as &quot;UNIX&quot; (others are called &quot;Unix system-like&quot; or &quot;<!--del_lnk--> Unix-like&quot;). The term UNIX is not an acronym, but follows the early convention of naming computer systems in capital letters, such as <!--del_lnk--> ENIAC and <!--del_lnk--> MISTIC.<p>By decree of The Open Group, the term &quot;UNIX&quot; refers more to a class of operating systems than to a specific implementation of an operating system; those operating systems which meet The Open Group&#39;s <!--del_lnk--> Single UNIX Specification should be able to bear the <!--del_lnk--> UNIX 98 or <!--del_lnk--> UNIX 03 trademarks today, after the operating system&#39;s vendor pays a fee to The Open Group. Systems licensed to use the UNIX&reg; trademark include AIX, HP-UX, <!--del_lnk--> IRIX, Solaris, <!--del_lnk--> Tru64, <!--del_lnk--> A/UX and a part of <!--del_lnk--> z/OS. Apple Computer have stated that they will be submitting Mac OS X 10.5 and Mac OS 10.5 Server to The Open Group for certification as a UNIX 03 system.<p>In practice, the term, especially when written as &quot;<!--del_lnk--> Un*x&quot;, &quot;*NIX&quot;, or &quot;*N?X&quot; is applied to a number of other multiuser POSIX-based systems such as GNU/Linux, Mac OS X and FreeBSD that do not seek UNIX branding because the royalties would be too expensive for a product marketed to consumers or freely available over the Internet; this would mean that &quot;Unix&quot; has become a label for a variety of products, much like a <!--del_lnk--> genericized trademark. To avoid this, The Open Group requests that &quot;UNIX&quot; is always used as an adjective followed by a generic term such as &quot;system&quot;.<p>The term &quot;Unix&quot; is also used, and in fact was the original capitalisation, but the name UNIX stuck because, in the words of <a href="../../wp/d/Dennis_Ritchie.htm" title="Dennis Ritchie">Dennis Ritchie</a> &quot;when presenting the original Unix paper to the third <!--del_lnk--> Operating Systems Symposium of the American <!--del_lnk--> Association for Computing Machinery, we had just acquired a new typesetter and were intoxicated by being able to produce small caps&quot; (quoted from the <!--del_lnk--> Jargon File, version 4.3.3, <!--del_lnk--> 20 September 2002). Additionally, it should be noted that many of the operating system&#39;s predecessors and contemporaries used all-uppercase lettering, because many computer terminals of the time could not produce lower-case letters, so many people wrote the name in upper case due to force of habit.<p>Several plural forms of Unix are used to refer to multiple brands of Unix and Unix-like systems. Most common is the conventional &quot;<b>Unixes</b>&quot;, but the <!--del_lnk--> hacker culture which created Unix has a penchant for playful use of language, and &quot;<b>Unices</b>&quot; (treating Unix as <a href="../../wp/l/Latin.htm" title="Latin">Latin</a> word) is also popular. The <!--del_lnk--> Anglo-Saxon plural form &quot;Unixen&quot; is not common, although occasionally seen.<p>UNIX is also a trademarked name for a brand of carpet. However, US Trademark laws allow duplicate names if the products, as in this case, are easily distinguishable.<p><a id="Common_Unix_commands" name="Common_Unix_commands"></a><h2> <span class="mw-headline">Common Unix commands</span></h2>
      <p>Widely used Unix commands include:<ul>
       <li>Directory and file creation and navigation: <code><i>ls</i> <i>cd</i> <i>pwd</i> <i>mkdir</i> <i>rm</i> <i>rmdir</i> <i>cp</i> <i>find</i> <i>touch</i></code><li>File viewing and editing: <code><i>more</i> <i>less</i> <i>ed</i> <i>vi</i> <i>emacs</i> <i>head</i> <i>tail</i></code><li>Text processing: <code><i>echo</i> <i>cat</i> <i>grep</i> <i>sort</i> <i>uniq</i> <i>sed</i> <i>awk</i> <i>cut</i> <i>tr</i> <i>split</i> <i>printf</i></code><li>File comparison: <code><i>comm</i> <i>cmp</i> <i>diff</i> <i>patch</i></code><li>Miscellaneous shell tools: <code><i>yes</i> <i>test</i> <i>xargs</i></code><li>System administration: <code><i>chmod</i> <i>chown</i> <i>ps</i> <i>su</i> <i>w</i> <i>who</i></code><li>Communication: <code><i>mail</i> <i>telnet</i> <i>ftp</i> <i>finger</i> <i>ssh</i></code></ul>
      <div class="printfooter"> Retrieved from &quot;<!--del_lnk--> http://en.wikipedia.org/wiki/Unix&quot;</div>
      <!-- end content -->
      <div class="visualClear">
      </div>
     </div>
    </div>
   </div>
   <!-- end of the left (by default at least) column -->
   <div class="visualClear">
   </div>
   <div id="footer">
    <div class="center"> This reference article is mainly selected from the English Wikipedia with only minor checks and changes (see www.wikipedia.org for details of authors and sources) and is available under the <nobr><a href="../../wp/w/Wikipedia_Text_of_the_GNU_Free_Documentation_License.htm">GNU Free Documentation License</a></nobr>. See also our <b><a href="../../disclaimer.htm">Disclaimer</a></b>. </div>
   </div>
   <script type="text/javascript">if (window.runOnloadHook) runOnloadHook();</script>
  </div>
  
 </body>
</html>
